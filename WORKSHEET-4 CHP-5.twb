<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20233.23.1017.0948                               -->
<workbook original-version='18.1' source-build='2023.3.0 (20233.23.1017.0948)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <style>
    <style-rule element='all'>
      <format attr='font-family' value='Tableau Bold' />
      <format attr='color' value='#000000' />
    </style-rule>
  </style>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='Life expectancy at birth, total (years) Parameter 2' datatype='real' name='[Life expectancy at birth, total (years) Parameter]' param-domain-type='range' role='measure' type='quantitative' value='11.994999999999999'>
        <calculation class='tableau' formula='11.994999999999999' />
        <range max='85.497560975609773' min='11.994999999999999' />
      </column>
      <column caption='Top N' datatype='integer' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='10'>
        <calculation class='tableau' formula='10' />
        <range max='100' min='1' />
      </column>
      <column caption='Unemployment % bottom N countries' datatype='integer' name='[Unemployment, total (% of total labor force) (modeled ILO estimate) Parameter]' param-domain-type='range' role='measure' type='quantitative' value='5'>
        <calculation class='tableau' formula='5' />
        <range max='100' min='1' />
      </column>
    </datasource>
    <datasource caption='Development Indicators (WorldBank Data)' inline='true' name='federated.1mtzsjy0n4xrlq11sdjbv0daimuj' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='WorldBank Data' name='excel-direct.1vhtkxp0h1ox9o16q3mm10iu979f'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/unisoft/DataSet/5. Organizing &amp; Simplifying Data part l [WorldBank Economic Indicators]/WorldBank Data.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.1vhtkxp0h1ox9o16q3mm10iu979f' name='Development Indicators' table='[&apos;Development Indicators$&apos;]' type='table'>
          <columns gridOrigin='A1:O10001:no:A1:O10001:0' header='yes' outcome='6'>
            <column datatype='string' name='Country Name' ordinal='0' />
            <column datatype='string' name='Country Code' ordinal='1' />
            <column datatype='string' name='Region' ordinal='2' />
            <column datatype='string' name='IncomeGroup' ordinal='3' />
            <column datatype='integer' name='Year' ordinal='4' />
            <column datatype='real' name='Birth rate, crude (per 1,000 people)' ordinal='5' />
            <column datatype='real' name='Death rate, crude (per 1,000 people)' ordinal='6' />
            <column datatype='real' name='Electric power consumption (kWh per capita)' ordinal='7' />
            <column datatype='integer' name='GDP (USD)' ordinal='8' />
            <column datatype='real' name='GDP per capita (USD)' ordinal='9' />
            <column datatype='real' name='Individuals using the Internet (% of population)' ordinal='10' />
            <column datatype='real' name='Infant mortality rate (per 1,000 live births)' ordinal='11' />
            <column datatype='real' name='Life expectancy at birth (years)' ordinal='12' />
            <column datatype='real' name='Population density (people per sq. km of land area)' ordinal='13' />
            <column datatype='real' name='Unemployment (% of total labor force) (modeled ILO estimate)' ordinal='14' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.1vhtkxp0h1ox9o16q3mm10iu979f' name='Development Indicators' table='[&apos;Development Indicators$&apos;]' type='table'>
          <columns gridOrigin='A1:O10001:no:A1:O10001:0' header='yes' outcome='6'>
            <column datatype='string' name='Country Name' ordinal='0' />
            <column datatype='string' name='Country Code' ordinal='1' />
            <column datatype='string' name='Region' ordinal='2' />
            <column datatype='string' name='IncomeGroup' ordinal='3' />
            <column datatype='integer' name='Year' ordinal='4' />
            <column datatype='real' name='Birth rate, crude (per 1,000 people)' ordinal='5' />
            <column datatype='real' name='Death rate, crude (per 1,000 people)' ordinal='6' />
            <column datatype='real' name='Electric power consumption (kWh per capita)' ordinal='7' />
            <column datatype='integer' name='GDP (USD)' ordinal='8' />
            <column datatype='real' name='GDP per capita (USD)' ordinal='9' />
            <column datatype='real' name='Individuals using the Internet (% of population)' ordinal='10' />
            <column datatype='real' name='Infant mortality rate (per 1,000 live births)' ordinal='11' />
            <column datatype='real' name='Life expectancy at birth (years)' ordinal='12' />
            <column datatype='real' name='Population density (people per sq. km of land area)' ordinal='13' />
            <column datatype='real' name='Unemployment (% of total labor force) (modeled ILO estimate)' ordinal='14' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Development Indicators]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:O10001:no:A1:O10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country Name]</local-name>
            <parent-name>[Development Indicators]</parent-name>
            <remote-alias>Country Name</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Development Indicators_A0764C803D724CCA94D2FB54A1BD0BAA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country Code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country Code]</local-name>
            <parent-name>[Development Indicators]</parent-name>
            <remote-alias>Country Code</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Development Indicators_A0764C803D724CCA94D2FB54A1BD0BAA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[Development Indicators]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Development Indicators_A0764C803D724CCA94D2FB54A1BD0BAA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>IncomeGroup</remote-name>
            <remote-type>130</remote-type>
            <local-name>[IncomeGroup]</local-name>
            <parent-name>[Development Indicators]</parent-name>
            <remote-alias>IncomeGroup</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Development Indicators_A0764C803D724CCA94D2FB54A1BD0BAA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[Development Indicators]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Development Indicators_A0764C803D724CCA94D2FB54A1BD0BAA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Birth rate, crude (per 1,000 people)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Birth rate, crude (per 1,000 people)]</local-name>
            <parent-name>[Development Indicators]</parent-name>
            <remote-alias>Birth rate, crude (per 1,000 people)</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Development Indicators_A0764C803D724CCA94D2FB54A1BD0BAA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Death rate, crude (per 1,000 people)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Death rate, crude (per 1,000 people)]</local-name>
            <parent-name>[Development Indicators]</parent-name>
            <remote-alias>Death rate, crude (per 1,000 people)</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Development Indicators_A0764C803D724CCA94D2FB54A1BD0BAA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Electric power consumption (kWh per capita)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Electric power consumption (kWh per capita)]</local-name>
            <parent-name>[Development Indicators]</parent-name>
            <remote-alias>Electric power consumption (kWh per capita)</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Development Indicators_A0764C803D724CCA94D2FB54A1BD0BAA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GDP (USD)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[GDP (USD)]</local-name>
            <parent-name>[Development Indicators]</parent-name>
            <remote-alias>GDP (USD)</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Development Indicators_A0764C803D724CCA94D2FB54A1BD0BAA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GDP per capita (USD)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[GDP per capita (USD)]</local-name>
            <parent-name>[Development Indicators]</parent-name>
            <remote-alias>GDP per capita (USD)</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Development Indicators_A0764C803D724CCA94D2FB54A1BD0BAA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Individuals using the Internet (% of population)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Individuals using the Internet (% of population)]</local-name>
            <parent-name>[Development Indicators]</parent-name>
            <remote-alias>Individuals using the Internet (% of population)</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Development Indicators_A0764C803D724CCA94D2FB54A1BD0BAA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Infant mortality rate (per 1,000 live births)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Infant mortality rate (per 1,000 live births)]</local-name>
            <parent-name>[Development Indicators]</parent-name>
            <remote-alias>Infant mortality rate (per 1,000 live births)</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Development Indicators_A0764C803D724CCA94D2FB54A1BD0BAA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Life expectancy at birth (years)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Life expectancy at birth (years)]</local-name>
            <parent-name>[Development Indicators]</parent-name>
            <remote-alias>Life expectancy at birth (years)</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Development Indicators_A0764C803D724CCA94D2FB54A1BD0BAA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population density (people per sq. km of land area)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Population density (people per sq. km of land area)]</local-name>
            <parent-name>[Development Indicators]</parent-name>
            <remote-alias>Population density (people per sq. km of land area)</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Development Indicators_A0764C803D724CCA94D2FB54A1BD0BAA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Unemployment (% of total labor force) (modeled ILO estimate)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Unemployment (% of total labor force) (modeled ILO estimate)]</local-name>
            <parent-name>[Development Indicators]</parent-name>
            <remote-alias>Unemployment (% of total labor force) (modeled ILO estimate)</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Development Indicators_A0764C803D724CCA94D2FB54A1BD0BAA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[Country Code]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Gdp (Usd)' datatype='integer' name='[GDP (USD)]' role='measure' type='quantitative' />
      <column caption='Income Group' datatype='string' name='[IncomeGroup]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Development Indicators' datatype='table' name='[__tableau_internal_object_id__].[Development Indicators_A0764C803D724CCA94D2FB54A1BD0BAA]' role='measure' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Development Indicators' id='Development Indicators_A0764C803D724CCA94D2FB54A1BD0BAA'>
            <properties context=''>
              <relation connection='excel-direct.1vhtkxp0h1ox9o16q3mm10iu979f' name='Development Indicators' table='[&apos;Development Indicators$&apos;]' type='table'>
                <columns gridOrigin='A1:O10001:no:A1:O10001:0' header='yes' outcome='6'>
                  <column datatype='string' name='Country Name' ordinal='0' />
                  <column datatype='string' name='Country Code' ordinal='1' />
                  <column datatype='string' name='Region' ordinal='2' />
                  <column datatype='string' name='IncomeGroup' ordinal='3' />
                  <column datatype='integer' name='Year' ordinal='4' />
                  <column datatype='real' name='Birth rate, crude (per 1,000 people)' ordinal='5' />
                  <column datatype='real' name='Death rate, crude (per 1,000 people)' ordinal='6' />
                  <column datatype='real' name='Electric power consumption (kWh per capita)' ordinal='7' />
                  <column datatype='integer' name='GDP (USD)' ordinal='8' />
                  <column datatype='real' name='GDP per capita (USD)' ordinal='9' />
                  <column datatype='real' name='Individuals using the Internet (% of population)' ordinal='10' />
                  <column datatype='real' name='Infant mortality rate (per 1,000 live births)' ordinal='11' />
                  <column datatype='real' name='Life expectancy at birth (years)' ordinal='12' />
                  <column datatype='real' name='Population density (people per sq. km of land area)' ordinal='13' />
                  <column datatype='real' name='Unemployment (% of total labor force) (modeled ILO estimate)' ordinal='14' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Development Indicators (WorldBank Data) (2)' inline='true' name='federated.0yx8flq0ifbpzg1dz5k400rlch1w' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='WorldBank Data' name='excel-direct.0o6sytz1x5jlpj10hffq10r30lam'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/unisoft/DataSet/6. Organizing &amp; Simplifying Data part ll [WorldBank Economic Indicators]/WorldBank Data.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.0o6sytz1x5jlpj10hffq10r30lam' name='Development Indicators' table='[&apos;Development Indicators$&apos;]' type='table'>
          <columns gridOrigin='A1:O10001:no:A1:O10001:0' header='yes' outcome='6'>
            <column datatype='string' name='Country Name' ordinal='0' />
            <column datatype='string' name='Country Code' ordinal='1' />
            <column datatype='string' name='Region' ordinal='2' />
            <column datatype='string' name='IncomeGroup' ordinal='3' />
            <column datatype='integer' name='Year' ordinal='4' />
            <column datatype='real' name='Birth rate, crude (per 1,000 people)' ordinal='5' />
            <column datatype='real' name='Death rate, crude (per 1,000 people)' ordinal='6' />
            <column datatype='real' name='Electric power consumption (kWh per capita)' ordinal='7' />
            <column datatype='integer' name='GDP (USD)' ordinal='8' />
            <column datatype='real' name='GDP per capita (USD)' ordinal='9' />
            <column datatype='real' name='Individuals using the Internet (% of population)' ordinal='10' />
            <column datatype='real' name='Infant mortality rate (per 1,000 live births)' ordinal='11' />
            <column datatype='real' name='Life expectancy at birth (years)' ordinal='12' />
            <column datatype='real' name='Population density (people per sq. km of land area)' ordinal='13' />
            <column datatype='real' name='Unemployment (% of total labor force) (modeled ILO estimate)' ordinal='14' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.0o6sytz1x5jlpj10hffq10r30lam' name='Development Indicators' table='[&apos;Development Indicators$&apos;]' type='table'>
          <columns gridOrigin='A1:O10001:no:A1:O10001:0' header='yes' outcome='6'>
            <column datatype='string' name='Country Name' ordinal='0' />
            <column datatype='string' name='Country Code' ordinal='1' />
            <column datatype='string' name='Region' ordinal='2' />
            <column datatype='string' name='IncomeGroup' ordinal='3' />
            <column datatype='integer' name='Year' ordinal='4' />
            <column datatype='real' name='Birth rate, crude (per 1,000 people)' ordinal='5' />
            <column datatype='real' name='Death rate, crude (per 1,000 people)' ordinal='6' />
            <column datatype='real' name='Electric power consumption (kWh per capita)' ordinal='7' />
            <column datatype='integer' name='GDP (USD)' ordinal='8' />
            <column datatype='real' name='GDP per capita (USD)' ordinal='9' />
            <column datatype='real' name='Individuals using the Internet (% of population)' ordinal='10' />
            <column datatype='real' name='Infant mortality rate (per 1,000 live births)' ordinal='11' />
            <column datatype='real' name='Life expectancy at birth (years)' ordinal='12' />
            <column datatype='real' name='Population density (people per sq. km of land area)' ordinal='13' />
            <column datatype='real' name='Unemployment (% of total labor force) (modeled ILO estimate)' ordinal='14' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Development Indicators]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:O10001:no:A1:O10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country Name]</local-name>
            <parent-name>[Development Indicators]</parent-name>
            <remote-alias>Country Name</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Development Indicators_3E8AA5047E164492BC43EC86AC2E90F1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country Code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country Code]</local-name>
            <parent-name>[Development Indicators]</parent-name>
            <remote-alias>Country Code</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Development Indicators_3E8AA5047E164492BC43EC86AC2E90F1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[Development Indicators]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Development Indicators_3E8AA5047E164492BC43EC86AC2E90F1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>IncomeGroup</remote-name>
            <remote-type>130</remote-type>
            <local-name>[IncomeGroup]</local-name>
            <parent-name>[Development Indicators]</parent-name>
            <remote-alias>IncomeGroup</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Development Indicators_3E8AA5047E164492BC43EC86AC2E90F1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[Development Indicators]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Development Indicators_3E8AA5047E164492BC43EC86AC2E90F1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Birth rate, crude (per 1,000 people)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Birth rate, crude (per 1,000 people)]</local-name>
            <parent-name>[Development Indicators]</parent-name>
            <remote-alias>Birth rate, crude (per 1,000 people)</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Development Indicators_3E8AA5047E164492BC43EC86AC2E90F1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Death rate, crude (per 1,000 people)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Death rate, crude (per 1,000 people)]</local-name>
            <parent-name>[Development Indicators]</parent-name>
            <remote-alias>Death rate, crude (per 1,000 people)</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Development Indicators_3E8AA5047E164492BC43EC86AC2E90F1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Electric power consumption (kWh per capita)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Electric power consumption (kWh per capita)]</local-name>
            <parent-name>[Development Indicators]</parent-name>
            <remote-alias>Electric power consumption (kWh per capita)</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Development Indicators_3E8AA5047E164492BC43EC86AC2E90F1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GDP (USD)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[GDP (USD)]</local-name>
            <parent-name>[Development Indicators]</parent-name>
            <remote-alias>GDP (USD)</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Development Indicators_3E8AA5047E164492BC43EC86AC2E90F1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GDP per capita (USD)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[GDP per capita (USD)]</local-name>
            <parent-name>[Development Indicators]</parent-name>
            <remote-alias>GDP per capita (USD)</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Development Indicators_3E8AA5047E164492BC43EC86AC2E90F1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Individuals using the Internet (% of population)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Individuals using the Internet (% of population)]</local-name>
            <parent-name>[Development Indicators]</parent-name>
            <remote-alias>Individuals using the Internet (% of population)</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Development Indicators_3E8AA5047E164492BC43EC86AC2E90F1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Infant mortality rate (per 1,000 live births)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Infant mortality rate (per 1,000 live births)]</local-name>
            <parent-name>[Development Indicators]</parent-name>
            <remote-alias>Infant mortality rate (per 1,000 live births)</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Development Indicators_3E8AA5047E164492BC43EC86AC2E90F1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Life expectancy at birth (years)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Life expectancy at birth (years)]</local-name>
            <parent-name>[Development Indicators]</parent-name>
            <remote-alias>Life expectancy at birth (years)</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Development Indicators_3E8AA5047E164492BC43EC86AC2E90F1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population density (people per sq. km of land area)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Population density (people per sq. km of land area)]</local-name>
            <parent-name>[Development Indicators]</parent-name>
            <remote-alias>Population density (people per sq. km of land area)</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Development Indicators_3E8AA5047E164492BC43EC86AC2E90F1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Unemployment (% of total labor force) (modeled ILO estimate)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Unemployment (% of total labor force) (modeled ILO estimate)]</local-name>
            <parent-name>[Development Indicators]</parent-name>
            <remote-alias>Unemployment (% of total labor force) (modeled ILO estimate)</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Development Indicators_3E8AA5047E164492BC43EC86AC2E90F1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[Country Code]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Gdp (Usd)' datatype='integer' name='[GDP (USD)]' role='measure' type='quantitative' />
      <column caption='Income Group' datatype='string' name='[IncomeGroup]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Development Indicators' datatype='table' name='[__tableau_internal_object_id__].[Development Indicators_3E8AA5047E164492BC43EC86AC2E90F1]' role='measure' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Development Indicators' id='Development Indicators_3E8AA5047E164492BC43EC86AC2E90F1'>
            <properties context=''>
              <relation connection='excel-direct.0o6sytz1x5jlpj10hffq10r30lam' name='Development Indicators' table='[&apos;Development Indicators$&apos;]' type='table'>
                <columns gridOrigin='A1:O10001:no:A1:O10001:0' header='yes' outcome='6'>
                  <column datatype='string' name='Country Name' ordinal='0' />
                  <column datatype='string' name='Country Code' ordinal='1' />
                  <column datatype='string' name='Region' ordinal='2' />
                  <column datatype='string' name='IncomeGroup' ordinal='3' />
                  <column datatype='integer' name='Year' ordinal='4' />
                  <column datatype='real' name='Birth rate, crude (per 1,000 people)' ordinal='5' />
                  <column datatype='real' name='Death rate, crude (per 1,000 people)' ordinal='6' />
                  <column datatype='real' name='Electric power consumption (kWh per capita)' ordinal='7' />
                  <column datatype='integer' name='GDP (USD)' ordinal='8' />
                  <column datatype='real' name='GDP per capita (USD)' ordinal='9' />
                  <column datatype='real' name='Individuals using the Internet (% of population)' ordinal='10' />
                  <column datatype='real' name='Infant mortality rate (per 1,000 live births)' ordinal='11' />
                  <column datatype='real' name='Life expectancy at birth (years)' ordinal='12' />
                  <column datatype='real' name='Population density (people per sq. km of land area)' ordinal='13' />
                  <column datatype='real' name='Unemployment (% of total labor force) (modeled ILO estimate)' ordinal='14' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Development Indicators (WorldBank Data) (3)' inline='true' name='federated.0h9t2id0u4zvhg144cq6x0wy4mrt' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='WorldBank Data' name='excel-direct.0sg96mk152hwof136cbed0sf8ssv'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/unisoft/DataSet/6. Organizing &amp; Simplifying Data part ll [WorldBank Economic Indicators]/WorldBank Data.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.0sg96mk152hwof136cbed0sf8ssv' name='Development Indicators' table='[&apos;Development Indicators$&apos;]' type='table'>
          <columns gridOrigin='A1:O10001:no:A1:O10001:0' header='yes' outcome='6'>
            <column datatype='string' name='Country Name' ordinal='0' />
            <column datatype='string' name='Country Code' ordinal='1' />
            <column datatype='string' name='Region' ordinal='2' />
            <column datatype='string' name='IncomeGroup' ordinal='3' />
            <column datatype='integer' name='Year' ordinal='4' />
            <column datatype='real' name='Birth rate, crude (per 1,000 people)' ordinal='5' />
            <column datatype='real' name='Death rate, crude (per 1,000 people)' ordinal='6' />
            <column datatype='real' name='Electric power consumption (kWh per capita)' ordinal='7' />
            <column datatype='integer' name='GDP (USD)' ordinal='8' />
            <column datatype='real' name='GDP per capita (USD)' ordinal='9' />
            <column datatype='real' name='Individuals using the Internet (% of population)' ordinal='10' />
            <column datatype='real' name='Infant mortality rate (per 1,000 live births)' ordinal='11' />
            <column datatype='real' name='Life expectancy at birth (years)' ordinal='12' />
            <column datatype='real' name='Population density (people per sq. km of land area)' ordinal='13' />
            <column datatype='real' name='Unemployment (% of total labor force) (modeled ILO estimate)' ordinal='14' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.0sg96mk152hwof136cbed0sf8ssv' name='Development Indicators' table='[&apos;Development Indicators$&apos;]' type='table'>
          <columns gridOrigin='A1:O10001:no:A1:O10001:0' header='yes' outcome='6'>
            <column datatype='string' name='Country Name' ordinal='0' />
            <column datatype='string' name='Country Code' ordinal='1' />
            <column datatype='string' name='Region' ordinal='2' />
            <column datatype='string' name='IncomeGroup' ordinal='3' />
            <column datatype='integer' name='Year' ordinal='4' />
            <column datatype='real' name='Birth rate, crude (per 1,000 people)' ordinal='5' />
            <column datatype='real' name='Death rate, crude (per 1,000 people)' ordinal='6' />
            <column datatype='real' name='Electric power consumption (kWh per capita)' ordinal='7' />
            <column datatype='integer' name='GDP (USD)' ordinal='8' />
            <column datatype='real' name='GDP per capita (USD)' ordinal='9' />
            <column datatype='real' name='Individuals using the Internet (% of population)' ordinal='10' />
            <column datatype='real' name='Infant mortality rate (per 1,000 live births)' ordinal='11' />
            <column datatype='real' name='Life expectancy at birth (years)' ordinal='12' />
            <column datatype='real' name='Population density (people per sq. km of land area)' ordinal='13' />
            <column datatype='real' name='Unemployment (% of total labor force) (modeled ILO estimate)' ordinal='14' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Development Indicators]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:O10001:no:A1:O10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country Name]</local-name>
            <parent-name>[Development Indicators]</parent-name>
            <remote-alias>Country Name</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Development Indicators_BCD83D8A4ECC4C7EA1DC739A2976BE96]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country Code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country Code]</local-name>
            <parent-name>[Development Indicators]</parent-name>
            <remote-alias>Country Code</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Development Indicators_BCD83D8A4ECC4C7EA1DC739A2976BE96]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[Development Indicators]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Development Indicators_BCD83D8A4ECC4C7EA1DC739A2976BE96]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>IncomeGroup</remote-name>
            <remote-type>130</remote-type>
            <local-name>[IncomeGroup]</local-name>
            <parent-name>[Development Indicators]</parent-name>
            <remote-alias>IncomeGroup</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Development Indicators_BCD83D8A4ECC4C7EA1DC739A2976BE96]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[Development Indicators]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Development Indicators_BCD83D8A4ECC4C7EA1DC739A2976BE96]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Birth rate, crude (per 1,000 people)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Birth rate, crude (per 1,000 people)]</local-name>
            <parent-name>[Development Indicators]</parent-name>
            <remote-alias>Birth rate, crude (per 1,000 people)</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Development Indicators_BCD83D8A4ECC4C7EA1DC739A2976BE96]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Death rate, crude (per 1,000 people)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Death rate, crude (per 1,000 people)]</local-name>
            <parent-name>[Development Indicators]</parent-name>
            <remote-alias>Death rate, crude (per 1,000 people)</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Development Indicators_BCD83D8A4ECC4C7EA1DC739A2976BE96]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Electric power consumption (kWh per capita)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Electric power consumption (kWh per capita)]</local-name>
            <parent-name>[Development Indicators]</parent-name>
            <remote-alias>Electric power consumption (kWh per capita)</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Development Indicators_BCD83D8A4ECC4C7EA1DC739A2976BE96]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GDP (USD)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[GDP (USD)]</local-name>
            <parent-name>[Development Indicators]</parent-name>
            <remote-alias>GDP (USD)</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Development Indicators_BCD83D8A4ECC4C7EA1DC739A2976BE96]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GDP per capita (USD)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[GDP per capita (USD)]</local-name>
            <parent-name>[Development Indicators]</parent-name>
            <remote-alias>GDP per capita (USD)</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Development Indicators_BCD83D8A4ECC4C7EA1DC739A2976BE96]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Individuals using the Internet (% of population)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Individuals using the Internet (% of population)]</local-name>
            <parent-name>[Development Indicators]</parent-name>
            <remote-alias>Individuals using the Internet (% of population)</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Development Indicators_BCD83D8A4ECC4C7EA1DC739A2976BE96]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Infant mortality rate (per 1,000 live births)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Infant mortality rate (per 1,000 live births)]</local-name>
            <parent-name>[Development Indicators]</parent-name>
            <remote-alias>Infant mortality rate (per 1,000 live births)</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Development Indicators_BCD83D8A4ECC4C7EA1DC739A2976BE96]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Life expectancy at birth (years)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Life expectancy at birth (years)]</local-name>
            <parent-name>[Development Indicators]</parent-name>
            <remote-alias>Life expectancy at birth (years)</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Development Indicators_BCD83D8A4ECC4C7EA1DC739A2976BE96]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population density (people per sq. km of land area)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Population density (people per sq. km of land area)]</local-name>
            <parent-name>[Development Indicators]</parent-name>
            <remote-alias>Population density (people per sq. km of land area)</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Development Indicators_BCD83D8A4ECC4C7EA1DC739A2976BE96]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Unemployment (% of total labor force) (modeled ILO estimate)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Unemployment (% of total labor force) (modeled ILO estimate)]</local-name>
            <parent-name>[Development Indicators]</parent-name>
            <remote-alias>Unemployment (% of total labor force) (modeled ILO estimate)</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Development Indicators_BCD83D8A4ECC4C7EA1DC739A2976BE96]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[Country Code]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Gdp (Usd)' datatype='integer' name='[GDP (USD)]' role='measure' type='quantitative' />
      <column caption='Income Group' datatype='string' name='[IncomeGroup]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Development Indicators' datatype='table' name='[__tableau_internal_object_id__].[Development Indicators_BCD83D8A4ECC4C7EA1DC739A2976BE96]' role='measure' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Development Indicators' id='Development Indicators_BCD83D8A4ECC4C7EA1DC739A2976BE96'>
            <properties context=''>
              <relation connection='excel-direct.0sg96mk152hwof136cbed0sf8ssv' name='Development Indicators' table='[&apos;Development Indicators$&apos;]' type='table'>
                <columns gridOrigin='A1:O10001:no:A1:O10001:0' header='yes' outcome='6'>
                  <column datatype='string' name='Country Name' ordinal='0' />
                  <column datatype='string' name='Country Code' ordinal='1' />
                  <column datatype='string' name='Region' ordinal='2' />
                  <column datatype='string' name='IncomeGroup' ordinal='3' />
                  <column datatype='integer' name='Year' ordinal='4' />
                  <column datatype='real' name='Birth rate, crude (per 1,000 people)' ordinal='5' />
                  <column datatype='real' name='Death rate, crude (per 1,000 people)' ordinal='6' />
                  <column datatype='real' name='Electric power consumption (kWh per capita)' ordinal='7' />
                  <column datatype='integer' name='GDP (USD)' ordinal='8' />
                  <column datatype='real' name='GDP per capita (USD)' ordinal='9' />
                  <column datatype='real' name='Individuals using the Internet (% of population)' ordinal='10' />
                  <column datatype='real' name='Infant mortality rate (per 1,000 live births)' ordinal='11' />
                  <column datatype='real' name='Life expectancy at birth (years)' ordinal='12' />
                  <column datatype='real' name='Population density (people per sq. km of land area)' ordinal='13' />
                  <column datatype='real' name='Unemployment (% of total labor force) (modeled ILO estimate)' ordinal='14' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Data (5.WorldBank Data 1960-2022)' inline='true' name='federated.18c1jit17rt4ac16gdao60nudujz' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='5.WorldBank Data 1960-2022' name='excel-direct.0js6l680hor4581161vqs0eeh0dw'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='D:/unisoft data/unisoft/DataSet/5.WorldBank Data 1960-2022.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.0js6l680hor4581161vqs0eeh0dw' name='Data' table='[Data$]' type='table'>
          <columns gridOrigin='A1:P10001:no:A1:P2147483647:0' header='yes' outcome='6'>
            <column datatype='string' name='Country Name' ordinal='0' />
            <column datatype='string' name='Country Code' ordinal='1' />
            <column datatype='string' name='Long Country Name' ordinal='2' />
            <column datatype='string' name='Income Group' ordinal='3' />
            <column datatype='string' name='Region' ordinal='4' />
            <column datatype='string' name='Currency Unit' ordinal='5' />
            <column datatype='date' date-parse-format='yyyy' name='Year' ordinal='6' />
            <column datatype='real' name='GDP (current US$)' ordinal='7' />
            <column datatype='real' name='GDP per capita (current US$)' ordinal='8' />
            <column datatype='real' name='Birth rate, crude (per 1,000 people)' ordinal='9' />
            <column datatype='real' name='Death rate, crude (per 1,000 people)' ordinal='10' />
            <column datatype='real' name='Individuals using the Internet (% of population)' ordinal='11' />
            <column datatype='real' name='Mortality rate, infant (per 1,000 live births)' ordinal='12' />
            <column datatype='real' name='Life expectancy at birth, total (years)' ordinal='13' />
            <column datatype='real' name='Population density (people per sq. km of land area)' ordinal='14' />
            <column datatype='real' name='Unemployment, total (% of total labor force) (modeled ILO estimate)' ordinal='15' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.0js6l680hor4581161vqs0eeh0dw' name='Data' table='[Data$]' type='table'>
          <columns gridOrigin='A1:P10001:no:A1:P2147483647:0' header='yes' outcome='6'>
            <column datatype='string' name='Country Name' ordinal='0' />
            <column datatype='string' name='Country Code' ordinal='1' />
            <column datatype='string' name='Long Country Name' ordinal='2' />
            <column datatype='string' name='Income Group' ordinal='3' />
            <column datatype='string' name='Region' ordinal='4' />
            <column datatype='string' name='Currency Unit' ordinal='5' />
            <column datatype='date' date-parse-format='yyyy' name='Year' ordinal='6' />
            <column datatype='real' name='GDP (current US$)' ordinal='7' />
            <column datatype='real' name='GDP per capita (current US$)' ordinal='8' />
            <column datatype='real' name='Birth rate, crude (per 1,000 people)' ordinal='9' />
            <column datatype='real' name='Death rate, crude (per 1,000 people)' ordinal='10' />
            <column datatype='real' name='Individuals using the Internet (% of population)' ordinal='11' />
            <column datatype='real' name='Mortality rate, infant (per 1,000 live births)' ordinal='12' />
            <column datatype='real' name='Life expectancy at birth, total (years)' ordinal='13' />
            <column datatype='real' name='Population density (people per sq. km of land area)' ordinal='14' />
            <column datatype='real' name='Unemployment, total (% of total labor force) (modeled ILO estimate)' ordinal='15' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Data]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>2</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:P10001:no:A1:P2147483647:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country Name]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>Country Name</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Data_5A4ADB77CA1A49F1936D041DF9886CBF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country Code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country Code]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>Country Code</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Data_5A4ADB77CA1A49F1936D041DF9886CBF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Long Country Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Long Country Name]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>Long Country Name</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Data_5A4ADB77CA1A49F1936D041DF9886CBF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Income Group</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Income Group]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>Income Group</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Data_5A4ADB77CA1A49F1936D041DF9886CBF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Data_5A4ADB77CA1A49F1936D041DF9886CBF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Currency Unit</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Currency Unit]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>Currency Unit</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Data_5A4ADB77CA1A49F1936D041DF9886CBF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>6</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Data_5A4ADB77CA1A49F1936D041DF9886CBF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GDP (current US$)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[GDP (current US$)]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>GDP (current US$)</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Data_5A4ADB77CA1A49F1936D041DF9886CBF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GDP per capita (current US$)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[GDP per capita (current US$)]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>GDP per capita (current US$)</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Data_5A4ADB77CA1A49F1936D041DF9886CBF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Birth rate, crude (per 1,000 people)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Birth rate, crude (per 1,000 people)]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>Birth rate, crude (per 1,000 people)</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Data_5A4ADB77CA1A49F1936D041DF9886CBF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Death rate, crude (per 1,000 people)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Death rate, crude (per 1,000 people)]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>Death rate, crude (per 1,000 people)</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Data_5A4ADB77CA1A49F1936D041DF9886CBF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Individuals using the Internet (% of population)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Individuals using the Internet (% of population)]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>Individuals using the Internet (% of population)</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Data_5A4ADB77CA1A49F1936D041DF9886CBF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Mortality rate, infant (per 1,000 live births)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Mortality rate, infant (per 1,000 live births)]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>Mortality rate, infant (per 1,000 live births)</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Data_5A4ADB77CA1A49F1936D041DF9886CBF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Life expectancy at birth, total (years)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Life expectancy at birth, total (years)]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>Life expectancy at birth, total (years)</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Data_5A4ADB77CA1A49F1936D041DF9886CBF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population density (people per sq. km of land area)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Population density (people per sq. km of land area)]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>Population density (people per sq. km of land area)</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Data_5A4ADB77CA1A49F1936D041DF9886CBF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Unemployment, total (% of total labor force) (modeled ILO estimate)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Unemployment, total (% of total labor force) (modeled ILO estimate)]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>Unemployment, total (% of total labor force) (modeled ILO estimate)</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Data_5A4ADB77CA1A49F1936D041DF9886CBF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[Country Code]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
        <semantic-values semantic-role='[Country].[Name]'>
          <semantic-value key='&quot;Korea, Dem. People&apos;s Rep.&quot;' value='&quot;North Korea&quot;' />
        </semantic-values>
      </column>
      <column datatype='string' name='[Income Group]' role='dimension' type='nominal' />
      <column datatype='string' name='[Long Country Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' name='[Region]' role='dimension' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='Data' datatype='table' name='[__tableau_internal_object_id__].[Data_5A4ADB77CA1A49F1936D041DF9886CBF]' role='measure' type='quantitative' />
      <column-instance column='[Country Name]' derivation='None' name='[none:Country Name:nk]' pivot='key' type='nominal' />
      <column-instance column='[Income Group]' derivation='None' name='[none:Income Group:nk]' pivot='key' type='nominal' />
      <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Income Group:nk]' type='palette'>
            <map to='#518c64'>
              <bucket>&quot;High income&quot;</bucket>
            </map>
            <map to='#85bf7d'>
              <bucket>&quot;Low income&quot;</bucket>
            </map>
            <map to='#9a7599'>
              <bucket>&quot;Upper middle income&quot;</bucket>
            </map>
            <map to='#d0a5c1'>
              <bucket>&quot;Lower middle income&quot;</bucket>
            </map>
            <map to='#e3ddd9'>
              <bucket>%null%</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Country Name:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Brunei Darussalam&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Lao PDR&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Micronesia, Fed. Sts.&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;New Caledonia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Turks and Caicos Islands&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Congo, Dem. Rep.&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Korea, Rep.&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;St. Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Cabo Verde&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Sint Maarten (Dutch part)&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Virgin Islands (U.S.)&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;French Polynesia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Syrian Arab Republic&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Congo, Rep.&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Faroe Islands&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Egypt, Arab Rep.&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Puerto Rico&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Turkiye&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Russian Federation&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;St. Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Tuvalu&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Hong Kong SAR, China&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Northern Mariana Islands&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bahamas, The&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Slovak Republic&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Timor-Leste&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;West Bank and Gaza&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Isle of Man&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Yemen, Rep.&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Macao SAR, China&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Nauru&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Channel Islands&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Guam&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Curacao&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Palau&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Venezuela, RB&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;British Virgin Islands&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kyrgyz Republic&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Kiribati&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;St. Lucia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Gambia, The&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Iran, Islamic Rep.&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Viet Nam&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;American Samoa&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Korea, Dem. People&apos;s Rep.&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;St. Martin (French part)&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Region:nk]' palette='blue_teal_10_0' type='palette'>
            <map to='#2c5985'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#45a2b9'>
              <bucket>&quot;Europe &amp; Central Asia&quot;</bucket>
            </map>
            <map to='#64cdcc'>
              <bucket>&quot;South Asia&quot;</bucket>
            </map>
            <map to='#91dcea'>
              <bucket>&quot;Sub-Saharan Africa&quot;</bucket>
            </map>
            <map to='#bce4d8'>
              <bucket>&quot;East Asia &amp; Pacific&quot;</bucket>
            </map>
            <map to='#f9a729'>
              <bucket>&quot;Latin America &amp; Caribbean&quot;</bucket>
            </map>
            <map to='#f9d23c'>
              <bucket>&quot;Middle East &amp; North Africa&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Data' id='Data_5A4ADB77CA1A49F1936D041DF9886CBF'>
            <properties context=''>
              <relation connection='excel-direct.0js6l680hor4581161vqs0eeh0dw' name='Data' table='[Data$]' type='table'>
                <columns gridOrigin='A1:P10001:no:A1:P2147483647:0' header='yes' outcome='6'>
                  <column datatype='string' name='Country Name' ordinal='0' />
                  <column datatype='string' name='Country Code' ordinal='1' />
                  <column datatype='string' name='Long Country Name' ordinal='2' />
                  <column datatype='string' name='Income Group' ordinal='3' />
                  <column datatype='string' name='Region' ordinal='4' />
                  <column datatype='string' name='Currency Unit' ordinal='5' />
                  <column datatype='date' date-parse-format='yyyy' name='Year' ordinal='6' />
                  <column datatype='real' name='GDP (current US$)' ordinal='7' />
                  <column datatype='real' name='GDP per capita (current US$)' ordinal='8' />
                  <column datatype='real' name='Birth rate, crude (per 1,000 people)' ordinal='9' />
                  <column datatype='real' name='Death rate, crude (per 1,000 people)' ordinal='10' />
                  <column datatype='real' name='Individuals using the Internet (% of population)' ordinal='11' />
                  <column datatype='real' name='Mortality rate, infant (per 1,000 live births)' ordinal='12' />
                  <column datatype='real' name='Life expectancy at birth, total (years)' ordinal='13' />
                  <column datatype='real' name='Population density (people per sq. km of land area)' ordinal='14' />
                  <column datatype='real' name='Unemployment, total (% of total labor force) (modeled ILO estimate)' ordinal='15' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='2018'>
      <table>
        <view>
          <datasources>
            <datasource caption='Data (5.WorldBank Data 1960-2022)' name='federated.18c1jit17rt4ac16gdao60nudujz' />
          </datasources>
          <datasource-dependencies datasource='federated.18c1jit17rt4ac16gdao60nudujz'>
            <column datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;Korea, Dem. People&apos;s Rep.&quot;' value='&quot;North Korea&quot;' />
              </semantic-values>
            </column>
            <column datatype='real' name='[GDP (current US$)]' role='measure' type='quantitative' />
            <column datatype='date' name='[Year]' role='dimension' type='ordinal' />
            <column-instance column='[Country Name]' derivation='None' name='[none:Country Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[GDP (current US$)]' derivation='Sum' name='[sum:GDP (current US$):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Year]' derivation='Year' name='[yr:Year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.18c1jit17rt4ac16gdao60nudujz].[yr:Year:ok]'>
            <groupfilter function='member' level='[yr:Year:ok]' member='2018' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.18c1jit17rt4ac16gdao60nudujz].[none:Country Name:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.18c1jit17rt4ac16gdao60nudujz].[sum:GDP (current US$):qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.18c1jit17rt4ac16gdao60nudujz].[yr:Year:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.18c1jit17rt4ac16gdao60nudujz].[sum:GDP (current US$):qk]' value='c&quot;$&quot;#,##0,,,.00B;(&quot;$&quot;#,##0,,,.00B)' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.18c1jit17rt4ac16gdao60nudujz].[sum:GDP (current US$):qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.18c1jit17rt4ac16gdao60nudujz].[sum:GDP (current US$):qk]</rows>
        <cols>[federated.18c1jit17rt4ac16gdao60nudujz].[none:Country Name:nk]</cols>
      </table>
      <simple-id uuid='{BD18EF24-E5B8-454F-8545-D18295D4837D}' />
    </worksheet>
    <worksheet name='2018+GDP +Bottom 10 without nulls'>
      <table>
        <view>
          <datasources>
            <datasource caption='Data (5.WorldBank Data 1960-2022)' name='federated.18c1jit17rt4ac16gdao60nudujz' />
          </datasources>
          <datasource-dependencies datasource='federated.18c1jit17rt4ac16gdao60nudujz'>
            <column datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;Korea, Dem. People&apos;s Rep.&quot;' value='&quot;North Korea&quot;' />
              </semantic-values>
            </column>
            <column datatype='real' name='[GDP (current US$)]' role='measure' type='quantitative' />
            <column datatype='date' name='[Year]' role='dimension' type='ordinal' />
            <column-instance column='[Country Name]' derivation='None' name='[none:Country Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[GDP (current US$)]' derivation='Sum' name='[sum:GDP (current US$):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Year]' derivation='Year' name='[yr:Year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.18c1jit17rt4ac16gdao60nudujz].[none:Country Name:nk]'>
            <groupfilter count='10' end='bottom' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([GDP (current US$)])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Country Name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.18c1jit17rt4ac16gdao60nudujz].[yr:Year:ok]'>
            <groupfilter function='member' level='[yr:Year:ok]' member='2018' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.18c1jit17rt4ac16gdao60nudujz].[none:Country Name:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.18c1jit17rt4ac16gdao60nudujz].[sum:GDP (current US$):qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.18c1jit17rt4ac16gdao60nudujz].[yr:Year:ok]</column>
            <column>[federated.18c1jit17rt4ac16gdao60nudujz].[none:Country Name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.18c1jit17rt4ac16gdao60nudujz].[sum:GDP (current US$):qk]' value='c&quot;$&quot;#,##0,,,.00B;(&quot;$&quot;#,##0,,,.00B)' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.18c1jit17rt4ac16gdao60nudujz].[sum:GDP (current US$):qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.18c1jit17rt4ac16gdao60nudujz].[sum:GDP (current US$):qk]</rows>
        <cols>[federated.18c1jit17rt4ac16gdao60nudujz].[none:Country Name:nk]</cols>
      </table>
      <simple-id uuid='{C85E6244-AEDA-4EE1-B6FA-E71CEABB23DD}' />
    </worksheet>
    <worksheet name='27. 1 Symbol Map'>
      <layout-options>
        <title>
          <formatted-text>
            <run><![CDATA[<Sheet Name>- Method -1 By Drapping a Geo field dimension into the middle of the view.(Show Me icon) ]]></run>
            <run>Æ&#10;</run>
            <run>or by Simple double clicking the geo field.</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Data (5.WorldBank Data 1960-2022)' name='federated.18c1jit17rt4ac16gdao60nudujz' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.18c1jit17rt4ac16gdao60nudujz'>
            <column datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;Korea, Dem. People&apos;s Rep.&quot;' value='&quot;North Korea&quot;' />
              </semantic-values>
            </column>
            <column-instance column='[Country Name]' derivation='None' name='[none:Country Name:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.18c1jit17rt4ac16gdao60nudujz].[none:Country Name:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.18c1jit17rt4ac16gdao60nudujz].[Latitude (generated)]</rows>
        <cols>[federated.18c1jit17rt4ac16gdao60nudujz].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{05C26C2C-AE80-4836-BE76-FCCC231520E5}' />
    </worksheet>
    <worksheet name='27. 2 Symbol Map (2)'>
      <layout-options>
        <title>
          <formatted-text>
            <run><![CDATA[<Sheet Name>- Method -2 - Click on country Name in dimension Section & Goto the middle of the view .(Show Me icon) 
Or by simply double clicking the geo field.]]></run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Data (5.WorldBank Data 1960-2022)' name='federated.18c1jit17rt4ac16gdao60nudujz' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.18c1jit17rt4ac16gdao60nudujz'>
            <column datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;Korea, Dem. People&apos;s Rep.&quot;' value='&quot;North Korea&quot;' />
              </semantic-values>
            </column>
            <column-instance column='[Country Name]' derivation='None' name='[none:Country Name:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.18c1jit17rt4ac16gdao60nudujz].[Longitude (generated)]' field-type='quantitative' max='30885056.836963274' min='-18879519.141562879' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.18c1jit17rt4ac16gdao60nudujz].[Latitude (generated)]' field-type='quantitative' max='12598513.607293831' min='-8260582.5313140433' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.18c1jit17rt4ac16gdao60nudujz].[none:Country Name:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.18c1jit17rt4ac16gdao60nudujz].[Latitude (generated)]</rows>
        <cols>[federated.18c1jit17rt4ac16gdao60nudujz].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{1765E0BD-06BA-4417-BE13-B75698CE146A}' />
    </worksheet>
    <worksheet name='27.3 Symbol Map'>
      <layout-options>
        <title>
          <formatted-text>
            <run><![CDATA[<Sheet Name>- Method 3- Manual Method by dragging longitude to columns shelf and latitude to rows shelf. and finally dragging country names to detail/color mark.]]></run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Data (5.WorldBank Data 1960-2022)' name='federated.18c1jit17rt4ac16gdao60nudujz' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.18c1jit17rt4ac16gdao60nudujz'>
            <column datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;Korea, Dem. People&apos;s Rep.&quot;' value='&quot;North Korea&quot;' />
              </semantic-values>
            </column>
            <column-instance column='[Country Name]' derivation='None' name='[none:Country Name:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.18c1jit17rt4ac16gdao60nudujz].[none:Country Name:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.18c1jit17rt4ac16gdao60nudujz].[Latitude (generated)]</rows>
        <cols>[federated.18c1jit17rt4ac16gdao60nudujz].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{19730770-D0BA-4F67-846D-FA5150C50D27}' />
    </worksheet>
    <worksheet name='28.Filled Maps'>
      <table>
        <view>
          <datasources>
            <datasource caption='Data (5.WorldBank Data 1960-2022)' name='federated.18c1jit17rt4ac16gdao60nudujz' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.18c1jit17rt4ac16gdao60nudujz'>
            <column datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;Korea, Dem. People&apos;s Rep.&quot;' value='&quot;North Korea&quot;' />
              </semantic-values>
            </column>
            <column-instance column='[Country Name]' derivation='None' name='[none:Country Name:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.18c1jit17rt4ac16gdao60nudujz].[none:Country Name:nk]' />
              <text column='[federated.18c1jit17rt4ac16gdao60nudujz].[none:Country Name:nk]' />
              <lod column='[federated.18c1jit17rt4ac16gdao60nudujz].[none:Country Name:nk]' />
              <geometry column='[federated.18c1jit17rt4ac16gdao60nudujz].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.18c1jit17rt4ac16gdao60nudujz].[Latitude (generated)]</rows>
        <cols>[federated.18c1jit17rt4ac16gdao60nudujz].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{2FDFD337-3384-4C99-8A81-9F971A891C69}' />
    </worksheet>
    <worksheet name='Boolean Data Type in Filters'>
      <layout-options>
        <title>
          <formatted-text>
            <run><![CDATA[<Sheet Name> We have created a calculated field which find the countries whose starting letters is "I" .This calculated field yield a boolean value.]]></run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Data (5.WorldBank Data 1960-2022)' name='federated.18c1jit17rt4ac16gdao60nudujz' />
          </datasources>
          <datasource-dependencies datasource='federated.18c1jit17rt4ac16gdao60nudujz'>
            <column datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;Korea, Dem. People&apos;s Rep.&quot;' value='&quot;North Korea&quot;' />
              </semantic-values>
            </column>
            <column datatype='real' name='[Mortality rate, infant (per 1,000 live births)]' role='measure' type='quantitative' />
            <column datatype='date' name='[Year]' role='dimension' type='ordinal' />
            <column-instance column='[Country Name]' derivation='None' name='[none:Country Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Mortality rate, infant (per 1,000 live births)]' derivation='Sum' name='[sum:Mortality rate, infant (per 1,000 live births):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Year]' derivation='Year' name='[yr:Year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <manual-sort column='[federated.18c1jit17rt4ac16gdao60nudujz].[none:Country Name:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Zimbabwe&quot;</bucket>
              <bucket>&quot;Zambia&quot;</bucket>
              <bucket>&quot;Yemen, Rep.&quot;</bucket>
              <bucket>&quot;West Bank and Gaza&quot;</bucket>
              <bucket>&quot;Virgin Islands (U.S.)&quot;</bucket>
              <bucket>&quot;Viet Nam&quot;</bucket>
              <bucket>&quot;Venezuela, RB&quot;</bucket>
              <bucket>&quot;Vanuatu&quot;</bucket>
              <bucket>&quot;Uzbekistan&quot;</bucket>
              <bucket>&quot;Uruguay&quot;</bucket>
              <bucket>&quot;United States&quot;</bucket>
              <bucket>&quot;United Kingdom&quot;</bucket>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
              <bucket>&quot;Ukraine&quot;</bucket>
              <bucket>&quot;Uganda&quot;</bucket>
              <bucket>&quot;Tuvalu&quot;</bucket>
              <bucket>&quot;Turks and Caicos Islands&quot;</bucket>
              <bucket>&quot;Turkmenistan&quot;</bucket>
              <bucket>&quot;Turkiye&quot;</bucket>
              <bucket>&quot;Tunisia&quot;</bucket>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
              <bucket>&quot;Tonga&quot;</bucket>
              <bucket>&quot;Togo&quot;</bucket>
              <bucket>&quot;Timor-Leste&quot;</bucket>
              <bucket>&quot;Thailand&quot;</bucket>
              <bucket>&quot;Tanzania&quot;</bucket>
              <bucket>&quot;Tajikistan&quot;</bucket>
              <bucket>&quot;Syrian Arab Republic&quot;</bucket>
              <bucket>&quot;Switzerland&quot;</bucket>
              <bucket>&quot;Sweden&quot;</bucket>
              <bucket>&quot;Suriname&quot;</bucket>
              <bucket>&quot;Sudan&quot;</bucket>
              <bucket>&quot;St. Vincent and the Grenadines&quot;</bucket>
              <bucket>&quot;St. Martin (French part)&quot;</bucket>
              <bucket>&quot;St. Lucia&quot;</bucket>
              <bucket>&quot;St. Kitts and Nevis&quot;</bucket>
              <bucket>&quot;Sri Lanka&quot;</bucket>
              <bucket>&quot;Spain&quot;</bucket>
              <bucket>&quot;South Sudan&quot;</bucket>
              <bucket>&quot;South Africa&quot;</bucket>
              <bucket>&quot;Somalia&quot;</bucket>
              <bucket>&quot;Solomon Islands&quot;</bucket>
              <bucket>&quot;Slovenia&quot;</bucket>
              <bucket>&quot;Slovak Republic&quot;</bucket>
              <bucket>&quot;Sint Maarten (Dutch part)&quot;</bucket>
              <bucket>&quot;Singapore&quot;</bucket>
              <bucket>&quot;Sierra Leone&quot;</bucket>
              <bucket>&quot;Seychelles&quot;</bucket>
              <bucket>&quot;Serbia&quot;</bucket>
              <bucket>&quot;Senegal&quot;</bucket>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
              <bucket>&quot;San Marino&quot;</bucket>
              <bucket>&quot;Samoa&quot;</bucket>
              <bucket>&quot;Rwanda&quot;</bucket>
              <bucket>&quot;Russian Federation&quot;</bucket>
              <bucket>&quot;Romania&quot;</bucket>
              <bucket>&quot;Qatar&quot;</bucket>
              <bucket>&quot;Puerto Rico&quot;</bucket>
              <bucket>&quot;Portugal&quot;</bucket>
              <bucket>&quot;Poland&quot;</bucket>
              <bucket>&quot;Philippines&quot;</bucket>
              <bucket>&quot;Peru&quot;</bucket>
              <bucket>&quot;Paraguay&quot;</bucket>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
              <bucket>&quot;Panama&quot;</bucket>
              <bucket>&quot;Palau&quot;</bucket>
              <bucket>&quot;Pakistan&quot;</bucket>
              <bucket>&quot;Oman&quot;</bucket>
              <bucket>&quot;Norway&quot;</bucket>
              <bucket>&quot;Northern Mariana Islands&quot;</bucket>
              <bucket>&quot;North Macedonia&quot;</bucket>
              <bucket>&quot;Nigeria&quot;</bucket>
              <bucket>&quot;Niger&quot;</bucket>
              <bucket>&quot;Nicaragua&quot;</bucket>
              <bucket>&quot;New Zealand&quot;</bucket>
              <bucket>&quot;New Caledonia&quot;</bucket>
              <bucket>&quot;Netherlands&quot;</bucket>
              <bucket>&quot;Nepal&quot;</bucket>
              <bucket>&quot;Nauru&quot;</bucket>
              <bucket>&quot;Namibia&quot;</bucket>
              <bucket>&quot;Myanmar&quot;</bucket>
              <bucket>&quot;Mozambique&quot;</bucket>
              <bucket>&quot;Morocco&quot;</bucket>
              <bucket>&quot;Montenegro&quot;</bucket>
              <bucket>&quot;Mongolia&quot;</bucket>
              <bucket>&quot;Monaco&quot;</bucket>
              <bucket>&quot;Moldova&quot;</bucket>
              <bucket>&quot;Micronesia, Fed. Sts.&quot;</bucket>
              <bucket>&quot;Mexico&quot;</bucket>
              <bucket>&quot;Mauritius&quot;</bucket>
              <bucket>&quot;Mauritania&quot;</bucket>
              <bucket>&quot;Marshall Islands&quot;</bucket>
              <bucket>&quot;Malta&quot;</bucket>
              <bucket>&quot;Mali&quot;</bucket>
              <bucket>&quot;Maldives&quot;</bucket>
              <bucket>&quot;Malaysia&quot;</bucket>
              <bucket>&quot;Malawi&quot;</bucket>
              <bucket>&quot;Madagascar&quot;</bucket>
              <bucket>&quot;Macao SAR, China&quot;</bucket>
              <bucket>&quot;Luxembourg&quot;</bucket>
              <bucket>&quot;Lithuania&quot;</bucket>
              <bucket>&quot;Liechtenstein&quot;</bucket>
              <bucket>&quot;Libya&quot;</bucket>
              <bucket>&quot;Liberia&quot;</bucket>
              <bucket>&quot;Lesotho&quot;</bucket>
              <bucket>&quot;Lebanon&quot;</bucket>
              <bucket>&quot;Latvia&quot;</bucket>
              <bucket>&quot;Lao PDR&quot;</bucket>
              <bucket>&quot;Kyrgyz Republic&quot;</bucket>
              <bucket>&quot;Kuwait&quot;</bucket>
              <bucket>&quot;Kosovo&quot;</bucket>
              <bucket>&quot;Korea, Rep.&quot;</bucket>
              <bucket>&quot;Korea, Dem. People&apos;s Rep.&quot;</bucket>
              <bucket>&quot;Kiribati&quot;</bucket>
              <bucket>&quot;Kenya&quot;</bucket>
              <bucket>&quot;Kazakhstan&quot;</bucket>
              <bucket>&quot;Jordan&quot;</bucket>
              <bucket>&quot;Japan&quot;</bucket>
              <bucket>&quot;Jamaica&quot;</bucket>
              <bucket>&quot;Italy&quot;</bucket>
              <bucket>&quot;Israel&quot;</bucket>
              <bucket>&quot;Isle of Man&quot;</bucket>
              <bucket>&quot;Ireland&quot;</bucket>
              <bucket>&quot;Iraq&quot;</bucket>
              <bucket>&quot;Iran, Islamic Rep.&quot;</bucket>
              <bucket>&quot;Indonesia&quot;</bucket>
              <bucket>&quot;India&quot;</bucket>
              <bucket>&quot;Iceland&quot;</bucket>
              <bucket>&quot;Hungary&quot;</bucket>
              <bucket>&quot;Hong Kong SAR, China&quot;</bucket>
              <bucket>&quot;Honduras&quot;</bucket>
              <bucket>&quot;Haiti&quot;</bucket>
              <bucket>&quot;Guyana&quot;</bucket>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
              <bucket>&quot;Guinea&quot;</bucket>
              <bucket>&quot;Guatemala&quot;</bucket>
              <bucket>&quot;Guam&quot;</bucket>
              <bucket>&quot;Grenada&quot;</bucket>
              <bucket>&quot;Greenland&quot;</bucket>
              <bucket>&quot;Greece&quot;</bucket>
              <bucket>&quot;Gibraltar&quot;</bucket>
              <bucket>&quot;Ghana&quot;</bucket>
              <bucket>&quot;Germany&quot;</bucket>
              <bucket>&quot;Georgia&quot;</bucket>
              <bucket>&quot;Gambia, The&quot;</bucket>
              <bucket>&quot;Gabon&quot;</bucket>
              <bucket>&quot;French Polynesia&quot;</bucket>
              <bucket>&quot;France&quot;</bucket>
              <bucket>&quot;Finland&quot;</bucket>
              <bucket>&quot;Fiji&quot;</bucket>
              <bucket>&quot;Faroe Islands&quot;</bucket>
              <bucket>&quot;Ethiopia&quot;</bucket>
              <bucket>&quot;Eswatini&quot;</bucket>
              <bucket>&quot;Estonia&quot;</bucket>
              <bucket>&quot;Eritrea&quot;</bucket>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
              <bucket>&quot;El Salvador&quot;</bucket>
              <bucket>&quot;Egypt, Arab Rep.&quot;</bucket>
              <bucket>&quot;Ecuador&quot;</bucket>
              <bucket>&quot;Dominican Republic&quot;</bucket>
              <bucket>&quot;Dominica&quot;</bucket>
              <bucket>&quot;Djibouti&quot;</bucket>
              <bucket>&quot;Denmark&quot;</bucket>
              <bucket>&quot;Czechia&quot;</bucket>
              <bucket>&quot;Cyprus&quot;</bucket>
              <bucket>&quot;Curacao&quot;</bucket>
              <bucket>&quot;Cuba&quot;</bucket>
              <bucket>&quot;Croatia&quot;</bucket>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
              <bucket>&quot;Costa Rica&quot;</bucket>
              <bucket>&quot;Congo, Rep.&quot;</bucket>
              <bucket>&quot;Congo, Dem. Rep.&quot;</bucket>
              <bucket>&quot;Comoros&quot;</bucket>
              <bucket>&quot;Colombia&quot;</bucket>
              <bucket>&quot;China&quot;</bucket>
              <bucket>&quot;Chile&quot;</bucket>
              <bucket>&quot;Channel Islands&quot;</bucket>
              <bucket>&quot;Chad&quot;</bucket>
              <bucket>&quot;Central African Republic&quot;</bucket>
              <bucket>&quot;Cayman Islands&quot;</bucket>
              <bucket>&quot;Canada&quot;</bucket>
              <bucket>&quot;Cameroon&quot;</bucket>
              <bucket>&quot;Cambodia&quot;</bucket>
              <bucket>&quot;Cabo Verde&quot;</bucket>
              <bucket>&quot;Burundi&quot;</bucket>
              <bucket>&quot;Burkina Faso&quot;</bucket>
              <bucket>&quot;Bulgaria&quot;</bucket>
              <bucket>&quot;Brunei Darussalam&quot;</bucket>
              <bucket>&quot;British Virgin Islands&quot;</bucket>
              <bucket>&quot;Brazil&quot;</bucket>
              <bucket>&quot;Botswana&quot;</bucket>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
              <bucket>&quot;Bolivia&quot;</bucket>
              <bucket>&quot;Bhutan&quot;</bucket>
              <bucket>&quot;Bermuda&quot;</bucket>
              <bucket>&quot;Benin&quot;</bucket>
              <bucket>&quot;Belize&quot;</bucket>
              <bucket>&quot;Belgium&quot;</bucket>
              <bucket>&quot;Belarus&quot;</bucket>
              <bucket>&quot;Barbados&quot;</bucket>
              <bucket>&quot;Bangladesh&quot;</bucket>
              <bucket>&quot;Bahrain&quot;</bucket>
              <bucket>&quot;Bahamas, The&quot;</bucket>
              <bucket>&quot;Azerbaijan&quot;</bucket>
              <bucket>&quot;Austria&quot;</bucket>
              <bucket>&quot;Australia&quot;</bucket>
              <bucket>&quot;Aruba&quot;</bucket>
              <bucket>&quot;Armenia&quot;</bucket>
              <bucket>&quot;Argentina&quot;</bucket>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
              <bucket>&quot;Angola&quot;</bucket>
              <bucket>&quot;Andorra&quot;</bucket>
              <bucket>&quot;American Samoa&quot;</bucket>
              <bucket>&quot;Algeria&quot;</bucket>
              <bucket>&quot;Albania&quot;</bucket>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.18c1jit17rt4ac16gdao60nudujz].[yr:Year:ok]'>
            <groupfilter function='member' level='[yr:Year:ok]' member='2021' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.18c1jit17rt4ac16gdao60nudujz].[yr:Year:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.18c1jit17rt4ac16gdao60nudujz].[sum:Mortality rate, infant (per 1,000 live births):qk]' />
              <text column='[federated.18c1jit17rt4ac16gdao60nudujz].[sum:Mortality rate, infant (per 1,000 live births):qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.18c1jit17rt4ac16gdao60nudujz].[none:Country Name:nk]</rows>
        <cols>[federated.18c1jit17rt4ac16gdao60nudujz].[sum:Mortality rate, infant (per 1,000 live births):qk]</cols>
      </table>
      <simple-id uuid='{07A9F249-B781-46B0-B8FB-85B4364A3283}' />
    </worksheet>
    <worksheet name='Bottom 10 + gdp not null'>
      <table>
        <view>
          <datasources>
            <datasource caption='Data (5.WorldBank Data 1960-2022)' name='federated.18c1jit17rt4ac16gdao60nudujz' />
          </datasources>
          <datasource-dependencies datasource='federated.18c1jit17rt4ac16gdao60nudujz'>
            <column datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;Korea, Dem. People&apos;s Rep.&quot;' value='&quot;North Korea&quot;' />
              </semantic-values>
            </column>
            <column datatype='real' name='[GDP (current US$)]' role='measure' type='quantitative' />
            <column-instance column='[Country Name]' derivation='None' name='[none:Country Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[GDP (current US$)]' derivation='None' name='[none:GDP (current US$):qk]' pivot='key' type='quantitative' />
            <column-instance column='[GDP (current US$)]' derivation='Sum' name='[sum:GDP (current US$):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.18c1jit17rt4ac16gdao60nudujz].[none:Country Name:nk]'>
            <groupfilter count='10' end='bottom' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([GDP (current US$)])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Country Name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.18c1jit17rt4ac16gdao60nudujz].[none:GDP (current US$):qk]' included-values='non-null' />
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.18c1jit17rt4ac16gdao60nudujz].[none:Country Name:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.18c1jit17rt4ac16gdao60nudujz].[sum:GDP (current US$):qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.18c1jit17rt4ac16gdao60nudujz].[none:Country Name:nk]</column>
            <column>[federated.18c1jit17rt4ac16gdao60nudujz].[none:GDP (current US$):qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.18c1jit17rt4ac16gdao60nudujz].[sum:GDP (current US$):qk]' value='c&quot;$&quot;#,##0,,,.00B;(&quot;$&quot;#,##0,,,.00B)' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.18c1jit17rt4ac16gdao60nudujz].[sum:GDP (current US$):qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.18c1jit17rt4ac16gdao60nudujz].[sum:GDP (current US$):qk]</rows>
        <cols>[federated.18c1jit17rt4ac16gdao60nudujz].[none:Country Name:nk]</cols>
      </table>
      <simple-id uuid='{BA3AE45F-E446-4E2B-BC45-36EFE1726240}' />
    </worksheet>
    <worksheet name='Bottom 10 +GDP Not Null +2018'>
      <table>
        <view>
          <datasources>
            <datasource caption='Data (5.WorldBank Data 1960-2022)' name='federated.18c1jit17rt4ac16gdao60nudujz' />
          </datasources>
          <datasource-dependencies datasource='federated.18c1jit17rt4ac16gdao60nudujz'>
            <column datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;Korea, Dem. People&apos;s Rep.&quot;' value='&quot;North Korea&quot;' />
              </semantic-values>
            </column>
            <column datatype='real' name='[GDP (current US$)]' role='measure' type='quantitative' />
            <column datatype='date' name='[Year]' role='dimension' type='ordinal' />
            <column-instance column='[Country Name]' derivation='None' name='[none:Country Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[GDP (current US$)]' derivation='None' name='[none:GDP (current US$):qk]' pivot='key' type='quantitative' />
            <column-instance column='[GDP (current US$)]' derivation='Sum' name='[sum:GDP (current US$):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Year]' derivation='Year' name='[yr:Year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.18c1jit17rt4ac16gdao60nudujz].[none:Country Name:nk]'>
            <groupfilter count='10' end='bottom' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([GDP (current US$)])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Country Name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.18c1jit17rt4ac16gdao60nudujz].[none:GDP (current US$):qk]' context='true' included-values='non-null' />
          <filter class='categorical' column='[federated.18c1jit17rt4ac16gdao60nudujz].[yr:Year:ok]' context='true'>
            <groupfilter function='member' level='[yr:Year:ok]' member='2018' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.18c1jit17rt4ac16gdao60nudujz].[none:Country Name:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.18c1jit17rt4ac16gdao60nudujz].[sum:GDP (current US$):qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.18c1jit17rt4ac16gdao60nudujz].[none:GDP (current US$):qk]</column>
            <column>[federated.18c1jit17rt4ac16gdao60nudujz].[yr:Year:ok]</column>
            <column>[federated.18c1jit17rt4ac16gdao60nudujz].[none:Country Name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.18c1jit17rt4ac16gdao60nudujz].[sum:GDP (current US$):qk]' value='c&quot;$&quot;#,##0,,,.00B;(&quot;$&quot;#,##0,,,.00B)' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.18c1jit17rt4ac16gdao60nudujz].[sum:GDP (current US$):qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.18c1jit17rt4ac16gdao60nudujz].[sum:GDP (current US$):qk]</rows>
        <cols>[federated.18c1jit17rt4ac16gdao60nudujz].[none:Country Name:nk]</cols>
      </table>
      <simple-id uuid='{D17E35BB-E65A-4B22-B55C-3A00CFB9B95C}' />
    </worksheet>
    <worksheet name='Bottom 10 by overall '>
      <table>
        <view>
          <datasources>
            <datasource caption='Data (5.WorldBank Data 1960-2022)' name='federated.18c1jit17rt4ac16gdao60nudujz' />
          </datasources>
          <datasource-dependencies datasource='federated.18c1jit17rt4ac16gdao60nudujz'>
            <column datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;Korea, Dem. People&apos;s Rep.&quot;' value='&quot;North Korea&quot;' />
              </semantic-values>
            </column>
            <column datatype='real' name='[GDP (current US$)]' role='measure' type='quantitative' />
            <column-instance column='[Country Name]' derivation='None' name='[none:Country Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[GDP (current US$)]' derivation='Sum' name='[sum:GDP (current US$):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.18c1jit17rt4ac16gdao60nudujz].[none:Country Name:nk]'>
            <groupfilter count='10' end='bottom' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([GDP (current US$)])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Country Name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.18c1jit17rt4ac16gdao60nudujz].[none:Country Name:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.18c1jit17rt4ac16gdao60nudujz].[sum:GDP (current US$):qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.18c1jit17rt4ac16gdao60nudujz].[none:Country Name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.18c1jit17rt4ac16gdao60nudujz].[sum:GDP (current US$):qk]' value='c&quot;$&quot;#,##0,,,.00B;(&quot;$&quot;#,##0,,,.00B)' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.18c1jit17rt4ac16gdao60nudujz].[sum:GDP (current US$):qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.18c1jit17rt4ac16gdao60nudujz].[sum:GDP (current US$):qk]</rows>
        <cols>[federated.18c1jit17rt4ac16gdao60nudujz].[none:Country Name:nk]</cols>
      </table>
      <simple-id uuid='{03D69EC8-1F0A-4CCF-BA00-3F661BE4C52F}' />
    </worksheet>
    <worksheet name='Challenge 26'>
      <layout-options>
        <title>
          <formatted-text>
            <run><![CDATA[<Sheet Name> Create a yearly line chart of GDP for each region]]></run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Data (5.WorldBank Data 1960-2022)' name='federated.18c1jit17rt4ac16gdao60nudujz' />
          </datasources>
          <datasource-dependencies datasource='federated.18c1jit17rt4ac16gdao60nudujz'>
            <column datatype='real' name='[GDP (current US$)]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='date' name='[Year]' role='dimension' type='ordinal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[GDP (current US$)]' derivation='Sum' name='[sum:GDP (current US$):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.18c1jit17rt4ac16gdao60nudujz].[none:Region:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.18c1jit17rt4ac16gdao60nudujz].[sum:GDP (current US$):qk]</rows>
        <cols>[federated.18c1jit17rt4ac16gdao60nudujz].[none:Year:qk]</cols>
      </table>
      <simple-id uuid='{7CEA3A3E-2178-4F6A-AED4-61F3C3CBB33D}' />
    </worksheet>
    <worksheet name='Challenge 27'>
      <layout-options>
        <title>
          <formatted-text>
            <run><![CDATA[<Sheet Name> - Create a bar chart for bottom 10 countries by the total GDP for the year <]]></run>
            <run>[federated.18c1jit17rt4ac16gdao60nudujz].[yr:Year:ok]</run>
            <run>&gt;(excluding Null values)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Data (5.WorldBank Data 1960-2022)' name='federated.18c1jit17rt4ac16gdao60nudujz' />
          </datasources>
          <datasource-dependencies datasource='federated.18c1jit17rt4ac16gdao60nudujz'>
            <column datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;Korea, Dem. People&apos;s Rep.&quot;' value='&quot;North Korea&quot;' />
              </semantic-values>
            </column>
            <column datatype='real' name='[GDP (current US$)]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='date' name='[Year]' role='dimension' type='ordinal' />
            <column-instance column='[Country Name]' derivation='None' name='[none:Country Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[GDP (current US$)]' derivation='None' name='[none:GDP (current US$):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[GDP (current US$)]' derivation='Sum' name='[sum:GDP (current US$):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Year]' derivation='Year' name='[yr:Year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.18c1jit17rt4ac16gdao60nudujz].[none:Country Name:nk]'>
            <groupfilter count='10' end='bottom' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([GDP (current US$)])' function='order' user:ui-marker='order'>
                <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                  <groupfilter function='level-members' level='[none:Country Name:nk]' />
                  <groupfilter function='union'>
                    <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Afghanistan&quot;' />
                    <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Bhutan&quot;' />
                    <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;British Virgin Islands&quot;' />
                    <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Channel Islands&quot;' />
                    <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Cuba&quot;' />
                    <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Eritrea&quot;' />
                    <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Gibraltar&quot;' />
                    <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Greenland&quot;' />
                    <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Guam&quot;' />
                    <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Isle of Man&quot;' />
                    <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Korea, Dem. People&apos;s Rep.&quot;' />
                    <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Lebanon&quot;' />
                    <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Liechtenstein&quot;' />
                    <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Northern Mariana Islands&quot;' />
                    <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Palau&quot;' />
                    <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;San Marino&quot;' />
                    <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;South Sudan&quot;' />
                    <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;St. Martin (French part)&quot;' />
                    <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Syrian Arab Republic&quot;' />
                    <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Tonga&quot;' />
                    <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Venezuela, RB&quot;' />
                    <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Virgin Islands (U.S.)&quot;' />
                    <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Yemen, Rep.&quot;' />
                    <groupfilter function='member' level='[none:Country Name:nk]' member='%null%' />
                  </groupfilter>
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.18c1jit17rt4ac16gdao60nudujz].[none:GDP (current US$):qk]' context='true' included-values='non-null' />
          <filter class='categorical' column='[federated.18c1jit17rt4ac16gdao60nudujz].[yr:Year:ok]' context='true'>
            <groupfilter function='member' level='[yr:Year:ok]' member='2022' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.18c1jit17rt4ac16gdao60nudujz].[none:Country Name:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.18c1jit17rt4ac16gdao60nudujz].[sum:GDP (current US$):qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.18c1jit17rt4ac16gdao60nudujz].[none:GDP (current US$):qk]</column>
            <column>[federated.18c1jit17rt4ac16gdao60nudujz].[yr:Year:ok]</column>
            <column>[federated.18c1jit17rt4ac16gdao60nudujz].[none:Country Name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.18c1jit17rt4ac16gdao60nudujz].[sum:GDP (current US$):qk]' value='c&quot;$&quot;#,##0,,.00M;(&quot;$&quot;#,##0,,.00M)' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.18c1jit17rt4ac16gdao60nudujz].[none:Region:nk]' />
              <text column='[federated.18c1jit17rt4ac16gdao60nudujz].[sum:GDP (current US$):qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.18c1jit17rt4ac16gdao60nudujz].[sum:GDP (current US$):qk]</rows>
        <cols>[federated.18c1jit17rt4ac16gdao60nudujz].[none:Country Name:nk]</cols>
      </table>
      <simple-id uuid='{1B82CC48-1CAD-4B1D-AB8B-1CDDF199F3F2}' />
    </worksheet>
    <worksheet name='Conditional Filter'>
      <layout-options>
        <title>
          <formatted-text>
            <run><![CDATA[<Sheet Name> - using Conditional Dimension Filters on Countries 
Find the country name with overall GDP greater than 3 Trillion.]]></run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Data (5.WorldBank Data 1960-2022)' name='federated.18c1jit17rt4ac16gdao60nudujz' />
          </datasources>
          <datasource-dependencies datasource='federated.18c1jit17rt4ac16gdao60nudujz'>
            <column datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;Korea, Dem. People&apos;s Rep.&quot;' value='&quot;North Korea&quot;' />
              </semantic-values>
            </column>
            <column datatype='real' name='[GDP (current US$)]' role='measure' type='quantitative' />
            <column-instance column='[Country Name]' derivation='None' name='[none:Country Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[GDP (current US$)]' derivation='Sum' name='[sum:GDP (current US$):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.18c1jit17rt4ac16gdao60nudujz].[none:Country Name:nk]'>
            <groupfilter expression='SUM([GDP (current US$)]) &gt; 3000000000000.' function='filter' user:ui-filter-by-field='true' user:ui-marker='filter-by'>
              <groupfilter function='level-members' level='[none:Country Name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.18c1jit17rt4ac16gdao60nudujz].[none:Country Name:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.18c1jit17rt4ac16gdao60nudujz].[sum:GDP (current US$):qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.18c1jit17rt4ac16gdao60nudujz].[none:Country Name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='cell-w' value='78' />
            <format attr='cell-h' value='26' />
            <format attr='cell' value='26' />
            <format attr='cell-q' value='130' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.18c1jit17rt4ac16gdao60nudujz].[sum:GDP (current US$):qk]</rows>
        <cols>[federated.18c1jit17rt4ac16gdao60nudujz].[none:Country Name:nk]</cols>
      </table>
      <simple-id uuid='{7437239C-5F59-41BF-BE6C-84711BD491A7}' />
    </worksheet>
    <worksheet name='Dimension Filter -Remove nulls'>
      <layout-options>
        <title>
          <formatted-text>
            <run><![CDATA[<Sheet Name> - Filtering by GDP at Rows Level ]]></run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Data (5.WorldBank Data 1960-2022)' name='federated.18c1jit17rt4ac16gdao60nudujz' />
          </datasources>
          <datasource-dependencies datasource='federated.18c1jit17rt4ac16gdao60nudujz'>
            <column datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;Korea, Dem. People&apos;s Rep.&quot;' value='&quot;North Korea&quot;' />
              </semantic-values>
            </column>
            <column datatype='real' name='[GDP (current US$)]' role='measure' type='quantitative' />
            <column-instance column='[Country Name]' derivation='None' name='[none:Country Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[GDP (current US$)]' derivation='None' name='[none:GDP (current US$):qk]' pivot='key' type='quantitative' />
            <column-instance column='[GDP (current US$)]' derivation='Sum' name='[sum:GDP (current US$):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.18c1jit17rt4ac16gdao60nudujz].[none:GDP (current US$):qk]' included-values='non-null' />
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.18c1jit17rt4ac16gdao60nudujz].[none:Country Name:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.18c1jit17rt4ac16gdao60nudujz].[sum:GDP (current US$):qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.18c1jit17rt4ac16gdao60nudujz].[none:GDP (current US$):qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.18c1jit17rt4ac16gdao60nudujz].[sum:GDP (current US$):qk]' value='c&quot;$&quot;#,##0,,,.00B;(&quot;$&quot;#,##0,,,.00B)' />
            <format attr='cell-w' value='66' />
            <format attr='cell-h' value='22' />
            <format attr='cell' value='22' />
            <format attr='cell-q' value='110' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.18c1jit17rt4ac16gdao60nudujz].[sum:GDP (current US$):qk]' palette='purple_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.18c1jit17rt4ac16gdao60nudujz].[sum:GDP (current US$):qk]' />
              <text column='[federated.18c1jit17rt4ac16gdao60nudujz].[sum:GDP (current US$):qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.18c1jit17rt4ac16gdao60nudujz].[sum:GDP (current US$):qk]</rows>
        <cols>[federated.18c1jit17rt4ac16gdao60nudujz].[none:Country Name:nk]</cols>
      </table>
      <simple-id uuid='{49AE910E-614F-40E9-8E0E-52A00529F704}' />
    </worksheet>
    <worksheet name='Dimension Filter- Date'>
      <layout-options>
        <title>
          <formatted-text>
            <run><![CDATA[<Sheet Name>- Filtering by Year-]]></run>
            <run fontcolor='#e15759'><![CDATA[<[federated.18c1jit17rt4ac16gdao60nudujz].[yr:Year:ok]>]]></run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Data (5.WorldBank Data 1960-2022)' name='federated.18c1jit17rt4ac16gdao60nudujz' />
          </datasources>
          <datasource-dependencies datasource='federated.18c1jit17rt4ac16gdao60nudujz'>
            <column datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;Korea, Dem. People&apos;s Rep.&quot;' value='&quot;North Korea&quot;' />
              </semantic-values>
            </column>
            <column datatype='real' name='[GDP (current US$)]' role='measure' type='quantitative' />
            <column datatype='date' name='[Year]' role='dimension' type='ordinal' />
            <column-instance column='[Country Name]' derivation='None' name='[none:Country Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[GDP (current US$)]' derivation='Sum' name='[sum:GDP (current US$):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Year]' derivation='Year' name='[yr:Year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.18c1jit17rt4ac16gdao60nudujz].[yr:Year:ok]'>
            <groupfilter function='member' level='[yr:Year:ok]' member='2018' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.18c1jit17rt4ac16gdao60nudujz].[none:Country Name:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.18c1jit17rt4ac16gdao60nudujz].[sum:GDP (current US$):qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.18c1jit17rt4ac16gdao60nudujz].[yr:Year:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='cell-w' value='78' />
            <format attr='cell-h' value='26' />
            <format attr='cell' value='26' />
            <format attr='cell-q' value='130' />
            <format attr='text-format' field='[federated.18c1jit17rt4ac16gdao60nudujz].[sum:GDP (current US$):qk]' value='c&quot;$&quot;#,##0,,,.00B;(&quot;$&quot;#,##0,,,.00B)' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.18c1jit17rt4ac16gdao60nudujz].[sum:GDP (current US$):qk]' palette='red_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.18c1jit17rt4ac16gdao60nudujz].[sum:GDP (current US$):qk]' />
              <text column='[federated.18c1jit17rt4ac16gdao60nudujz].[sum:GDP (current US$):qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.18c1jit17rt4ac16gdao60nudujz].[sum:GDP (current US$):qk]</rows>
        <cols>[federated.18c1jit17rt4ac16gdao60nudujz].[none:Country Name:nk]</cols>
      </table>
      <simple-id uuid='{59680E97-4F2A-47DE-B4FE-78C943373B5D}' />
    </worksheet>
    <worksheet name='Dimension Filters'>
      <layout-options>
        <title>
          <formatted-text>
            <run><![CDATA[<Sheet Name> General - using String Dimension(Region)]]></run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Data (5.WorldBank Data 1960-2022)' name='federated.18c1jit17rt4ac16gdao60nudujz' />
          </datasources>
          <datasource-dependencies datasource='federated.18c1jit17rt4ac16gdao60nudujz'>
            <column datatype='real' name='[GDP (current US$)]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='date' name='[Year]' role='dimension' type='ordinal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[GDP (current US$)]' derivation='Sum' name='[sum:GDP (current US$):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Year]' derivation='Year' name='[yr:Year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.18c1jit17rt4ac16gdao60nudujz].[none:Region:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Region:nk]' />
              <groupfilter function='member' level='[none:Region:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.18c1jit17rt4ac16gdao60nudujz].[yr:Year:ok]'>
            <groupfilter function='member' level='[yr:Year:ok]' member='2018' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.18c1jit17rt4ac16gdao60nudujz].[none:Region:nk]</column>
            <column>[federated.18c1jit17rt4ac16gdao60nudujz].[yr:Year:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.18c1jit17rt4ac16gdao60nudujz].[none:Region:nk]' />
              <size column='[federated.18c1jit17rt4ac16gdao60nudujz].[sum:GDP (current US$):qk]' />
              <text column='[federated.18c1jit17rt4ac16gdao60nudujz].[none:Region:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{9A669E16-2F6D-4FCE-B022-D84EA26A915D}' />
    </worksheet>
    <worksheet name='Example of Creating A Maps'>
      <layout-options>
        <title>
          <formatted-text>
            <run><![CDATA[<Sheet Name>- Income Groups According to Country]]></run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Data (5.WorldBank Data 1960-2022)' name='federated.18c1jit17rt4ac16gdao60nudujz' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.18c1jit17rt4ac16gdao60nudujz'>
            <column datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;Korea, Dem. People&apos;s Rep.&quot;' value='&quot;North Korea&quot;' />
              </semantic-values>
            </column>
            <column datatype='string' name='[Income Group]' role='dimension' type='nominal' />
            <column-instance column='[Country Name]' derivation='None' name='[none:Country Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Income Group]' derivation='None' name='[none:Income Group:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.18c1jit17rt4ac16gdao60nudujz].[none:Income Group:nk]' />
              <lod column='[federated.18c1jit17rt4ac16gdao60nudujz].[none:Country Name:nk]' />
              <geometry column='[federated.18c1jit17rt4ac16gdao60nudujz].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.18c1jit17rt4ac16gdao60nudujz].[Latitude (generated)]</rows>
        <cols>[federated.18c1jit17rt4ac16gdao60nudujz].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{7F09B257-21D0-4877-9EC6-4D0C071B7794}' />
    </worksheet>
    <worksheet name='GDP Not Null'>
      <table>
        <view>
          <datasources>
            <datasource caption='Data (5.WorldBank Data 1960-2022)' name='federated.18c1jit17rt4ac16gdao60nudujz' />
          </datasources>
          <datasource-dependencies datasource='federated.18c1jit17rt4ac16gdao60nudujz'>
            <column datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;Korea, Dem. People&apos;s Rep.&quot;' value='&quot;North Korea&quot;' />
              </semantic-values>
            </column>
            <column datatype='real' name='[GDP (current US$)]' role='measure' type='quantitative' />
            <column-instance column='[Country Name]' derivation='None' name='[none:Country Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[GDP (current US$)]' derivation='None' name='[none:GDP (current US$):qk]' pivot='key' type='quantitative' />
            <column-instance column='[GDP (current US$)]' derivation='Sum' name='[sum:GDP (current US$):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.18c1jit17rt4ac16gdao60nudujz].[none:GDP (current US$):qk]' included-values='non-null' />
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.18c1jit17rt4ac16gdao60nudujz].[none:Country Name:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.18c1jit17rt4ac16gdao60nudujz].[sum:GDP (current US$):qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.18c1jit17rt4ac16gdao60nudujz].[none:GDP (current US$):qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.18c1jit17rt4ac16gdao60nudujz].[sum:GDP (current US$):qk]' value='c&quot;$&quot;#,##0,,,.00B;(&quot;$&quot;#,##0,,,.00B)' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.18c1jit17rt4ac16gdao60nudujz].[sum:GDP (current US$):qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.18c1jit17rt4ac16gdao60nudujz].[sum:GDP (current US$):qk]</rows>
        <cols>[federated.18c1jit17rt4ac16gdao60nudujz].[none:Country Name:nk]</cols>
      </table>
      <simple-id uuid='{0094158C-8FE4-48F7-A94E-093765FDDAE8}' />
    </worksheet>
    <worksheet name='GDP Not Null + 2018'>
      <table>
        <view>
          <datasources>
            <datasource caption='Data (5.WorldBank Data 1960-2022)' name='federated.18c1jit17rt4ac16gdao60nudujz' />
          </datasources>
          <datasource-dependencies datasource='federated.18c1jit17rt4ac16gdao60nudujz'>
            <column datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;Korea, Dem. People&apos;s Rep.&quot;' value='&quot;North Korea&quot;' />
              </semantic-values>
            </column>
            <column datatype='real' name='[GDP (current US$)]' role='measure' type='quantitative' />
            <column datatype='date' name='[Year]' role='dimension' type='ordinal' />
            <column-instance column='[Country Name]' derivation='None' name='[none:Country Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[GDP (current US$)]' derivation='None' name='[none:GDP (current US$):qk]' pivot='key' type='quantitative' />
            <column-instance column='[GDP (current US$)]' derivation='Sum' name='[sum:GDP (current US$):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Year]' derivation='Year' name='[yr:Year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.18c1jit17rt4ac16gdao60nudujz].[none:GDP (current US$):qk]' included-values='non-null' />
          <filter class='categorical' column='[federated.18c1jit17rt4ac16gdao60nudujz].[yr:Year:ok]'>
            <groupfilter function='member' level='[yr:Year:ok]' member='2018' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.18c1jit17rt4ac16gdao60nudujz].[none:Country Name:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.18c1jit17rt4ac16gdao60nudujz].[sum:GDP (current US$):qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.18c1jit17rt4ac16gdao60nudujz].[yr:Year:ok]</column>
            <column>[federated.18c1jit17rt4ac16gdao60nudujz].[none:GDP (current US$):qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.18c1jit17rt4ac16gdao60nudujz].[sum:GDP (current US$):qk]' value='c&quot;$&quot;#,##0,,,.00B;(&quot;$&quot;#,##0,,,.00B)' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.18c1jit17rt4ac16gdao60nudujz].[sum:GDP (current US$):qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.18c1jit17rt4ac16gdao60nudujz].[sum:GDP (current US$):qk]</rows>
        <cols>[federated.18c1jit17rt4ac16gdao60nudujz].[none:Country Name:nk]</cols>
      </table>
      <simple-id uuid='{2542606D-D00B-4B97-9E2A-480640756B4C}' />
    </worksheet>
    <worksheet name='Measure Filter Example 1'>
      <layout-options>
        <title>
          <formatted-text>
            <run><![CDATA[<Sheet Name> Filter quantitative data (measures).
Using a ]]></run>
            <run fontcolor='#e15759'>Range of Value</run>
            <run> Option between 250 ppl per sq. km of land area &amp; 400 ppl per sq. km of land area.</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Data (5.WorldBank Data 1960-2022)' name='federated.18c1jit17rt4ac16gdao60nudujz' />
          </datasources>
          <datasource-dependencies datasource='federated.18c1jit17rt4ac16gdao60nudujz'>
            <column datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;Korea, Dem. People&apos;s Rep.&quot;' value='&quot;North Korea&quot;' />
              </semantic-values>
            </column>
            <column datatype='real' name='[Population density (people per sq. km of land area)]' role='measure' type='quantitative' />
            <column datatype='date' name='[Year]' role='dimension' type='ordinal' />
            <column-instance column='[Country Name]' derivation='None' name='[none:Country Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Population density (people per sq. km of land area)]' derivation='None' name='[none:Population density (people per sq. km of land area):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Population density (people per sq. km of land area)]' derivation='Sum' name='[sum:Population density (people per sq. km of land area):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Year]' derivation='Year' name='[yr:Year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <manual-sort column='[federated.18c1jit17rt4ac16gdao60nudujz].[none:Country Name:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Belgium&quot;</bucket>
              <bucket>&quot;Philippines&quot;</bucket>
              <bucket>&quot;Tuvalu&quot;</bucket>
              <bucket>&quot;Puerto Rico&quot;</bucket>
              <bucket>&quot;Grenada&quot;</bucket>
              <bucket>&quot;Sri Lanka&quot;</bucket>
              <bucket>&quot;Japan&quot;</bucket>
              <bucket>&quot;Curacao&quot;</bucket>
              <bucket>&quot;Guam&quot;</bucket>
              <bucket>&quot;Viet Nam&quot;</bucket>
              <bucket>&quot;El Salvador&quot;</bucket>
              <bucket>&quot;Virgin Islands (U.S.)&quot;</bucket>
              <bucket>&quot;Pakistan&quot;</bucket>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
              <bucket>&quot;St. Lucia&quot;</bucket>
              <bucket>&quot;Cayman Islands&quot;</bucket>
              <bucket>&quot;United Kingdom&quot;</bucket>
              <bucket>&quot;St. Vincent and the Grenadines&quot;</bucket>
              <bucket>&quot;Jamaica&quot;</bucket>
              <bucket>&quot;Gambia, The&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='quantitative' column='[federated.18c1jit17rt4ac16gdao60nudujz].[none:Population density (people per sq. km of land area):qk]' included-values='in-range'>
            <min>250.0</min>
            <max>400.0</max>
          </filter>
          <filter class='categorical' column='[federated.18c1jit17rt4ac16gdao60nudujz].[yr:Year:ok]'>
            <groupfilter function='member' level='[yr:Year:ok]' member='2021' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.18c1jit17rt4ac16gdao60nudujz].[yr:Year:ok]</column>
            <column>[federated.18c1jit17rt4ac16gdao60nudujz].[none:Population density (people per sq. km of land area):qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.18c1jit17rt4ac16gdao60nudujz].[sum:Population density (people per sq. km of land area):qk]' value='SUM(Population density (people per sq. km of land area))'>
              <formatted-text>
                <run>SUM(Population density (people per sq. km of land area))</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.18c1jit17rt4ac16gdao60nudujz].[sum:Population density (people per sq. km of land area):qk]' />
              <text column='[federated.18c1jit17rt4ac16gdao60nudujz].[sum:Population density (people per sq. km of land area):qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.18c1jit17rt4ac16gdao60nudujz].[none:Country Name:nk]</rows>
        <cols>[federated.18c1jit17rt4ac16gdao60nudujz].[sum:Population density (people per sq. km of land area):qk]</cols>
      </table>
      <simple-id uuid='{7DB95AD9-FDB0-4659-965C-349D2F85E0BF}' />
    </worksheet>
    <worksheet name='Measure Filter Example 2'>
      <layout-options>
        <title>
          <formatted-text>
            <run><![CDATA[<Sheet Name> Filter data (measures) 
Find the countries having population Density of ]]></run>
            <run fontcolor='#e15759'>atleast </run>
            <run> 1000 ppl per sq.km of land area.</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Data (5.WorldBank Data 1960-2022)' name='federated.18c1jit17rt4ac16gdao60nudujz' />
          </datasources>
          <datasource-dependencies datasource='federated.18c1jit17rt4ac16gdao60nudujz'>
            <column datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;Korea, Dem. People&apos;s Rep.&quot;' value='&quot;North Korea&quot;' />
              </semantic-values>
            </column>
            <column datatype='real' name='[Population density (people per sq. km of land area)]' role='measure' type='quantitative' />
            <column datatype='date' name='[Year]' role='dimension' type='ordinal' />
            <column-instance column='[Country Name]' derivation='None' name='[none:Country Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Population density (people per sq. km of land area)]' derivation='None' name='[none:Population density (people per sq. km of land area):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Population density (people per sq. km of land area)]' derivation='Sum' name='[sum:Population density (people per sq. km of land area):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Year]' derivation='Year' name='[yr:Year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <manual-sort column='[federated.18c1jit17rt4ac16gdao60nudujz].[none:Country Name:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Macao SAR, China&quot;</bucket>
              <bucket>&quot;Monaco&quot;</bucket>
              <bucket>&quot;Singapore&quot;</bucket>
              <bucket>&quot;Hong Kong SAR, China&quot;</bucket>
              <bucket>&quot;Gibraltar&quot;</bucket>
              <bucket>&quot;Bahrain&quot;</bucket>
              <bucket>&quot;Maldives&quot;</bucket>
              <bucket>&quot;Malta&quot;</bucket>
              <bucket>&quot;Bangladesh&quot;</bucket>
              <bucket>&quot;Sint Maarten (Dutch part)&quot;</bucket>
              <bucket>&quot;Bermuda&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='quantitative' column='[federated.18c1jit17rt4ac16gdao60nudujz].[none:Population density (people per sq. km of land area):qk]' included-values='in-range'>
            <min>1000.0</min>
          </filter>
          <filter class='categorical' column='[federated.18c1jit17rt4ac16gdao60nudujz].[yr:Year:ok]'>
            <groupfilter function='member' level='[yr:Year:ok]' member='2021' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.18c1jit17rt4ac16gdao60nudujz].[yr:Year:ok]</column>
            <column>[federated.18c1jit17rt4ac16gdao60nudujz].[none:Population density (people per sq. km of land area):qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.18c1jit17rt4ac16gdao60nudujz].[sum:Population density (people per sq. km of land area):qk]' palette='green_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.18c1jit17rt4ac16gdao60nudujz].[sum:Population density (people per sq. km of land area):qk]' />
              <text column='[federated.18c1jit17rt4ac16gdao60nudujz].[sum:Population density (people per sq. km of land area):qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.18c1jit17rt4ac16gdao60nudujz].[none:Country Name:nk]</rows>
        <cols>[federated.18c1jit17rt4ac16gdao60nudujz].[sum:Population density (people per sq. km of land area):qk]</cols>
      </table>
      <simple-id uuid='{DD02C449-8A64-4B0B-8C1D-0E130C8056E3}' />
    </worksheet>
    <worksheet name='Measure Filter Example 3'>
      <layout-options>
        <title>
          <formatted-text>
            <run><![CDATA[<Sheet Name> Filter quantative data(measure)
Find the countries having Population Density of ]]></run>
            <run fontcolor='#e15759'>at most</run>
            <run> 10 ppl per sq.km of land area.</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Data (5.WorldBank Data 1960-2022)' name='federated.18c1jit17rt4ac16gdao60nudujz' />
          </datasources>
          <datasource-dependencies datasource='federated.18c1jit17rt4ac16gdao60nudujz'>
            <column datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;Korea, Dem. People&apos;s Rep.&quot;' value='&quot;North Korea&quot;' />
              </semantic-values>
            </column>
            <column datatype='real' name='[Population density (people per sq. km of land area)]' role='measure' type='quantitative' />
            <column datatype='date' name='[Year]' role='dimension' type='ordinal' />
            <column-instance column='[Country Name]' derivation='None' name='[none:Country Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Population density (people per sq. km of land area)]' derivation='None' name='[none:Population density (people per sq. km of land area):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Population density (people per sq. km of land area)]' derivation='Sum' name='[sum:Population density (people per sq. km of land area):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Year]' derivation='Year' name='[yr:Year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <manual-sort column='[federated.18c1jit17rt4ac16gdao60nudujz].[none:Country Name:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Gabon&quot;</bucket>
              <bucket>&quot;Russian Federation&quot;</bucket>
              <bucket>&quot;Central African Republic&quot;</bucket>
              <bucket>&quot;Kazakhstan&quot;</bucket>
              <bucket>&quot;Botswana&quot;</bucket>
              <bucket>&quot;Mauritania&quot;</bucket>
              <bucket>&quot;Canada&quot;</bucket>
              <bucket>&quot;Guyana&quot;</bucket>
              <bucket>&quot;Suriname&quot;</bucket>
              <bucket>&quot;Libya&quot;</bucket>
              <bucket>&quot;Iceland&quot;</bucket>
              <bucket>&quot;Australia&quot;</bucket>
              <bucket>&quot;Namibia&quot;</bucket>
              <bucket>&quot;Mongolia&quot;</bucket>
              <bucket>&quot;Greenland&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='quantitative' column='[federated.18c1jit17rt4ac16gdao60nudujz].[none:Population density (people per sq. km of land area):qk]' included-values='in-range'>
            <max>10.0</max>
          </filter>
          <filter class='categorical' column='[federated.18c1jit17rt4ac16gdao60nudujz].[yr:Year:ok]'>
            <groupfilter function='member' level='[yr:Year:ok]' member='2021' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.18c1jit17rt4ac16gdao60nudujz].[yr:Year:ok]</column>
            <column>[federated.18c1jit17rt4ac16gdao60nudujz].[none:Population density (people per sq. km of land area):qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.18c1jit17rt4ac16gdao60nudujz].[sum:Population density (people per sq. km of land area):qk]' palette='green_blue_white_diverging_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.18c1jit17rt4ac16gdao60nudujz].[sum:Population density (people per sq. km of land area):qk]' />
              <text column='[federated.18c1jit17rt4ac16gdao60nudujz].[sum:Population density (people per sq. km of land area):qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.18c1jit17rt4ac16gdao60nudujz].[none:Country Name:nk]</rows>
        <cols>[federated.18c1jit17rt4ac16gdao60nudujz].[sum:Population density (people per sq. km of land area):qk]</cols>
      </table>
      <simple-id uuid='{0B07B02C-D4DA-4E90-ABD9-014B5C2DBEAC}' />
    </worksheet>
    <worksheet name='Measure Filter Example 4'>
      <layout-options>
        <title>
          <formatted-text>
            <run><![CDATA[<Sheet Name> Filter quantative data (measures)
Find THE countries whose population density is
unknown or missing in the data set.(i.e. filter for Null values )   ]]></run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Data (5.WorldBank Data 1960-2022)' name='federated.18c1jit17rt4ac16gdao60nudujz' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.18c1jit17rt4ac16gdao60nudujz'>
            <column datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;Korea, Dem. People&apos;s Rep.&quot;' value='&quot;North Korea&quot;' />
              </semantic-values>
            </column>
            <column datatype='real' name='[Population density (people per sq. km of land area)]' role='measure' type='quantitative' />
            <column datatype='date' name='[Year]' role='dimension' type='ordinal' />
            <column-instance column='[Country Name]' derivation='None' name='[none:Country Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Population density (people per sq. km of land area)]' derivation='None' name='[none:Population density (people per sq. km of land area):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Population density (people per sq. km of land area)]' derivation='Sum' name='[sum:Population density (people per sq. km of land area):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Year]' derivation='Year' name='[yr:Year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.18c1jit17rt4ac16gdao60nudujz].[none:Population density (people per sq. km of land area):qk]' included-values='null' />
          <filter class='categorical' column='[federated.18c1jit17rt4ac16gdao60nudujz].[yr:Year:ok]'>
            <groupfilter function='member' level='[yr:Year:ok]' member='2021' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.18c1jit17rt4ac16gdao60nudujz].[yr:Year:ok]</column>
            <column>[federated.18c1jit17rt4ac16gdao60nudujz].[none:Population density (people per sq. km of land area):qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.18c1jit17rt4ac16gdao60nudujz].[sum:Population density (people per sq. km of land area):qk]' />
              <text column='[federated.18c1jit17rt4ac16gdao60nudujz].[sum:Population density (people per sq. km of land area):qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.18c1jit17rt4ac16gdao60nudujz].[sum:Population density (people per sq. km of land area):qk]</rows>
        <cols>[federated.18c1jit17rt4ac16gdao60nudujz].[none:Country Name:nk]</cols>
      </table>
      <simple-id uuid='{3D4945D5-AF35-4137-9E88-234E736A4F14}' />
    </worksheet>
    <worksheet name='Measure Filter at Aggregated Level'>
      <layout-options>
        <title>
          <formatted-text>
            <run><![CDATA[<Sheet Name> We have filtered on the overall region wise individuals using internet in % of population.The control of filter is shared with end users.]]></run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Data (5.WorldBank Data 1960-2022)' name='federated.18c1jit17rt4ac16gdao60nudujz' />
          </datasources>
          <datasource-dependencies datasource='federated.18c1jit17rt4ac16gdao60nudujz'>
            <column datatype='real' name='[Individuals using the Internet (% of population)]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column-instance column='[Individuals using the Internet (% of population)]' derivation='Avg' name='[avg:Individuals using the Internet (% of population):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.18c1jit17rt4ac16gdao60nudujz].[avg:Individuals using the Internet (% of population):qk]' included-values='in-range'>
            <min>23.600000000000001</min>
            <max>45.399999999999999</max>
          </filter>
          <manual-sort column='[federated.18c1jit17rt4ac16gdao60nudujz].[none:Region:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Europe &amp; Central Asia&quot;</bucket>
              <bucket>&quot;Middle East &amp; North Africa&quot;</bucket>
              <bucket>&quot;Latin America &amp; Caribbean&quot;</bucket>
              <bucket>&quot;East Asia &amp; Pacific&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.18c1jit17rt4ac16gdao60nudujz].[avg:Individuals using the Internet (% of population):qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.18c1jit17rt4ac16gdao60nudujz].[avg:Individuals using the Internet (% of population):qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.18c1jit17rt4ac16gdao60nudujz].[none:Region:nk]</rows>
        <cols>[federated.18c1jit17rt4ac16gdao60nudujz].[avg:Individuals using the Internet (% of population):qk]</cols>
      </table>
      <simple-id uuid='{C29984AC-7495-4F69-991C-5E67A00EECC2}' />
    </worksheet>
    <worksheet name='Measure to Context'>
      <layout-options>
        <title>
          <formatted-text>
            <run><![CDATA[<Sheet Name>- Is there a reason why we only get eight countries now ? how do we determine the bottom ten?]]></run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Data (5.WorldBank Data 1960-2022)' name='federated.18c1jit17rt4ac16gdao60nudujz' />
          </datasources>
          <datasource-dependencies datasource='federated.18c1jit17rt4ac16gdao60nudujz'>
            <column datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;Korea, Dem. People&apos;s Rep.&quot;' value='&quot;North Korea&quot;' />
              </semantic-values>
            </column>
            <column datatype='real' name='[GDP (current US$)]' role='measure' type='quantitative' />
            <column datatype='date' name='[Year]' role='dimension' type='ordinal' />
            <column-instance column='[Country Name]' derivation='None' name='[none:Country Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[GDP (current US$)]' derivation='None' name='[none:GDP (current US$):qk]' pivot='key' type='quantitative' />
            <column-instance column='[GDP (current US$)]' derivation='Sum' name='[sum:GDP (current US$):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Year]' derivation='Year' name='[yr:Year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.18c1jit17rt4ac16gdao60nudujz].[none:Country Name:nk]'>
            <groupfilter count='10' end='bottom' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([GDP (current US$)])' function='order' user:ui-marker='order'>
                <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                  <groupfilter function='level-members' level='[none:Country Name:nk]' />
                  <groupfilter function='union'>
                    <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;British Virgin Islands&quot;' />
                    <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Gibraltar&quot;' />
                    <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Korea, Dem. People&apos;s Rep.&quot;' />
                    <groupfilter function='member' level='[none:Country Name:nk]' member='%null%' />
                  </groupfilter>
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.18c1jit17rt4ac16gdao60nudujz].[none:GDP (current US$):qk]' context='true' included-values='non-null' />
          <filter class='categorical' column='[federated.18c1jit17rt4ac16gdao60nudujz].[yr:Year:ok]'>
            <groupfilter function='member' level='[yr:Year:ok]' member='2018' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.18c1jit17rt4ac16gdao60nudujz].[none:Country Name:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.18c1jit17rt4ac16gdao60nudujz].[sum:GDP (current US$):qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.18c1jit17rt4ac16gdao60nudujz].[none:GDP (current US$):qk]</column>
            <column>[federated.18c1jit17rt4ac16gdao60nudujz].[none:Country Name:nk]</column>
            <column>[federated.18c1jit17rt4ac16gdao60nudujz].[yr:Year:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.18c1jit17rt4ac16gdao60nudujz].[sum:GDP (current US$):qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.18c1jit17rt4ac16gdao60nudujz].[sum:GDP (current US$):qk]</rows>
        <cols>[federated.18c1jit17rt4ac16gdao60nudujz].[none:Country Name:nk]</cols>
      </table>
      <simple-id uuid='{E0F97AEA-1B19-4D80-AB2F-8F756969B229}' />
    </worksheet>
    <worksheet name='Parameters in a Conditional Filter'>
      <table>
        <view>
          <datasources>
            <datasource caption='Data (5.WorldBank Data 1960-2022)' name='federated.18c1jit17rt4ac16gdao60nudujz' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Life expectancy at birth, total (years) Parameter 2' datatype='real' name='[Life expectancy at birth, total (years) Parameter]' param-domain-type='range' role='measure' type='quantitative' value='11.994999999999999'>
              <calculation class='tableau' formula='11.994999999999999' />
              <range max='85.497560975609773' min='11.994999999999999' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.18c1jit17rt4ac16gdao60nudujz'>
            <column datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;Korea, Dem. People&apos;s Rep.&quot;' value='&quot;North Korea&quot;' />
              </semantic-values>
            </column>
            <column datatype='real' name='[Life expectancy at birth, total (years)]' role='measure' type='quantitative' />
            <column datatype='date' name='[Year]' role='dimension' type='ordinal' />
            <column-instance column='[Country Name]' derivation='None' name='[none:Country Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Life expectancy at birth, total (years)]' derivation='None' name='[none:Life expectancy at birth, total (years):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Life expectancy at birth, total (years)]' derivation='Sum' name='[sum:Life expectancy at birth, total (years):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Year]' derivation='Year' name='[yr:Year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.18c1jit17rt4ac16gdao60nudujz].[none:Country Name:nk]'>
            <groupfilter expression='SUM([Life expectancy at birth, total (years)])&gt;[Parameters].[Life expectancy at birth, total (years) Parameter]' function='filter' user:ui-marker='filter-by'>
              <groupfilter function='level-members' level='[none:Country Name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.18c1jit17rt4ac16gdao60nudujz].[none:Life expectancy at birth, total (years):qk]' context='true' included-values='all' />
          <filter class='categorical' column='[federated.18c1jit17rt4ac16gdao60nudujz].[yr:Year:ok]' context='true'>
            <groupfilter function='member' level='[yr:Year:ok]' member='2017' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.18c1jit17rt4ac16gdao60nudujz].[none:Life expectancy at birth, total (years):qk]</column>
            <column>[federated.18c1jit17rt4ac16gdao60nudujz].[yr:Year:ok]</column>
            <column>[federated.18c1jit17rt4ac16gdao60nudujz].[none:Country Name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.18c1jit17rt4ac16gdao60nudujz].[none:Country Name:nk]</rows>
        <cols>[federated.18c1jit17rt4ac16gdao60nudujz].[sum:Life expectancy at birth, total (years):qk]</cols>
      </table>
      <simple-id uuid='{0C36341B-FF3B-4493-970B-73A3B6600AEE}' />
    </worksheet>
    <worksheet name='Parameters in a Filters'>
      <layout-options>
        <title>
          <formatted-text>
            <run><![CDATA[<Sheet Name> - Top 10 Countries by Electric Power Consumptions in the year 2014]]></run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Data (5.WorldBank Data 1960-2022)' name='federated.18c1jit17rt4ac16gdao60nudujz' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Top N' datatype='integer' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='10'>
              <calculation class='tableau' formula='10' />
              <range max='100' min='1' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.18c1jit17rt4ac16gdao60nudujz'>
            <column datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;Korea, Dem. People&apos;s Rep.&quot;' value='&quot;North Korea&quot;' />
              </semantic-values>
            </column>
            <column datatype='real' name='[Life expectancy at birth, total (years)]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='date' name='[Year]' role='dimension' type='ordinal' />
            <column-instance column='[Country Name]' derivation='None' name='[none:Country Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Life expectancy at birth, total (years)]' derivation='Sum' name='[sum:Life expectancy at birth, total (years):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Year]' derivation='Year' name='[yr:Year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.18c1jit17rt4ac16gdao60nudujz].[none:Country Name:nk]'>
            <groupfilter count='[Parameters].[Parameter 1]' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Life expectancy at birth, total (years)])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Country Name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <natural-sort column='[federated.18c1jit17rt4ac16gdao60nudujz].[none:Country Name:nk]' direction='DESC' />
          <filter class='categorical' column='[federated.18c1jit17rt4ac16gdao60nudujz].[yr:Year:ok]' context='true'>
            <groupfilter function='member' level='[yr:Year:ok]' member='2021' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.18c1jit17rt4ac16gdao60nudujz].[yr:Year:ok]</column>
            <column>[federated.18c1jit17rt4ac16gdao60nudujz].[none:Country Name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.18c1jit17rt4ac16gdao60nudujz].[none:Region:nk]' />
              <text column='[federated.18c1jit17rt4ac16gdao60nudujz].[sum:Life expectancy at birth, total (years):qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.18c1jit17rt4ac16gdao60nudujz].[sum:Life expectancy at birth, total (years):qk]</rows>
        <cols>[federated.18c1jit17rt4ac16gdao60nudujz].[none:Country Name:nk]</cols>
      </table>
      <simple-id uuid='{050970BD-E657-4B93-92D8-4B3BBC67B706}' />
    </worksheet>
    <worksheet name='Relevent Values options in Filters'>
      <table>
        <view>
          <datasources>
            <datasource caption='Data (5.WorldBank Data 1960-2022)' name='federated.18c1jit17rt4ac16gdao60nudujz' />
          </datasources>
          <datasource-dependencies datasource='federated.18c1jit17rt4ac16gdao60nudujz'>
            <column datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;Korea, Dem. People&apos;s Rep.&quot;' value='&quot;North Korea&quot;' />
              </semantic-values>
            </column>
            <column datatype='real' name='[Individuals using the Internet (% of population)]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column-instance column='[Individuals using the Internet (% of population)]' derivation='Avg' name='[avg:Individuals using the Internet (% of population):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country Name]' derivation='None' name='[none:Country Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.18c1jit17rt4ac16gdao60nudujz].[none:Country Name:nk]'>
            <groupfilter function='level-members' level='[none:Country Name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.18c1jit17rt4ac16gdao60nudujz].[none:Region:nk]'>
            <groupfilter function='member' level='[none:Region:nk]' member='&quot;North America&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.18c1jit17rt4ac16gdao60nudujz].[none:Country Name:nk]</column>
            <column>[federated.18c1jit17rt4ac16gdao60nudujz].[none:Region:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.18c1jit17rt4ac16gdao60nudujz].[avg:Individuals using the Internet (% of population):qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.18c1jit17rt4ac16gdao60nudujz].[none:Country Name:nk]</rows>
        <cols>[federated.18c1jit17rt4ac16gdao60nudujz].[avg:Individuals using the Internet (% of population):qk]</cols>
      </table>
      <simple-id uuid='{BFD37B75-C14C-41F7-ACCD-697524E77D2A}' />
    </worksheet>
    <worksheet name='Top 10 Filter'>
      <layout-options>
        <title>
          <formatted-text>
            <run><![CDATA[<Sheet Name> - Top 10 Countries by GDP in the year 2018]]></run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Data (5.WorldBank Data 1960-2022)' name='federated.18c1jit17rt4ac16gdao60nudujz' />
          </datasources>
          <datasource-dependencies datasource='federated.18c1jit17rt4ac16gdao60nudujz'>
            <column datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;Korea, Dem. People&apos;s Rep.&quot;' value='&quot;North Korea&quot;' />
              </semantic-values>
            </column>
            <column datatype='real' name='[GDP (current US$)]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='date' name='[Year]' role='dimension' type='ordinal' />
            <column-instance column='[Country Name]' derivation='None' name='[none:Country Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[GDP (current US$)]' derivation='Sum' name='[sum:GDP (current US$):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Year]' derivation='Year' name='[yr:Year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.18c1jit17rt4ac16gdao60nudujz].[none:Country Name:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([GDP (current US$)])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Country Name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.18c1jit17rt4ac16gdao60nudujz].[yr:Year:ok]' context='true'>
            <groupfilter function='member' level='[yr:Year:ok]' member='2018' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.18c1jit17rt4ac16gdao60nudujz].[none:Country Name:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.18c1jit17rt4ac16gdao60nudujz].[sum:GDP (current US$):qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.18c1jit17rt4ac16gdao60nudujz].[yr:Year:ok]</column>
            <column>[federated.18c1jit17rt4ac16gdao60nudujz].[none:Country Name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.18c1jit17rt4ac16gdao60nudujz].[sum:GDP (current US$):qk]' value='*&quot;$&quot;#,##0,,,,.00T;(&quot;$&quot;#,##0,,,.00B)' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.18c1jit17rt4ac16gdao60nudujz].[none:Region:nk]' />
              <text column='[federated.18c1jit17rt4ac16gdao60nudujz].[sum:GDP (current US$):qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.18c1jit17rt4ac16gdao60nudujz].[sum:GDP (current US$):qk]</rows>
        <cols>[federated.18c1jit17rt4ac16gdao60nudujz].[none:Country Name:nk]</cols>
      </table>
      <simple-id uuid='{066EB0EE-6494-49AB-A093-E5B06A59EBDB}' />
    </worksheet>
    <worksheet name='Top/Bottom N Dimension Filters'>
      <layout-options>
        <title>
          <formatted-text>
            <run><![CDATA[<Sheet Name> - Using Conditional Top filter on Countries.
Find the top 5 countreis by overall total GDP.]]></run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Data (5.WorldBank Data 1960-2022)' name='federated.18c1jit17rt4ac16gdao60nudujz' />
          </datasources>
          <datasource-dependencies datasource='federated.18c1jit17rt4ac16gdao60nudujz'>
            <column datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;Korea, Dem. People&apos;s Rep.&quot;' value='&quot;North Korea&quot;' />
              </semantic-values>
            </column>
            <column datatype='real' name='[GDP (current US$)]' role='measure' type='quantitative' />
            <column-instance column='[Country Name]' derivation='None' name='[none:Country Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[GDP (current US$)]' derivation='Sum' name='[sum:GDP (current US$):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.18c1jit17rt4ac16gdao60nudujz].[none:Country Name:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([GDP (current US$)])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Country Name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.18c1jit17rt4ac16gdao60nudujz].[none:Country Name:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.18c1jit17rt4ac16gdao60nudujz].[sum:GDP (current US$):qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.18c1jit17rt4ac16gdao60nudujz].[none:Country Name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.18c1jit17rt4ac16gdao60nudujz].[sum:GDP (current US$):qk]' value='*&quot;$&quot;#,##0,,,,.00T;(&quot;$&quot;#,##0,,,.00B)' />
            <format attr='cell-w' value='66' />
            <format attr='cell-h' value='22' />
            <format attr='cell' value='22' />
            <format attr='cell-q' value='110' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.18c1jit17rt4ac16gdao60nudujz].[sum:GDP (current US$):qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.18c1jit17rt4ac16gdao60nudujz].[sum:GDP (current US$):qk]</rows>
        <cols>[federated.18c1jit17rt4ac16gdao60nudujz].[none:Country Name:nk]</cols>
      </table>
      <simple-id uuid='{CE8A4F94-E483-4AD8-AD8D-6D309CF5C79D}' />
    </worksheet>
    <worksheet name='Wildcard filter'>
      <layout-options>
        <title>
          <formatted-text>
            <run><![CDATA[<Sheet Name> - using String Dimension(Region)]]></run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Data (5.WorldBank Data 1960-2022)' name='federated.18c1jit17rt4ac16gdao60nudujz' />
          </datasources>
          <datasource-dependencies datasource='federated.18c1jit17rt4ac16gdao60nudujz'>
            <column datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;Korea, Dem. People&apos;s Rep.&quot;' value='&quot;North Korea&quot;' />
              </semantic-values>
            </column>
            <column datatype='real' name='[Unemployment, total (% of total labor force) (modeled ILO estimate)]' role='measure' type='quantitative' />
            <column datatype='date' name='[Year]' role='dimension' type='ordinal' />
            <column-instance column='[Country Name]' derivation='None' name='[none:Country Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Unemployment, total (% of total labor force) (modeled ILO estimate)]' derivation='Sum' name='[sum:Unemployment, total (% of total labor force) (modeled ILO estimate):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Year]' derivation='Year' name='[yr:Year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.18c1jit17rt4ac16gdao60nudujz].[none:Country Name:nk]'>
            <groupfilter expression='STARTSWITH([Country Name], &apos;I&apos;)' function='filter' user:ui-enumeration='inclusive' user:ui-pattern-include-all-when-empty='true' user:ui-pattern_text='I' user:ui-pattern_type='starts-with'>
              <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                <groupfilter function='level-members' level='[none:Country Name:nk]' />
                <groupfilter function='member' level='[none:Country Name:nk]' member='%null%' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.18c1jit17rt4ac16gdao60nudujz].[yr:Year:ok]'>
            <groupfilter function='member' level='[yr:Year:ok]' member='2018' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.18c1jit17rt4ac16gdao60nudujz].[none:Country Name:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.18c1jit17rt4ac16gdao60nudujz].[sum:Unemployment, total (% of total labor force) (modeled ILO estimate):qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.18c1jit17rt4ac16gdao60nudujz].[none:Country Name:nk]</column>
            <column>[federated.18c1jit17rt4ac16gdao60nudujz].[yr:Year:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.18c1jit17rt4ac16gdao60nudujz].[sum:Unemployment, total (% of total labor force) (modeled ILO estimate):qk]' />
              <text column='[federated.18c1jit17rt4ac16gdao60nudujz].[sum:Unemployment, total (% of total labor force) (modeled ILO estimate):qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.18c1jit17rt4ac16gdao60nudujz].[sum:Unemployment, total (% of total labor force) (modeled ILO estimate):qk]</rows>
        <cols>[federated.18c1jit17rt4ac16gdao60nudujz].[none:Country Name:nk]</cols>
      </table>
      <simple-id uuid='{E64535C6-E3FC-4E31-856F-3B2D9D1DC8AC}' />
    </worksheet>
  </worksheets>
  <windows source-height='93'>
    <window class='worksheet' name='27. 1 Symbol Map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{BC7C9989-B5D6-45ED-81A9-E620078DF7C2}' />
    </window>
    <window class='worksheet' name='27. 2 Symbol Map (2)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{7E9008B7-B6AC-4CC8-8821-EA4BAB8601F8}' />
    </window>
    <window class='worksheet' name='27.3 Symbol Map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.18c1jit17rt4ac16gdao60nudujz].[none:Country Name:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.18c1jit17rt4ac16gdao60nudujz].[none:Country Name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{3FA5D4B1-9477-4E7E-91D4-0D503CEE0171}' />
    </window>
    <window class='worksheet' name='28.Filled Maps'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.18c1jit17rt4ac16gdao60nudujz].[none:Country Name:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.18c1jit17rt4ac16gdao60nudujz].[none:Country Name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{853E717B-EB28-445B-A6D7-36B618605CAB}' />
    </window>
    <window class='worksheet' name='Example of Creating A Maps'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.18c1jit17rt4ac16gdao60nudujz].[none:Income Group:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.18c1jit17rt4ac16gdao60nudujz].[none:Income Group:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B8FD788B-2A9A-495E-9702-2E5FFA5ED41A}' />
    </window>
    <window class='worksheet' name='Challenge 26'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.18c1jit17rt4ac16gdao60nudujz].[none:Region:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.18c1jit17rt4ac16gdao60nudujz].[none:Region:nk]</field>
            <field>[federated.18c1jit17rt4ac16gdao60nudujz].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{BFDFF5BE-2619-49B3-AD79-3DF6C3090B7C}' />
    </window>
    <window class='worksheet' name='Dimension Filters'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card mode='pattern' param='[federated.18c1jit17rt4ac16gdao60nudujz].[none:Region:nk]' type='filter' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.18c1jit17rt4ac16gdao60nudujz].[none:Region:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.18c1jit17rt4ac16gdao60nudujz].[none:Region:nk]</field>
            <field>[federated.18c1jit17rt4ac16gdao60nudujz].[yr:Year:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E51F1092-D1AF-4F86-A26C-296404E520EF}' />
    </window>
    <window class='worksheet' name='Wildcard filter'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.18c1jit17rt4ac16gdao60nudujz].[sum:Unemployment, total (% of total labor force) (modeled ILO estimate):qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.18c1jit17rt4ac16gdao60nudujz].[none:Country Name:nk]</field>
            <field>[federated.18c1jit17rt4ac16gdao60nudujz].[none:Region:nk]</field>
            <field>[federated.18c1jit17rt4ac16gdao60nudujz].[yr:Year:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{509DEE37-F3BA-42DA-8D42-77D03BB9E91F}' />
    </window>
    <window class='worksheet' name='Conditional Filter'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='checkdropdown' param='[federated.18c1jit17rt4ac16gdao60nudujz].[none:Country Name:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.18c1jit17rt4ac16gdao60nudujz].[none:Country Name:nk]</field>
            <field>[federated.18c1jit17rt4ac16gdao60nudujz].[none:Region:nk]</field>
            <field>[federated.18c1jit17rt4ac16gdao60nudujz].[yr:Year:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{82A383E7-89CA-4A6D-BA77-1AFA5E2D78ED}' />
    </window>
    <window class='worksheet' name='Top/Bottom N Dimension Filters'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.18c1jit17rt4ac16gdao60nudujz].[none:Country Name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F3AB539C-5551-445F-8108-EB4A0D2C5A4F}' />
    </window>
    <window class='worksheet' name='Dimension Filter- Date'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='slider' param='[federated.18c1jit17rt4ac16gdao60nudujz].[yr:Year:ok]' type='filter' />
            <card pane-specification-id='0' param='[federated.18c1jit17rt4ac16gdao60nudujz].[sum:GDP (current US$):qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.18c1jit17rt4ac16gdao60nudujz].[none:Country Name:nk]</field>
            <field>[federated.18c1jit17rt4ac16gdao60nudujz].[yr:Year:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{48626BE0-A1BE-494A-BFFD-4D5732446182}' />
    </window>
    <window class='worksheet' name='Dimension Filter -Remove nulls'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.18c1jit17rt4ac16gdao60nudujz].[sum:GDP (current US$):qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.18c1jit17rt4ac16gdao60nudujz].[none:Country Name:nk]</field>
            <field>[federated.18c1jit17rt4ac16gdao60nudujz].[none:GDP (current US$):qk]</field>
            <field>[federated.18c1jit17rt4ac16gdao60nudujz].[yr:Year:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B6BCE4B8-C530-4996-AF1C-490BBE03C035}' />
    </window>
    <window class='worksheet' name='Top 10 Filter'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.18c1jit17rt4ac16gdao60nudujz].[none:Region:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.18c1jit17rt4ac16gdao60nudujz].[none:Country Name:nk]</field>
            <field>[federated.18c1jit17rt4ac16gdao60nudujz].[none:Region:nk]</field>
            <field>[federated.18c1jit17rt4ac16gdao60nudujz].[yr:Year:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5CE6A4E3-F0E5-46C5-AE16-828EEE1FFDBE}' />
    </window>
    <window class='worksheet' name='Challenge 27'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.18c1jit17rt4ac16gdao60nudujz].[none:Region:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.18c1jit17rt4ac16gdao60nudujz].[none:Country Name:nk]</field>
            <field>[federated.18c1jit17rt4ac16gdao60nudujz].[none:GDP (current US$):qk]</field>
            <field>[federated.18c1jit17rt4ac16gdao60nudujz].[none:Region:nk]</field>
            <field>[federated.18c1jit17rt4ac16gdao60nudujz].[yr:Year:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A4B76166-090E-4A5B-87CB-5C3DE8AFEA66}' />
    </window>
    <window class='worksheet' name='Measure to Context'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.18c1jit17rt4ac16gdao60nudujz].[none:Country Name:nk]</field>
            <field>[federated.18c1jit17rt4ac16gdao60nudujz].[none:GDP (current US$):qk]</field>
            <field>[federated.18c1jit17rt4ac16gdao60nudujz].[yr:Year:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D3F4F063-6802-4F7F-9FB3-9F76CB4EB6DF}' />
    </window>
    <window class='worksheet' name='GDP Not Null'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.18c1jit17rt4ac16gdao60nudujz].[none:Country Name:nk]</field>
            <field>[federated.18c1jit17rt4ac16gdao60nudujz].[none:GDP (current US$):qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{0C075422-F725-4F57-91C9-45D292CCFB13}' />
    </window>
    <window class='worksheet' name='2018'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.18c1jit17rt4ac16gdao60nudujz].[none:Country Name:nk]</field>
            <field>[federated.18c1jit17rt4ac16gdao60nudujz].[none:GDP (current US$):qk]</field>
            <field>[federated.18c1jit17rt4ac16gdao60nudujz].[yr:Year:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A1E03749-AFC1-4F53-9B75-B96B3FE23720}' />
    </window>
    <window class='worksheet' name='GDP Not Null + 2018'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.18c1jit17rt4ac16gdao60nudujz].[none:Country Name:nk]</field>
            <field>[federated.18c1jit17rt4ac16gdao60nudujz].[none:GDP (current US$):qk]</field>
            <field>[federated.18c1jit17rt4ac16gdao60nudujz].[yr:Year:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{2320DFF6-DCE8-4B1C-A6E5-902F70AEBB6D}' />
    </window>
    <window class='worksheet' name='Bottom 10 by overall '>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.18c1jit17rt4ac16gdao60nudujz].[none:Country Name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{917DF84C-E0A9-4BBC-8A43-3834A8B54EE1}' />
    </window>
    <window class='worksheet' name='Bottom 10 + gdp not null'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.18c1jit17rt4ac16gdao60nudujz].[none:Country Name:nk]</field>
            <field>[federated.18c1jit17rt4ac16gdao60nudujz].[none:GDP (current US$):qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A0F1A29C-5FDF-4967-A58A-5CF011C4960F}' />
    </window>
    <window class='worksheet' name='2018+GDP +Bottom 10 without nulls'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.18c1jit17rt4ac16gdao60nudujz].[none:Country Name:nk]</field>
            <field>[federated.18c1jit17rt4ac16gdao60nudujz].[yr:Year:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{673EE45B-B452-4E2D-805A-95296BF79DC1}' />
    </window>
    <window class='worksheet' maximized='true' name='Bottom 10 +GDP Not Null +2018'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.18c1jit17rt4ac16gdao60nudujz].[none:Country Name:nk]</field>
            <field>[federated.18c1jit17rt4ac16gdao60nudujz].[none:GDP (current US$):qk]</field>
            <field>[federated.18c1jit17rt4ac16gdao60nudujz].[yr:Year:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{19906109-7059-4068-BE4B-7764AB93F369}' />
    </window>
    <window class='worksheet' name='Relevent Values options in Filters'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='radiolist' param='[federated.18c1jit17rt4ac16gdao60nudujz].[none:Country Name:nk]' type='filter' values='relevant' />
            <card mode='radiolist' param='[federated.18c1jit17rt4ac16gdao60nudujz].[none:Region:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.18c1jit17rt4ac16gdao60nudujz].[none:Country Name:nk]</field>
            <field>[federated.18c1jit17rt4ac16gdao60nudujz].[none:Region:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F1109A26-EC2E-49B8-960B-D386DF29B1D0}' />
    </window>
    <window class='worksheet' name='Parameters in a Filters'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='dropdown' param='[federated.18c1jit17rt4ac16gdao60nudujz].[yr:Year:ok]' type='filter' />
            <card pane-specification-id='0' param='[federated.18c1jit17rt4ac16gdao60nudujz].[none:Region:nk]' type='color' />
            <card mode='slider' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.18c1jit17rt4ac16gdao60nudujz].[none:Country Name:nk]</field>
            <field>[federated.18c1jit17rt4ac16gdao60nudujz].[none:Region:nk]</field>
            <field>[federated.18c1jit17rt4ac16gdao60nudujz].[yr:Year:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{0172A143-64D2-400D-9983-3E4F3CEA7BDE}' />
    </window>
    <window class='worksheet' name='Parameters in a Conditional Filter'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='slider' param='[Parameters].[Life expectancy at birth, total (years) Parameter]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.18c1jit17rt4ac16gdao60nudujz].[none:Country Name:nk]</field>
            <field>[federated.18c1jit17rt4ac16gdao60nudujz].[none:Life expectancy at birth, total (years):qk]</field>
            <field>[federated.18c1jit17rt4ac16gdao60nudujz].[yr:Year:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{49BA68D6-080F-46AB-8C23-FFC2CD1F3356}' />
    </window>
    <window class='worksheet' name='Measure Filter Example 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[federated.18c1jit17rt4ac16gdao60nudujz].[sum:Population density (people per sq. km of land area):qk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.18c1jit17rt4ac16gdao60nudujz].[none:Country Name:nk]</field>
            <field>[federated.18c1jit17rt4ac16gdao60nudujz].[none:Population density (people per sq. km of land area):qk]</field>
            <field>[federated.18c1jit17rt4ac16gdao60nudujz].[yr:Year:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{AB230F90-AD5D-49FF-8B78-CEC132AD0552}' />
    </window>
    <window class='worksheet' name='Measure Filter Example 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[federated.18c1jit17rt4ac16gdao60nudujz].[sum:Population density (people per sq. km of land area):qk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.18c1jit17rt4ac16gdao60nudujz].[none:Country Name:nk]</field>
            <field>[federated.18c1jit17rt4ac16gdao60nudujz].[none:Population density (people per sq. km of land area):qk]</field>
            <field>[federated.18c1jit17rt4ac16gdao60nudujz].[yr:Year:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D26C287C-6D35-4603-AE31-7023A2984CC0}' />
    </window>
    <window class='worksheet' name='Measure Filter Example 3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[federated.18c1jit17rt4ac16gdao60nudujz].[sum:Population density (people per sq. km of land area):qk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.18c1jit17rt4ac16gdao60nudujz].[none:Country Name:nk]</field>
            <field>[federated.18c1jit17rt4ac16gdao60nudujz].[none:Population density (people per sq. km of land area):qk]</field>
            <field>[federated.18c1jit17rt4ac16gdao60nudujz].[yr:Year:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{3473A95A-DA5B-43BA-8B35-1220E9D3FE66}' />
    </window>
    <window class='worksheet' name='Measure Filter Example 4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.18c1jit17rt4ac16gdao60nudujz].[sum:Population density (people per sq. km of land area):qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.18c1jit17rt4ac16gdao60nudujz].[none:Country Name:nk]</field>
            <field>[federated.18c1jit17rt4ac16gdao60nudujz].[none:Population density (people per sq. km of land area):qk]</field>
            <field>[federated.18c1jit17rt4ac16gdao60nudujz].[yr:Year:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{BEA76517-19A2-432B-B2E1-50138199B753}' />
    </window>
    <window class='worksheet' name='Measure Filter at Aggregated Level'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card param='[federated.18c1jit17rt4ac16gdao60nudujz].[avg:Individuals using the Internet (% of population):qk]' show-domain='false' show-null-ctrls='false' type='filter' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.18c1jit17rt4ac16gdao60nudujz].[none:Individuals using the Internet (% of population):qk]</field>
            <field>[federated.18c1jit17rt4ac16gdao60nudujz].[none:Region:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{CD2875FA-2EE3-4A32-8CCA-E9A42BBEB61F}' />
    </window>
    <window class='worksheet' name='Boolean Data Type in Filters'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[federated.18c1jit17rt4ac16gdao60nudujz].[sum:Mortality rate, infant (per 1,000 live births):qk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.18c1jit17rt4ac16gdao60nudujz].[none:Country Name:nk]</field>
            <field>[federated.18c1jit17rt4ac16gdao60nudujz].[yr:Year:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{96E9AB58-A05C-438E-A3D9-93132D094C06}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='2018' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='2018+GDP +Bottom 10 without nulls' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='27. 1 Symbol Map' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='27. 2 Symbol Map (2)' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='27.3 Symbol Map' width='192'>
      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
      SUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='28.Filled Maps' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOy9d5Ac2X3n+UlT3ld1VXW19xYN791g/NCL1JFiiNRKK1G7t5RIxe2dNni3
      d6e5CK1iL+LuYnclSjpJqz2JIiWaoZkhZ4aYgRlg4NFAA+29q67qqu7q8r4q8/5ooOEamIYZ
      Q0nfCAQ6KjNfvvfy93vv558wOziqGksCoiDgzydo6mgjEU8QnfYTL+VwedxodTp0Bj3nz5yl
      WC7R5qslFI3Q7K3GbrKwJBbwVVczNjZGU1MTS+EwrqLEhYkhenZsw+PxcD9kMhk0Gg3DQ8Ns
      3rL5vvfdxPDQMLGlFbw1leTzBZpbmtFqtQCMDI1AqozDYAPhPZv6wBBJreBu9pFIJGhubv6w
      u/ORhaqq9PVdYzmRwd3UjSCKa9eykQAtVS4qKioeqs18Pk86ncZmsyFJ0j3X5bnZOdoNDgx6
      I7GZORZMRsqlEsRSJJZCzA6N4nG4OPTLnySTyzIxPIomnqOntgmiaUpZhZRRIRaLodVomZ+b
      o6Ozk97X3kZKZZjp7cf90jOYzea1Qc7OzhIJL1FKZ3FUenC5K4jHYphMpvcc0NZtWwkEAjid
      TvR6PbIsr13r6Org9IlTLM2GaHDVIAgfLheoqgpAOpnA3eijvr5+Q2P8pwhFUTh7sZexlSJm
      bzNLBRlVVcjEVignFjmwqZn6+vqHbje8tMTU5BT79u3FaDTec124dvKMWi+ZQRCQBIHj04M4
      PG4ii2GebuwinknjT67Q88JhJEni1X/4PrIqMDwzySe27sNqMHJsagCD0UC9y4ut2kvPtq2c
      /v5r7G3soG92gqFogMpKH/VNjQQmpqmUDPhsLnSyhpHgHAmDyMHnnkan0z32RJZKJc6fO48p
      LGLU3TvgDxJLiQixbILGilrC+gQHnj64tlv9M25BVVUu9l5hPC5iqqhCEATKxTylxXG6G320
      NDWi1+sfqe1MJkOxWMRms93zzoVAEOkPvv4/vfzTsydBhZKiYJV1dDt9VFsc6DVazHoDk7El
      lkIhYpEoT3/8Rbq3b2V6bILDLZuYCgdYUfJYZD37q1qJL6+wkFzBo2ixGkx4rHaqzQ6q9VYy
      oWU8OjMNbh9aWYMkinisdhLRGCWDBofT+diTKYoiqVSKXCiFXvP4DPU4MOmMhBPLLCRDxDNx
      JkcnaGhpRKPRfKj9+ighn8/Td32A3tE5nA2dCIJIJhrGmgnwiWcO4qv03rHLPyyOHT+BAHeI
      4blcjtnZOY5dm0KciIVw1PgYTy3z9sR1MsUCqgqDgVl658a5Nj+Jt6Ueu7sCh8uJLMuIokhT
      SzPnpoYI5lI8+9xz6MqgkSXMshaz2Yw/uoSqqgiCgNNsxWY00VJZQ7XTjaqqKKqCqqqUFYXF
      ZBSd/skRa3NLMytKgmK5+MTafFQ0uetJqRmqG2qJLq0wMzPzYXfpIwW/f4F3e/up7NqLIIik
      o0sYErM8d3j/E1koDh86SFtbG7C66ufzeb77ve/zdu8I9tp25G27dzE5PEp+dpGeTfuYX1ni
      fMLPvk8/jyzLFAqFNfn9djz1/LMAhMNh9Ho9zvYGjo9dx22y4tPXUjbq+PnAJbbXtfJq77v8
      2qEXUVWIZ1KY9QaOD17hqa6tiIJIslzAsI589qjQ6XTs+9ghzr92mgZ7zRNr91GRSaRxe9wc
      /trhdRWxf6pQVRVBFEDWgQDp6BIr04M8+9Lhxyb+ZDKJxWJZk/tVVSUSifBXf/3fyKkyW158
      HgQBGcDqsLMwF6Q3NENFcx3PdnetNfQgmbVcLqPRaJibnaO7q5t5i4WKCjcerwdvZSUr0RWC
      s/PsfuoQfStBEpkUebWM02ylc/8uZhJJJFni0AvP4nwC4s/tsFqtaF0GioUSGunRt9DHhUaS
      aXTWcuHEWZqbmzEYDB9aXz6KuHT1GhUNnZSLRYKD5/nkMweprKx87Hbn5ufp7uq647fzFy5Q
      KBRQNRpUVg2FMkBDcxO+6ipESdqwvKWqKsVikbmZGVpaWzGaTJSKPkaHhpifnqZry2ZcLhcO
      hwO9Xr9mEblpmREEYU1Eej+QzWYZmRjFUb3tQ2OAYDTEcmqFpJDh4HOHH1mR+8eKeCLBxIyf
      zqY9hCaH6G5rpr297Ym0fZP4FUVhcmoak8nI4UOHsJgtXB6eXrtvjTJ09/k4xWKRcCiE1+tF
      vrEt5XI5zpw8RTAYJBIMEVwI8OyLL3Dp2Dscqu8kXypy/Y0TxPJZWvdso7W1lVgsxszYBJJG
      pr27C0EQiCxHsFqt5PI5nE4nqqoi3mb7fRzo9XrautqJBRMYtB/sqpvOZ9DJWjSyBo2soa2t
      nbaO9g/dLPtRQjKZ5LW33qHt0KcRBIFSYom9z7z4xOdIEAQsZhOpVIp8Lo/T7cE0t7j2Htk/
      P09b+/ofp7+/n8xKHGdGpXdskh2HDyBJEsP9g+SDyxzwtSDXtHM94md+bg5NaVW5Nen0bKlp
      YiC+SENDA8FAAP/lARpsFfRPz2Cx21gYGMUh6jkbDeLSGFElEVEr07V3J27v/R1nDzPwHTt2
      cOGNd9/XneZ2qKpKoVRgaHkch8ZKs7sBRVXIJNL/TPx3IZfLEQqFaWgQSEeXaa5alRY2glKp
      RCKRwOFwrM3rSjRKOBymo7197b7B4WEmZxfIFMqUBA2K1oTGaMXVuW/tHjEVjXP27ROUSqU7
      XqIoCsGZOcbHx8kW8+TiKURRpFwuY7fbmImEMOp0qAKkSnlUFbw2J1p5dZeIZzNYaryUy2Vm
      Ll6nx1tHKpcla5R564evYlNkmioq0RVVtKLE3tpW9lQ2MXT20j19eRQIgoDdbsdYaf3ArEFL
      yQhH+99BW5YJ5VeYzi3g2ORl75H9H8j7f1GgqiqLSxEMdjflUpHkwhj79+za8PNvvfMuf//m
      GYKLiwDkCwXisdgddFMsFhmfD1P0dqGr34qprhtLZQN6qxNZc0uvFRstLnTxPOdPvctg/wCx
      WIw3Xn2NaDSKlMzxfPNmBuamsFR5EEWRS++eJZNKY7BZkCWJvrkJYvE4QwMDmHV6ktkM6XyO
      ufgydQ0NBPx+vPpVK9JccoXlpSVKxRJ2kxlBEOipaWRiOUgoHuX67ATagsLoyMgTmmqwOWws
      pVeeWHsPglFrwGq0EEyFmZ6dJlPK0dTSjMVi+UDe/4uCdDrN1fF5qjbtJR7ys72t/h5H1f2Q
      SCaZm55CSYTI5/MAvPvuWfKFAr4byvNiKMSxk6cxamVURXlgeyIqzMeX0cdy2EJpTh87QXJx
      mTNHj1FSFWxGEz21TXiqfQBIikp+ZpEOqxejVs/THVupNdgRBYFEIcflmTGu55bxbGrFbDaz
      HArjMlsBKGsl6pwePrZtHxUWOwBGrZ6KSg/LdomMSUMwGSWdSq0N7nGgqir9gwOks5nHbmsj
      iKZjmHVGTCYTe1t2EAqFPpD3/qKhf3gUbcVqWINehraWpg2LiFf7hzC17Ma9+SlODQcZGB5h
      +7YtnDl/EZPJxGIoTCKRwG6zYNJrUJXyA9sTRVHkuY5tbKpuwGW2YkgXOdK2Ga9spCivKqRe
      m4OlcBiATXt3sZxP0+TxIQgCGklmZ2M7TqeTcC6Jz1lBz7atNLW2AJBYCK2JRWK2SCgVI5pO
      rFmBzo8PcuFqL8eOnyAwNcPB5m5M4TRXL1xasxw9KgRBQBAEZPGDsb3Xuqrpqm7HojGR1uYR
      WBUl/xm3oKoqZqOBcmlVLDWLpQ3L/gChlQRmpwe92Ybe4SWeTKPT6cjkS0QiEV559XV+fvoi
      sXQOh81CcXGcQjZ93/ZEAM0N06cgCBxs34zVYKKhwke2mGcpEcOkM5BNpFBVFYPBwL6PP8do
      LkqxXFr1rpWKyHodM+EgYSGPq8IFrMph2tvkrUIhj7EssBBdXiNunUbL7oYOdGXI5nMksmlq
      XR6WJmdZCocfmwk8DjfVjkpUVV3796SRyqWZXZ5fnR+tni2+LpyyjR37dv2z3f8uDI2McmHE
      j9FeAaho5Y1b/VRVJZa9pc+V8lmsJiPDo+OIOiOTM3OAgq26hZSlgWtTizy9axOZwBjKfXYC
      sVRe/4JBq8UsaNZidsRomnR61ZphsVrZ/fQhrgVn+f75EwzGgoiCwCZ3DfGlCKlkEgCNRoNS
      Lq9tb91VDcTzOWorvGur8/62TTy7aQe//tTH2FzfgtvmoFQuMxWY53vf/S7H3nqLyHJkw5N0
      N4rZAqIg8tO+t7g6O0A2l2RuYRr/cgRlw7ygEostky+vv5obtHrC8TCXRvuIZ5IIgoBLZ2d+
      Zo7yfeb3nypSqRQ6h5dCNgUIxLIlisWNGSkCwSB6u/fWQpaLs7QUZjSlxen2MhlYwtV9CIPT
      h6TRInub+fnZPjLRMMHRq+u2Kd5P9NLKGp5u6cFmXA3fFREo3CaX63Q6JI+d5s1dHPr4C4Tm
      FvBY7LzQto3hK9fWOikYdPTPTxJOxHCZrexr7EB/264g3wgNMGh19NQ1o5M1N0QrDdNT04SG
      pxg6eZZsNruhSbobTZ0tzJVD1DTX4l+Z443X/46LU/P4F+fIbZg2Fd742d8wn1j/Q0mixLaG
      Ov7qe69wda6fxUQYg1ZPZH6J2emZR+r3h4GbsTLvJ3q6uyA4yNi5o6CqqAYHizesOQ9CKBzm
      VP80Znf1Wl+1SoF0QUFvtlMuq3TWVZIJTpJLxQCQNTosDT1IejN6k3XddmVJlFDUIgLCfRUR
      VVXRaDRIkrRmU1dVld379wKQzWSxqzJVjgoEQSARjKw5tTwNtfRfuUrv/CSf33GYaut7hzzo
      NVp+9eDzDMxNUiyXOX39CjmDzL6nDmEymR7Kpt7W0UaFp4K+q1exmTT84dsX+IOdhzgxOIUc
      vc5fvjvJs3v2MDU1Qll28IlNHn52dQyLrwd9+ASCtYWMoREPUEwG+K9H32AuJbO/okB/wUYq
      pfLpTiPfutKHP5nA7LKgrTNTXC6yuaaT6Ep0w339MHBzoQoEArx19E1Ci0H27DvA1Ohl9hx4
      gc6unicav2Q0GnnmyFN89wc/JJuMYqrwcW5wgooKNwbD/T3lZy9cRqhovyOSoGSpxC7EGJkd
      xlnXzlgkSL5YIj49jMnhWb2nkKeYWEa2utdtV/ryl7/88lQkRCAZRSwpWPTrJA0IAjadgXcv
      X0TRiLgqKnjn5EmampsRRREVlaH+AaotTmRJIpvLUTJqVrNwZAklsMJzndtQVBVJku7ZdlRV
      JRSPYtYb1t4nSxJVTjfzkRCZfI75BT/F5TjpYgGv7+FiRXrPXSY5G0XWwOTgebp7jnD9wlGs
      Jg3F6qc5ZAlw0l/mQE8X0/3HyDo3s7XOx+L8dfbufYmLo5N4pRSSXGJwKc/K4ixeo4i7+wiz
      I30kImNYmjtILCZ58fABGrtamBmfZjwwhcVlpbGp8aH6+0Eik8nwkx+/wltvHUWrhpBkLf65
      SbRCnJXQOLOz0zgqqjGZ7g2IfFRYrVZ8Ph/R4DzR4ByB+WlkoYyvsnJNNL4bpWKeQCSJ1nzL
      XKqqYCinkJQiWLzozDbM7mosnmrEG0wrabToK2pIRkJYKu6lG+k3fus3Xy7mckQLWa5MjFBj
      q8Cku5cTJVGi2uIkHAgytbiAwWTE51u1BOWyWVJzi1TZVj1zZp2en757grrGBpxOJxlR4e0L
      ZxhamKHB6UWWJFaSCSKpBBpJQlXhjWvnyReLeKyOO8IhfPYKrkyP8tmdh0ln0lwYvEZTc9OG
      M6sURWGof4hwJEyNsZoKu4Xe6304qrroqavB7mlic3Mb+XgARWvjmd0HCAfnsDir8dmN1FS3
      IEtaGjxOfFX1pDI52uqbaKqqxuWtx6KRaGlpZGxqjpJWpL25gWwmg6OuAl9jNR1dnetmIn2Y
      KJdL9PVdZW5ujmt9V7ly5So+R44dHVoURaWnsURHvQazQaHSmmBoKkVL26Yn6s222220NTfQ
      2VzPpvYWamtq+PHrRykWi1R6Pfe8K5/PMxvNozXe8qkU0gma3SZmgsvonL6138W7rH6SRovZ
      dW+bAEJ0YFLVpwprMfrSA0yG+WKRYDxC79Qou196htbWVgL+BcJLSxSWorQZXeg1WsLxKKcW
      x/nlz39+zQqyuLjI4MAAMzOzyCUFWZKILC+TKhWor6zCYbKQFMo0yhY2192ZNzu7tEgim+bt
      /svs7dxM2aDhmU9/fENxQ6lUipP/cBSX2cFk2k84HKalop52X8t7PrtRqKrKSHACn92D3bi6
      Qg0GRnG1VnL4yOGPXBjE9evX+d7f/zWIOgxahaYqlTqvhrpKmXJZZWAyRzKjkMkJJIpuPvPZ
      LzDvX6Crq4sKl/N9GY+iKBw7fY6JxQSb6xxUV/lwOZ1rTsQLl3oZS0iYK24ReioSotWUZSCU
      x1Xffr+mHwjpG1/9vZelfAlBEBCFewlqORlHliQkUWJoYYajg72YvRV0dXZiMBg48fqbpBaX
      uTY7QSARJRKPodNoWErGuT4wQHNLMzqdDrPZTFNTE9GFRTY7q4knkySEMoePPIV/MUBjZwei
      KDC56KfB5kZ3Wzy43WSmVC4zvuhfDamWBTb1bNoQAyiKwujkGCb05MsFBJOEV+fCYnhyW7og
      CLgtLvSa1Z0zklxBV2Pm4JFDTyy470lhoP86r/7kR4hqBo1U5ksvGmmp0VDtkdFqYGAyx6Zm
      HV2NOuKpIrOLaQZmIswtLhMO+Olob3voDK1SqcTwyCgVLtd9mUcQBBpqq0lFFhkMJllIC4xN
      zxEJBaipqmR0bJxAILCaMnljTouFLBZyRAsChg3olutB+vyvf/nlqXiYfCKN03Rre1EUhVgm
      xfnAJP6lEGatbtWkp6jYq7xodFpmJ6dwlSS217Ywu7TIoZeewz87x9aaZmptLs4OXCWyskIu
      mcZbvSouLczNUakx0VlVTyaTQTFo+PgnP8nM9DQarYZ0Ks1SNkmlwYpGktcmzKI3YtYbuDw1
      SqXdha+uZkNikCzLeKsqCcQW2fPMfnKZHPmVDA6z/ZEm7EFQVZVIOgqVGvYfOfiRSn5Jp9Mc
      /fnPGB+9jlRepKNBi8smMD6Xp9Klwahfneex2QKtdVoEQaBvvISm6WPUbz2Ms7aF+elJ+kcn
      mfMHkVBw3haM9iD0XutnOC4xP9ZPa1MjgiBQLBYpFApriS+qqtLbe4UqXyX+SAJbdTNaq4uk
      quXK+dNs7mrHazOxmCqhuaGn5pJxOqodjE9MIOYTJIKzSAYLkka74V1KlMsqjooKkqUciqqQ
      yKTxR8JcW5rnXGQWt8uFwWFlOBshaRDBbMDtdjM0OEi5XCaaz5DOZmn3VDM5OYU/ukwsk8Ji
      MPJU9zZW5oMYo1kW/AsoikJeKbOUiCGKIu2+WtRSGb1eTzaTYdv27bR1drCSTPDW0BXKtzkv
      bipHhVKR5i3duB6iPIbT5eSp559Gr9cjlFRqK6o3/Ox6UFTljr4BlBWFUGKJYoXA7oN7P1LE
      n0wm+eaf/DHnzp5ldHyWHR06Dm4xkMooWIwC18ez9I1luTKSxWGV1ognVKzG09i9miei0VLb
      s4fqrU8h127m8kKW0xd67wlczOfzLC8v3+EBVxSF4oqftqZ6FEXB71/gOz/4CYNDQyQSSUKh
      MG+8dZzr8xFCKzFM2tW5EwQBrcGMtX0fF8YXsTsc6FIBlBu+FZ3RwuJyjOf3bUdUShSKRcr+
      foq5+4e+3M0Y0v/+O//25SsXL2FtqGI07GciGsLcUIWi11AKRNCVVMyChqlYmBc//Uma2lox
      m03UNzRgsdkYnBhjdHYao8/Nzr27EXIFaox2ZEkiFI+ursAWO5PLQfRGA9GxWTZVN6IoCm/2
      X2T7/j3Y7HYWAgu4XKt1X9KZDDMBP5F4jDqXZ00vcZmtlBWFExfP0tHRgdls3jCnj42OcuK1
      tykm8ngt7seSYwulAldn+qlyVOJfCbCcjVKwq9T1NLJl+9bHSuJ+0lAUhbGxES5fvoxRW6ZY
      LJHLlwitlLBbJHqaDYzPF2iu0WA1SdRVapAlgUJRYSLTidldtzZXGp1h7W+twUy8IDA32k9z
      Q90d1pujbx/j/OAMiXiM2qpKfF4PHY01iKLIm+9e5tzFy6RVmUqbkfOjfibCSfI6B9aqZmIl
      GcnqvkORFQQBjcnO3NwsiWQKk3s1zVXW6pibm6OcS1J0tWL21JFYnEEVNegtGwuvkJ7+2Asv
      G1w2mlpaaGprxeFycuniRRLJBP0To3hsDjbXNFHM5hkeGaGythqjyUQhnyeZShEcmeTZrm2c
      6LtIKhKl0+TGYljdopxmC7VODwvxCL7OFv7rX/wle5o6cJmtiKLIwsoSu54+hCAI6PV6rFYr
      l469Q5vWwVx0iUguhYRIld21NhEN7kpkBL7z6o+YnZ2hta3tPcupqKrK8OAwM+PTRDMx3GYn
      Bu3jZWctlJbI68tUddSy9eAO2rracTjfHwXxcXDhwgXCoRAej4fJqSkaKgXqKjUc2WGixqPB
      oBfpaNDRN5anp0WPLK32X5IE8jE/kZIXnXl9YpK0OsrGCs6eOoHbbsJqtSJJErlcnrjOw1Iy
      j0HJYLdZmZia4cxIAJ2vDVt1C5KsIRjPYqlqxmCrQGO44XCVNXcUxLoJQRBQNUY0FifybdU+
      NOkw27taGZkNojNZ8I9ep6KpG1m7sSIL0v/xe//u5cJyjEhwkeVZPywlaHZ4GJqdQhYkPrPt
      ADqtlmpHBQ12N/MTUyxMzlBaXCEeDNPirsJpsjATXaLZ7qXOeSuZRRJFZFFCI4isKAV0gsSO
      qqY1xdBusuBPRXF7vZjNZgqFAisTc7iMFsoOIx3dXWQLebw689ozgiBQ4/IgCQKZRIqZ+Tna
      uzofqGyqqsqxN95CjxaX0UG1w/dAa9eDoKgq4dIK+58/xLad2/BWVn6ka/1YLBbaOzr4+Zuv
      0+TNsbPLQHeTDkGA23l1aCpHS+2dsrPXITAxuYzs7lqXKGH1e+idPoaHBmmtq0Sn1TI5OcVK
      pkSdsURTfS2nz19mOJzBVtN66xmzFZPDvWav3wgkWb6D+Iu5DBVyHqNBTyizKi6lVpZIhPw4
      qho3tBjJFRYrNXWt9+Ts7qhq4ufXL7KUiFHlXJW3RUGg5TYz1E2oqopTayAcW6Gzsvae63aT
      hbHpMap0FuTb8nNtRhMTgQBs7gHAYDBQtOqYVlPsPXQAnV7PtfIV0sksNuMtq40gCBzu3MrC
      yhJ/eexV4pkUBw8doqOjY91BRyIR6m01VFu8d4zxUZAtZDFX2x9Y7vHDhlousry8gtZkxWK1
      cvniBXLpEJhUHBaR22lZVRSSmRImw6o/5vapWYqVyZo6MYkSqUgIjd6I1niv2ClKElpnFcHF
      EJYWM8lMDsoCHS1NSJLMfLKMu6nzyYxNVVc9YEAmOMmzh7bx2qlerI2bVyWEbYcoP0QClPSN
      r379ZSlfvscD5zBZGPJPU+Py4LI8OFlBEASaPFU0rONpu3m9xl6BRWcgVywws7RIvlhgdGmB
      noN71kqiCIJAfVMjNY0NyBoNiXicSP8ENfaKtb4VyyXmlhcx6fToNVqqHC56hwaYn5mlpaN9
      XcuQRqPh+nA/ekWLXqN7LAaYSS6w79kD7ynn372g3P57qVR6X5Xkk9/6I17pi1HIZFHVAldO
      f4cvPqdnJV6i3qdFkm71qRCN8r/8WS87t9SiEcFkuNWvUb9CzrkfndFMMZdhaeQiIiDpTYh3
      FRooZlNUWTU4HXacdisDMyEWIilGJ6fQV9Sh0T2ZqNjI/ATzAxcoZFI02jUsxVPkTJVr7QuC
      gHib9fC9IHMjIvLuvFmtRsMntx9Y1zfwMLi93dNTQxgcVsJz8yRKBT77xc/jdLnWfa6QLzB2
      /gpdnjtrfMbTKf7uzFscaOuhyuHCY3Pw8e37ODly7b6RfaIoYhB0WPQbV5pvolQuEYyHqXH6
      mAjN0LKv4z2rO6iqymJokTffepsv/cqvoNFoyOfzSJLEwsICb5w+zYEtW+jq6npfFGarw8XM
      lTE+9eIzfPPlf42jQuD3TubpsGUpJn1cGV3C4HKx1ZLi1ESaWEZhpG+It5eT1G9qZuzEZWwe
      A66tu5FLc5idXkxOD1lPHR1uHbG0n+npBEZnJSanl0xsiRpdnlxO5JWjp9GVM+jMVRhcj1/e
      5G7YPNUkgtPkwzOsaKoo63wYrI9u0n7g7Ne4Hm+bT2TSXJgaZmt9C26LnUanh+vRAP5UjI6u
      Tip994pTN7EcWcZUFpDukj3HgvPU19Zibq7hjeMn+aWdBxnyz9C2qeu+plFZlpHNWniIVIDV
      qnVl5iILzK8EKOoV9nz64IaqE+dyOb75l39FxqDnb7//fbSiwHgkQiYcRqmsJG+3Ej57htra
      2odKBtkomg99kf9nZ4Df+jdfR1ZizGZUipJIRlSYGRjFX3Swr1bm9VN+fvN3D/JH//kaF04N
      Ite30CkoJDPwsU0Oji0l6daOoJS3IUoyFY1dDMyN8kxPHc8d2svs7CwLwRkcXhuhlQz94RIm
      XweJ2DIm65MfF4BGb6RpzwurkQvl0lqy1aNC+sbvfP1lubBqV33SFgxJlMgqJa4EJlEKJYJq
      FjWRQeew0NPTg8dzZ3xGKpWi7+pV8vkCKysRxsfGafFU3XGPCszGljny7DOsRCLkkmn8uQQH
      Dx96YHEtnUnP5MgEdsP6YbF3I13IMpqYwuS10tjRzOEXjmw4EvV6fz8LwSB2p4NgKMSCAAmL
      maLdRtlqAVEkLQiEp6fZuenJxtgAzA9f5NW3zqN1+NhdnyWeLLGr2oC3rYaP7aliIZDC43Ow
      t8PMt48uoXNu5ktf/hKLkTIVFRJOvUJbi5Oy1oIgudF6Nq0pwaVchhq7noobNZ/q62oJLkWY
      yRkwOlYjLrV6I8JjSg7vBUEQ7on5uRNZXv0vf8TQcD+B5TINTbXrVsyXeUAY9ONCliQ2+epw
      GcxMLvopGWV2NLSRLRaILoTI3VYpTVVVJoZGcEWLKCsL2CWJ57u239NmXYWXmmnF744AACAA
      SURBVPACfVf7OPTMEX7+s9fZu28vLS0Pju2pqalhwjPG9MIsJr0Jj/X+K3m2kGMwOMLzn/sY
      virfQ5dV2bJ5M9lslncvXCCm1aKYTQiShHB7uT+dlvlQ+H0p2dK6/Skkew3vnHidBnsVrV0+
      PA4Zj3N1w//ab9yKqS+43Bx+6V+thqt4mkgHXmf7/lWxtDqv8OPrOiy37cKSVs/09AzDw8Mo
      opbd2zZjt5jJTM9u2Pb+wUBhMZLlc7/yGb7/Z39OjTWBo/kA86ODeCwFBkf9bD54hPc9UEUU
      Vu34WosJj8eD22Kn2VNFl8HF5aMn1xJdSqUS8YUQbouNxViE16+e43h/L8XyvSVS9rZ0U5oP
      c+L4cb706/+CHTt3bqgvWr2O/vkRRoMTD7xPVRUSxTQV7lUmeVgCvZk66q6uQr1B/HdfF9MZ
      ntm67X2LFRodGcakzrKlVUskXsZpXX+1NJjsaDQacrksmaVztNzmJNdqBMxqmFIht/abpDOC
      KFFVVU0wK/D9o+9y4doQuXTyfRnHYyEd4pU//Q94d3ycyPVjLEVT9F28zPRAL9likVxk7v1j
      gJuJFqdHrnHVP0XDtm5KpRLFcomyojDgn8ZUgtd+8iqpVAqNRoOl1supxQmsXY186le/QN5h
      4Nz44Jpb/WabBq2O/W09LM0tEFhY2LAi6a7yYDQY2N207YH3RVJRXBWuR7bUaDQaNvf0UO10
      IhYKa2a7myY8b6HEFzZv5ekDBx6p/QdhNbllATlzke4mLfOhAulsmVzhXgUoV1DRGlbFliuX
      3qHFE8VqukUSoijQUZUjtbyw9pvWYGKxbCG4tMLOBheOqgakmh587Q+e0w8agiAgWn08/9nP
      Exw8AwYz1989Sq6oYK+qJzl9len56K1w6CeN8eA8C7FlfJs7aG5rJZfL8faPf0qXpwZJkihV
      OZifnMYnG9HWe2nv7mJ6aopoNMrefauVu8rlMq/84AfkFiP8d7uPkM7nODnSR5u3htbKGl7r
      PUNSB7/1la9saJUulUocfeUNmoz3Pz1GVVWWkysk9Vle/KWNhVzf712XLl+mWC7z1tgoK2oZ
      gyix3VXBxw8dxm5/8sF4hUKBn/30p8zMTGKSQrTWiEiSQHudBp12dRzZRJqpYApV0lPQbqKx
      8zmGB3qpMV6l0lokXhRxW2859vrGCyzYv4jxRrx9Lr5EUbagUfOkwn7stS13OKc+KNyhF95W
      6ODm7xstfiB946u/t6YEPymoqorFYGIyscS+p5/CYDCg1+tp7+nm+vgo9voqGpqb8FZVYq2p
      pK6xgWKxyJULl6isrsLtXl2VRFGkqbmZ+dk53HozNqOZuUiIi3NjZLJZMsUCte0tNDZuzOsn
      iiLRZJxIYAmrYf1iVSoqffMD7Hvu4GMRqSiK1NbUUF9Xx5b6enoqPBxs7+Dgrl3vS5HccrnM
      +fPnuHj2TXa2F2mukklnSrTV6TDqbzFx/4nL/N/HMzi9R/BaLZy8PIBPN0ZHvUhweJzvXM+y
      v+2WLO+2iyzOTpIztiNrtIy8+ecMJz20t9RgdHju8Qd8kHhQaPVGIf3PdzHA7Q6xR1XQYpkU
      rw5coGvHVnzVVWttSpJEQ0sTFpuNsz89yuz4JFv2rpbE02g0yBoZk9GETq8jFAqRzWax2Wy4
      Kr1856c/pojCvqYujHoDQqWd2VCQvXv3YrPbN9xPX7WPa1eu4Tat738YCU7QvruL9s71vcob
      RXj8BL/x239IPKWw7cB2fC4XNutGLFAKf/ry71Oq2U6NYzX47JX/638g1fAS1fcpMJdPL/Pb
      v/Zl5kMBuhtlntpmwGEViSbLGPUihtsYwD8+z08vFnn6k19k7vxx5hYGOH91kDePDtLY7GAu
      JZObnuK//PUFFIedP//TY4yNjhCR6znz42/hn57G0ryP5rqHO6zuSeP2b3P3d3qY7yZzgzhv
      T3a/fft4WCYolIr8fPAyh156jpaWlnuelWWZRCKBpNeybf8uRFHk1FvHcHgqiM0v4lBkJkpX
      UWQRc1liqdFH15Ye/vXXfod8Ps/g+V5kVSXqX+TTv/SZh5bTRVGkbWcnE5fGafLU3+Pok0SR
      mrrax7bMKEoR0eigtauRxNQ1vv3GcXS125EDV1lYybP38A56L1+juvMQ7eZlTvWOsmn/Zziy
      o4FAaI7od/8z70hWWrccIJPLkElG+MG3fshMTOSpLhtnRmPkiyJffKmbP/yP3+Ti4Dhfa5cY
      n8hw3t3G3lYbJr3ASqKE03ZrjuJl+PRXfp8vvLSPPz7+HTA48dQraGfDLKdBVcq8e2WBSpvK
      kD9FGSMVLiMz834K1la21Rr4KNS7u5su7ycSvRdkgVur/v0efBgmWIxHadu2eV3ivwmHw8GR
      T31srcpENp+jzeMhHlqm3lxJsySiKCqSKDI6O09fqcj2XTsxmUzsfuFpYrEYxeERLl24wLPP
      P//QxNrS3srQ1cFV3fSuR7WydvXUkicAo9VFjc/NVP+bLMRi9Pb+hC3CHFu+/O84/dp3+Mzv
      /nv+4g/+LW/mMrRs2cVMIAA7GrDKMl5fJRMzIYKLYSwKpCOzXBmYY3b0EpbyIeTa5/Af/zO+
      vdBLUSvT6NPRUCUweS3DUiyPCiiqwN1TU9R62dq9WoN/68EjyOEQNvE6hooWvNVO9C6JrFhN
      SSNj9NlI+Lup3XUAi7GT5OgZImUfdb6PkrlzFY9a8Ey+SQCKojywkfUUjfXuWVJy7D/wYKK8
      KQ7d/PulT30SVVWZn5qhUCqilQ3c9HG0V9bSG5hhbGQUZ4VrLWfAdfAA42PjjxRKoNPp6N6x
      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
    </thumbnail>
    <thumbnail height='192' name='Boolean Data Type in Filters' width='192'>
      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
      QPP/zLhz6AXDpVcAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Bottom 10 + gdp not null' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Bottom 10 +GDP Not Null +2018' width='192'>
      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
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Bottom 10 by overall ' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Challenge 26' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Challenge 27' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Conditional Filter' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Dimension Filter -Remove nulls' width='192'>
      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
      TkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Dimension Filter- Date' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Dimension Filters' width='192'>
      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
      sguV/wMXGHtCIdG3dQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Example of Creating A Maps' width='192'>
      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
      Gzny3pk5rFIhBFKFaCRMYjJBLBpD13X27tsLwD133XPZL0cIwd133Q1A6+goJ37ZzfjABCu2
      tl12/683pgtXjYyMznnOyspKdFTsjI1afl4mypPFwsUXtJXSC/zkzae4/fQNdHd3U1tdw0jH
      MIVIgYrKCprLllDXUsuShkbef+t9hnuHqY3WXtRE/jRxrftxxWHQ85VghvorlSuqGNDV1cWq
      VatITCUQvkTOF5BTFXL5PCtWrEAIgW3bfNi1j5ARZLu9/apKqVdVVfGXf/wXnOk5Q+slKBWf
      BfL5PFVVVXzlscfmJOd0XSccjuCGrHNUZwmyP49vStQLCXACHOEWT9L8k2IW/ZZbbmF0dJTx
      yQks6WCYBp3HO8mOZAjrYTzf+0xi/fPhWivhVT3VHPtLFCtCX05BWE3TWLNmDYVCgQ879+AF
      FipWCvv372d0dBQpJb29vSQKSXqTg+z+6KOrHph4PM6G9Ruu+kyCa4XzfbKnn36a/v7+OWbR
      NFpbW8AtzvVSSpSUR4UZR1r+7ByAlMiCR2BKsG7tOiKRCKZp0j/Qz8cH97DzxLu82fcRv9n7
      Iq+//xYxNUbUjH5uhP964JomwgoBn//7n/8zt7bdwFceeuSyzJJEIkGmkENchEiYjbr8429/
      wV0bbuW5918uRj58yesfvsn69euIl1z77OpnAcdxOHT4EAAHTxxhYmqCtraFD5HYfMMWOpIn
      caQkkFf43oNPEo+V8P/87L/O/mHeo1Wr55v/2zcIBAJIKcnlcrzzwbtIIZChYlFi4UNDuPpf
      tOBP49o+oQKyVONQ77HLPhiivr6eH3z525T68yephK4gykyG5CS/eO9Z8iXnKLupQoZXdu7E
      tu2rfYLPHJlMhmOdx/jo4495+Y1X2X/6EBvWrSeZTC54zcq2FTy5/THWRVr40we/zYq2dhRF
      oS5UWXRqp3F2r7Wu6xw6VFQwz/NorGvka48+Tiyh4Q7n8HUYyoxd8nihfwm4LiqetDP09vXS
      daKLZCp5SfOkr6+PXC5HvKSE9tJlc35/vqkldAURP4+bogpEXZB9h/eTy+Wu/cN8yggGgxzv
      PM7I0DAj1iRoCq8cfZv//sw/kc6k571GURQ2rNvAdx//FjWV1Tz38gu88dabLK1t5HwveNp3
      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
      RK5CYII=
    </thumbnail>
    <thumbnail height='192' name='GDP Not Null' width='192'>
      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
      KAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='GDP Not Null + 2018' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Measure Filter Example 1' width='192'>
      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
      mN9JnG0AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Measure Filter Example 2' width='192'>
      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
      HC98gXMAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Measure Filter Example 3' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Measure Filter Example 4' width='109'>
      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
      TkSuQmCC
    </thumbnail>
    <thumbnail height='159' name='Measure Filter at Aggregated Level' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAACfCAYAAACvBNYlAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAcU0lEQVR4nO2dfVxUdd733+e+ZnZ5EI0tBSN1LAS2FRQDDQLxIVKncJYeXB8jH4JcKWFT
      upP23nVvpQfbG9rwSi3tMi2irpUcuyBFRZBEyMDELVEsUAuQS0lxB14703XuP2aAYZgZ8IEE
      z+/9evF66ZzD75w5cz7n/M7we/++kizLMgKBQvlfN3sHBIKbiQiAQNGIAAgUjQiAQNGIAAgU
      jQiAQNGIAAgUjQiAQNGIAAgUjQiAQNGIAAgUjQiAQNGIAAgUjQiAQNGIAAgUjQiAQNGIAAgU
      jQiAQNGIAAgUjQiAQNGIAAgUjQiAQNGIAAgUjQiAQNGIAAgUjQiAQNGIAAgUjQiAoE9jMBh6
      tX0RAIGiEQEQKBrVzd4BgaA7dKs+7LW2xR1AoGhEAASKpp8EoJqMcAlJsvlJyLvZO2YX0xk9
      SZHeuEsSkudo5m45gcnRuo0lZMwNxttdQpI8GR2zgWM/6952pTojHElKwP7RbSZ7dttn8DBb
      Gn7mnbvB9JMAWAhL55QsI7f9bJxxs/fIDg28t1THGz+t4EujkW9SB5K1OIENNXZWbcpjWWg4
      qd/P47MGI7LxLDsWjbiurZtP3nAyqq+rGceYitm/C7Rr1qDlAKXljqJtu08SffF61b8C0J8Y
      MBAPlYqA3wQCTVxu7rpK5VsvsKk2mvQPVjB2gApUA/CLnUHQz76zV8HhAvQGf8ZrtYz3N6Av
      ONztr/gmHUKWZfri9eoWCICle9R+eckjQZIIt1wC8xIkJCkB/YlMoj0tVyFTI3tTpzLc09zt
      GD41lb2NJqv1p5GQFIm3u4S7t5a0siZz06ZG9qZGdnRX5mbQtqgDL558cSUj8pOJ33SUnI/1
      3PbgMmYF2q5XQ+HuSvB/gFAfO2+r9Tib5o7GU5KQ3L2JTNJzxtTx/qRpCaTGmJe7+yWS12S+
      0o5KLgFKSB4ltd8J7B6DYxuIGT/c3L7kjndkKoVd3ktXKvbpqSec4MBAgsOhXr+PCsuypsJU
      pg73NHePPIczdcUeGswH1equ1MCeFVMZ5e1uWc95F7G36V8BKElmlNUzQHiP7/OV/DXhBfb+
      aP5fdaaO6AwTzx1sQW45yHOmDKJ1mXS0NoDQF/Kpv/QNa/0LSV3yFpVtv7drEvoLMnJLLjHl
      ycx6vdRmW02UF1XQ6uXBoYRgnv/lO5zMS8C3yz6ZMBmBXw3Co8uyZvKWR5P8Py9y0ihjrHmF
      IW/MYXmWVYd7QCjPZB2lsTKNe0+tZ+ueZnyTDnEqPQwII/2UjCwfIql9w52PAXdE8ufsY9TJ
      Msbz29FWpzH75eJujmM1hburYOI4glQqgsZNhKrdFFabl219MY39k7bQIssYz+4lJdTNThtu
      jFjwJiXVl5DlFipTBpK1+Hneu0nPEv0rADbPAIeSup5W9vmGX0zL44cWmY0zavgspwQmxbFg
      tAu4jGZB3CQoyeGzmrb178BnqAuoAngkdgxU7qawxvJ7lWuY4CohuYbzShXUFpTQKYalrzMr
      9Thzs2vYtXIE3+UVUtWUzWx3DQn6RqsrnQqVGrh4ia69o8P81/Z6DNnzGaKWUA9ZyA4MfFJc
      3rHKHT4MG6BC5eKKGjhT190ZZH0MwKSuY8eSUDTuEuohj/JuPdRfstNPs6ahiPwScAv0RwNo
      /ANxo4T8ogbAi9+MGwHbFhESs5hXsxoYpYvAq0sjaoyla9DeOxhJciVwVQmOuog/B/0rANfM
      LP6waiJDXa719wfg5mr5p+2D+KGkTlf3c0fLqGUkw31ciPjj2yxjHfNDX+Dw/Ld4ZeZgq788
      aoiaFghVn/PF9/a36hafi/EqH/pVKrWDJdbHwET+SzrSTk9hU40RWT5Felj3R6H5wB5yAcP6
      h8x34YfWYwBy9xygGQ+iM6tprtKzdqY3B9dN556AFIpt+zbVG4hP2InrcwdpkWXk3PjuN9yL
      3DoB+O+LNNFK3ZdfUeN0RQ3TY8PgwFa2HW+F1uNs23oAwmKZrmlbp4XWVvNXlFs/KoFoHdO8
      LCdsSQbrcupoBUxXzlJU1rkbdlf4ZAL5ipxPT2DyiGThU2Opra0FjJhsTobApa8SPyKf5Lmv
      c/SKCUxXOJmTxzHuZ3KsG4btr5Bx9AomoPXHrymp6L6fYL4qf8fpmlbA1GWbbe/v8iUD+AUx
      xhMaS94n56vuWjZRvH8XuMWTa2wLpZHceDfYtZ9iUw357+7jzJBQdE+vZtuq6VBbytFzNs00
      X+IiAwka64tL67e8//7ubt9Tb9K/AmDzDGB+8PXlkbgZeH02n7u8o3n1jJud225nfBN3kp+k
      4m+RrkiukfxNlUT+zkSrK/kulvt5oh7yIG//23J2vrMIHyAw5VN2Lr+HvEV34ipJDPKdybpy
      m9GKgSl8tFnHhdW/Ri0NJe5kHKWnS0m6uILV+TY74jmD9V8cYq3P+0z3UiOph/HollrAg8fe
      LCBdd5nXH/BALUkMDXqWvzf24BhNTuTNObezPdoVyX0Gm21PQAA80Cb+ifFfJKIZPJbllUFM
      H9NNu6bPydcbIGYKEe23MRURU2LAoCf/818g/+M1dAG3I0lqhiRXMSd9HfM0Nu0EzyP1cQ+2
      RN+Od/RmvB6c0oM31XtIsizLN3UP+hh5CRLaTfHkyhvpg9/aKQ6DwcCcNfpea79/3QEEghuM
      GA1qw4yNMvLGm70Xgp8L0QUS9GkMBgNubvb+nnBjEF0ggaIRARAoGhEAgaIRARAoGvEtkKDP
      I5xggaCXEAEQKJprDICVo+ueSMcQFxN5CRbRoYdaXpusYc+W66z3dRZdekReQlePuDd1QUyc
      0ScRaZE9PEfPZcsJe6PROo7f0D8Utg+Rdu7iXguW7YRn0JO33Jw9u/04PWwr+zZXsE5r8Zz7
      ott4jVzfHWDBQhZSylcn2l6opKxwDAsXhlitZDGYevgh9AbxuVZDijtJIleL5b04OgEa3mOp
      7g1+WvElRuM3pA7MYnHCBsejU6OjCdz4Njtv0Fh4ZxeT7rGM9tSuYY0WDpSWd7K0Kt+MIyXv
      AdafN2JcH+1oB65SVLr5XF8AXKcxLeYIBYcsV4uGCsouRRARZD0mfQYb7Yybv5UZMNADlSoA
      sw582Y7wYmHkYhJi/4ucPTfJBunEYQr0BvzHa9GO98egL8Da9j1XWwlhkUQMVqFSOfjuZMbG
      qxSVbj7X+QwwkDEhIRwoN0/kYSotJndGBOGd1rFxdk1n0Ft8W8lzNCs7DQdvoixjLqM9zR7s
      b//9O8ebdujM9pRjbIgZb/GCJdy9I0ltk2KbCkmd2ubLejJ86gr2NOSRIGnZBLBJa39aFq8n
      eXHlCPKT49l0NIeP9bfx4LJZdNGB2xmIbt4scjZm0dWJMdG4t8Ox9Rw+ldS9FqOsOoNwSSI8
      o4y8RD/cwzPYnCChNe8cWsnmTnDxMJuebjvm0WTa65ZV7ENfD+HBgQSaZV/2WWTfvLa224aj
      J+R1dE/L8kj0czdf9S371X5YmsrIsPqMgteUcss5wQH3T2Zg6VecACorDqGNmOD0u9XK1x5B
      98ZPLC9tQW46wv+d2LGs+e/PMjm5gPFbzmP85zk+XHiXg1Z64MxasUlr/QzQdmLcQeSfszlW
      JyMbz7NdW03a7JcpBqq3vkja/klsaZGRjWfZmxKKGzPYKOcSDxCfa9/QaiqnqKIVL49DJAQ/
      zy/fOUlegvOroSp6LgmVmWyttFlQnYkuOgPTcwdpkVs4+JyJjGgdmVa9i4s5K1m6/hQGIGqj
      jFmuiidXlpE7DeceyfR1+dRf2MGCH/eSmW27Magu3E0VExkXpEIVNI6JVLHbLPsyo63tNhuu
      /X1fJGflUtafsjeD8/dsmT+Z5JpYcs8bkS9Vkz13GLeeEzzmPqKOFHCooYbP98P4YGc6imUm
      BO0SFo12AVxwce1YerggB4P3AhbFDkaFChdXR3pfD5xZKzo/A1hODJOauh1LCNW4I6mH8KhZ
      iqUZ8PrNOEawjUUhMSx+NYuGUToiurNsgNLXZ5F6fC7ZNbtYOeI78gqraMqejbsmAX2jg2uc
      KooFz/yL93ZUdHq55rMcSphE3ILRuODC6AVxTKKEnA5xmbN1d7O2qhljd93LX3kx/DYXcHHB
      Faj6od5mhQaKzLIv/hpA40+gG5TkF+H8vDxL3d1rqWo2du321OSwNdeAdkkiYYMtU77cfSe3
      nhPsMYGIiQcoLz9G+ZEHCQ92trJlJgQPd+yN7zMZDTDIHfcebvpanNn2beW/hC7tNFM21WCU
      ZctsCpa3FJ1JdXMV+rUz8T64jun3BJBSbAJUqB0OTDzH0bJaGDkcH5cI/vj2Mlg3n9AXDjP/
      rVeYOdjxfTH40Sf5xYZt7L/KfsCY36cyz29A+x1X5XjnnNN8gD1m2ZeHJAlJeoj1ZtmXA05P
      zDH8PnUefgOu4u+pt54TrGHshIGUpmeSFxPJ/U7X9SUkwht25ZiviK11fP/fHUvHTdBC1d/Z
      UdYKpiv80HDRQTvX7sy20XL5Egb8CDJLsbxvJcXW5L/LvjNDCNU9zeptq5hOLaVHzwGjCAgB
      vvuWWhOYOgm3dxE+ORC+yuHTEyY8Ihfy1NhazDqwyXkfNzCOxMCNZL7X8X4102MJ4wBbtx2n
      lVaOb9vKAcKI7RCXuzDKvHN8a965HverTcX72YUb8bnG9ouJMTceN3axv4vV3kM0scRp3ch9
      J5OSRovv/O0Pt6YTfH/EDI7k5zPy/vvszHHTmYgXP2TVuAPEDxmEd/SrfHGlY5nXk39l85z/
      IXOCK55j4/nI4TPw1TmznZ8BzH8H8NAm8qfxX5CoGczY5ZUEWUmxrvI/eE0XwO2ShHpIMlVz
      0lk3TwNomPeXVUQcS0Gjlhi84mCn7QSmfMRm3QVW/1qNNDSOk3GlnC5N4uKK1djqwJ3xQTd7
      EpWVVR0v+SayMz8J1d8icZVcifybiqT8nSQ66eto5v2FVRHHSNGokQav4KDjVa0w8Xm+HgMx
      TOmQfVFFTCEGA/r8z6/xAdWHRdsLSNd8SqxGjTTIl999cFY4wQLB1SCcYIGgFxEBECga0QUS
      9GmEEywQ9CIiAAJFIwIgUDRCiRT0eYQSKRD0EiIAAkVznQHoxpD6OahYTYBlmMPQlO5K/PRB
      bMbMR6YW4rBUV+u35CS11TZzxztyBXuuexixs8/w6pTK/shNuAPYOeAWkeJaglRduJsq75Ws
      WelNffGRn+WDMquHN8YtLn5ZR3LBeLZelLmYpaU6Tcsf7Q0cMp0gY1ogj37iyxtftyDLF6hY
      O9HuqNpu6YfqYm/RN7pAvkkcuqa6v5Zx7FH3sfC+KCjJp+hnECtmbLxet9iW2xjkAZ73BjES
      Az9ebumyRvPONaQWDSR563pih5pdiqETZ/bIU+hCP1QXe4teCoAj3dCRVmivtOk0ElJjLHqk
      H4l5djoGlnHsISFjuHNMCCHksqd9AHubjD+Ppy1V2z0npLJp09OWWRs8ic60qHgOy592dAHK
      8hLxczdf9W1nb2gqy2DuaE/Lew3GbP7tYcXUUZY2Hc8QEbF8LdrL6cSt2svRjz/iq1HLiXvI
      tct6hwtyMBDFhHF2vrhzsq0eqYsANZ+QNMETSXLH74ktdNrVi4fJeMKv/RgWtleN3Uuq5dhK
      nqOZm1Fm6b450U0td59pCanEjLZsLzHPcbevl+mlADjSDXugFbYzgNBnsjjaWEnavadYv3VP
      F7m8bRz7hDEBEDCGCW6wa39x5+G7vg+zLr+eSzsX8mNZGsUD1pFff4EdC35kb2Z2z8qfXsxh
      5dL12Df/tjB/cjI1sbmcN8pcqs7GbP6NYMGbJVRfkpFbKkkZmMXi59+zMaxMnCk+yCkPL1rX
      RxO893EqjmUQbWdMucloAAYx0N5482635UxdbDvcobxQ2ERL5Uvc8Z+LWWTtXjKSWe9+zaXz
      O4g9k4b2f+dhoppMXTS7Jum5IMu05MZQnjwL82FzrJt2bO4Zso42Upl2L6fWb+VmzQvQOwFw
      ohv2nDvwGTYAlcoFV3Md0C563uECPQZCCBgFbbKK7WwGuHpymwuo1GrLf2/DpU3FrPqBenpQ
      /vRsHXevraLZ2LXbU5OzlVyDliWJYZjNPz/M5p+R0jVa7h0sIbkGYjb/bGaIaMhi+aL/QPOX
      L/nyTS1uh/dR3FDB6iB3ol4/TqvVqmbb65J9dbDbbTlRF9sPtw9DXcBl9BPMCoOSb051LPuV
      F3cOUKEaHMsTM8FQWUVNzWeYD9sEXCUJ1/BXqKKWgpLqHn3+d/gMY4CqTXs9Q7dVXnuJXgmA
      M93QuVZ4NVSwT18PFPHsSAlJGsmzRXSazeCqcFb+dMzvSZ3nx9WZf/Ek7HQ1F+OW24R1G77+
      kgMGGDnMB59Fb/BqyAFSo2LJ8FzLxqTRWFd1vX9yLG4UUlretRvV/bauRl20aKsOlhltloWl
      n7Lyrc3PFc4//75FrwTAmW7oXCu8CqoL2V1l8wGcSifMajaDntGz8qcOfzs2Dq1bLu9klmA2
      /05iNv8uwsAgxvq60Prt+9g1/0IiedgNdn+SRxMaHntGh6m2ln/ZKW/qoXuJtRMvkx63jJy6
      VqCVuiI9xQ093FZ3GI2YMNGoTyfziBu/jRhntcysV7Yez+Cv2TBichi+mijMh22dZX9MXDlb
      RFl1d59/3+LGBKDtgdbyIOtMN+xOK+wp3+/PpQR/pkVZ3dJ9o5jmDyW5++3Ms+OYHpU/dYTP
      IrYXpKP5NBaNWmKQ7+8wm3+pPO6xhejbvYne7IVd88/jMd7MXcWwnY/zK2kQwf8+hM2nT5MV
      /DHJG2wCqAogaXclO35bzfJ7XZGk2wlOLcJAD7flDLeJxP3bOu5yVzNkzk6Grcply4K2r5dG
      8Nux5TzuKeEauJYLus18tnoCEEjKpztZfk8ei+50RZIG4TtzHeUG57ppX0P4AII+jVAiBYJe
      RARAoGhEF0jQpxFKpEDQi4gACBSNCIBA0YgACBSNcIIFfR7hBAsEvYQIgEDRKDAAFlHG5qe3
      9UCnJUhvIKYzepKsJRUH9bfMokzb+3fHe9RUkvRnblytrn5SVlWBAbDQJuRYDeO9VrovT+q8
      BKldrsmTbuC9pTre+GkFXxqNfJM6kKzFCWyocbR+GOmnZGRjDZumnOYN3SO81rV8WI+w9aS7
      lFXtox6ycgPws+K8BKldrtmTBgYMxEOlIsBcp7X7+luqwcxMTiSESj7dd20nqK0n3aWsah/1
      kEUAbDi2IYbxltKknacpaaIwdWq75+o5fCor9jR0lBC1V560DSclSDGdYMvcYIvP6453cAwb
      joGtJ82xDcSMbyvd6o53ZIeb24EXT764khH5ycRvOkrOx3pue3AZsxzXae2g5Z80A2qVqhuf
      2aqUreSOd/AaSunsSdsrq9p2B+iolmvdVRtOnIMKn72NcgNg5TBYfzB3RP6Z7GN1yLKR89u1
      VKfN5mVz7VReTNvPpC0tyLKRs3tTCHWzKiFqtzypGWclSMlPZ3GWiuWlRvNUJ+/MZoS9/b0j
      kj9nH6NOljGe3462Oo3ZL9vOg9REeVEFrV4eHEoI5vlfvsPJvITuC5SbGtFveJcqt4k8MV3j
      1DH+fst8JifXEJt7HqN8iersuQyzac5xWdW27RWzaqKObJ9XqGyRketKSX2g98b7OEO5AbB5
      BjB/RibUdTtYEqrBXVIz5NF3qaeeS+baqYwbAdsWhRCz+FWyGkah69GcJN2UIB0VyES3I6x5
      cDJzVm2gVPUQ0UFdWzGp69ixJBSNu4R6yKOYNVubvk3p68xKPc7c7Bp2rRzBd3mFVDVlM9td
      Q4K+0c5zRwnJoyQktYb4snDSCz4x1yBz6BjXkLM1F4N2CYlh5lK2A/zu5s6rOvBAwYesr/Vm
      QeJT3O0CuAzFb3h31eV6B+UGwB6mfF7SpXF6yiZqjG2KpQWPaDKrm6nSr2Wm90HWTb+HgBTz
      DBROy5N2V4LUN5HCCz9Q9N5SJjRmsXCsBt0WW5/NRP5LOtJOT2FTjRFZPoU9zfbc0TJqGclw
      Hxci/vg2y1jH/NAXODz/LV6ZOdjOXz0tD8HyP6mv+ICk8Z5AD33mWwQRAGtaLnPJAH5BY/Ck
      kZL3c2i3WWvyeXffGYaE6nh69TZWTYfa0qOcw3l50m5LkJb+nbf/YcJ/ylyS3szgGX8DB8q/
      tt0xLpt3DLNm+z72NNu7wicTyFfkfHoCk0ckC58aS625TmsXx9gZjh1jDbFxWtxy3yGzpBET
      Jq6c/JYfet60mcmzWTainm2Z/8G3rUBrHSfP3Jx5UZQbAJtngHBz7VQS/zSeLxI1DB67nMqg
      6bTbrK4y/3hNR8DtEpJ6CMlVc0hfNw8NzsqT9qAEqWsj+qUPMEwtIbk+yLuDl5OVMtlmZz3Q
      Jv6J8V8kohk8luWVQdjVbANT+Gizjgurf41aGkrcyThKT5eSdHEFq53Xae2EM8fYZ9F2CtI1
      fBqrQS0Nwvd3H3C25023HQDSinbyu8b/w32uEtLQCaz9vIcO9g1GCDGCPo1wggWCXkQEQKBo
      RBdI0KcRTrBA0IsIIUbQ5zEYeu8bIhEAQZ9HdIEEgl5CBECgaEQABIpGBECgaMTfAQSKRtwB
      BIpGBECgaEQABIpGBECgaEQABIpGBEDQPzCdQZ8UaZ6qxXM4U9unq7k+RAAE/QATxasmosse
      xVs1RloOLqUlTcv8LpMHXD0iAIK+jymfbetr8V6wiNjBKlxGL2KJ1kDuOx9zvRMtigAI+j41
      VVQawG/4XZYXvBh6F1DyDaeus2kRAEG/IeAejc0rV/jndaoCIgCCfsOJ0zU2rwzA/TpVAREA
      Qd/HMp3kyTPnLC/UcPoEEPZrRl1n0yIAgr6PKpoFy0ZQv20LOY0mWo9n8UGRG9olT3Q/8W93
      Td+QHRQIehUVEWlF7PzXPOI1ahp+MYyYtQVsXeRz3S2L4dACRSO6QAJFIwIgUDQiAAJFIwIg
      UDQiAAJFIwIgUDQiAAJFIwIgUDQiAAJFIwIgUDQiAAJFIwIgUDQiAAJFIwIgUDQiAIL+Q8Vq
      AiQJSZIYmlJ8Q5oUARD0G6oLd1PlvZI1K72pLz5y3VOigAiAoN/QQFF+CUTdx8L7oqAkn6KG
      629VBEDQP2g+wJ5cCAkZw51jQgghlz0HmgGozghHksLJsNwSTHkJuEtD+UOhqfOUiu7eRD79
      FFHuCeRZmhUBEPQLTMX72YUbE8YEQMAYJrjBrv3FmADfR2YRRgn5llvC4QI9Bu8FPBqlojpz
      Nro3fmL5580Y/3mOlT9tpchqLiERAEG/4HCBHgMhBIwCGEVACBj0BRwG8H2EWWFwoLQcExXs
      09fjvWAmEdTwWU4JaJewaOwAVKhQqzu3KwIg6AeYT2oo4tmREpI0kmeLgHo9+yoAfJn6SKA5
      EA0VlFV5s2BmBGDCZAQ83HE0f5YIgKDvU13I7ioISz+FLMvmn1PphFHF7kJzxz8wZjaB9QXs
      ztxDrvccHr4fwJeQCG/YtY0Pz5jAdIXmFqt28xJEAAR9n+/351KCP9OirKbB8o1imj+U5O7n
      e4DAGTzmf4Q1a7LxnqPjAcuMVxEv7mRt1BGSRqjxHBtPVjXgfyfelmbEvECCW5rmqq846+XP
      vbe5YLpylHUPBbPm7v+kfvtjeCC6QIJbHEP5/+OxoKFIkoTaYzLv376G3DfNJz+IO4BA4Yg7
      gEDRiAAIFI0IgEDRiAAIFM3/ByrBrhxARYrrAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Measure to Context' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO2dd3hUdfaH32mZZJJJ7wGSQBoloVdBikjvCgKWtWHFsrq6oquLK+pvlcWy
      KyrNFRCl96oJJRBIqEkISUhCKoH0OpOp9/7+YI0VEnAGEnLf58nzzGTmzjl35n7ut55zZKIo
      ikhItFHkt9oBCYlbiSQAiTaNJACJNo0kAIk2jSQAiTaNJACJJqkuOsuif/4fn/x3M0aztcn3
      CyYdp0+lYBSu8gZzLYtensPXsedI3r2EbckltnX4OlDeMssSrQPRwvpliwke+1cm9QpEbChl
      9dfb6dBnJGEOpVRrozDmn8CjXTBnTqdQUW2kb2d3nn3pA+bMe58wVTloXamvaiA6IpDzNY6M
      6O5NlcFARVICgb55XNLoOB67hRM5NUyafi+pP2yg1CDi7+9PUZmF2TPuJmnvFoqEAO4dNwQH
      hcxmpycJQOLaiAKVVfVEeXmgUqlY/vbr+Ex9gx1LFxEdrMHcew41u9cQOXwMu09XM1x1iiTf
      h+jSOZpxd/Vj4Z+GUtftHsZ2ENifsAblxHcBkKs8iPQwk3ypDm1HC6UlpWQd284iqzc1e7Yy
      88m72X66Hp8Lq9nqVM/XK3fjIVTg36UHIzq52uz0pC6QxLWRqxg2fCBxu7YTn5SMm6cXhVnp
      WB20aF01FGSlU16nB8BB7YhKKceqcEDrYCYn7zJylRfPvvhnxk2byillEHf3CGj86EGjBhK/
      9wjmunJ2HUphwMBeYLUglytwcFChVKpQKkzg4Eq7DuE8/8bfifHX2PT0ZNJKsERTiFYz2ekp
      VFhd6BXhT/Lps3h0iKS9q8CZ9ELcXDX4+HpRWS/gLqvD4toOofwCZWZntGI9/hHd0BWl8O0Z
      A89N7odcNJN3IZ+AkFByUpJwD41BX3wek0KN2tUXa2UpvkEeVNSrUBku4RoURfmFVC7XifTo
      3QMXB4XNzk0SgMRNQV9bAQ5aNI4Ot9qVX9BiBCAIAjKZDJnMdgMcCYmmaDFjAEEQaCFalGhD
      tBgBSEjcCiQBSLRpJAFItGkkAUi0aSQBSLRpJAFItGla7V4gURRpaGjAarXi5OSEUtlqT0Xi
      FmKTFsBq0pOTmU5xeS2iYKU4L5v84nIEESou5ZGVW4RFMJOfmUFJdQNmQz3nz2WiM1luyJ4o
      imzdupX777+fiRMnMm/ePMrLy21xKhJtDBvcNkXiN3zOoQo3ytJzeOKRAXy9Ixtl7UVmPj6D
      pZ9vI8zbQsfx97Bx3iuETXiV2QNkPPLI2yzYvZvhIV7XbdFisZCcnMxnn32Gr68vq1ev5vz5
      83h7e//x05FoU9ik36DVailPLcSi1nD+RAJdRjyJNmkhWzduRN11HHeHpvPNsTQcA3sjN56l
      uMSbiKhgAKxWK6IoIggCgnC1CIrf0r9/f15//XVqa2uJiYlhwoQJmEwmW5yORBvCBgKwkpKa
      yeCxD3L4iw+pCQ9FV6/DwSji7u7G5do6TAYTao07oCJYMHA0z4EOfo4AyOU/9cLkcnmz9wIN
      GTKEuro6ioqKGDduHJ6entI+IonrxgZjAAW9+vUhJXYr6oj+TJwym6qja8mQdeb+Pz1BmP4Y
      W07pmD5uIAGBvnSP8abWyYfQwECcVYrfbID78fm1/gRBYOHChRQWFuLs7Mxnn31GWlpas46V
      /qS/X/y1lN2gFosFuVz+ixbhalitVj744AOCgoLw8vIiISGBWbNm0a1bt5vgqcTtRKtcB1Ao
      FDz++OOkpKTwySefMGzYMDp37nyr3ZJohbRKAQiCwLJly1AoFAwaNIh169aRnZ19q92SaIW0
      ytWjH2MHxowZg7e3N/v27UOn091qtyRaIa1SAEqlkgcffJD169dTXFxMeHg4YWFht9otiVZI
      qxwE/xxBEPjuu+/Iyclh7ty5eHh42MlDiduRVjkGEEWR+Ph4JkyYQN++fcnKyuLpp5/G1dV2
      +WIk2gatUgAWi4W4uDiWL19OUlISHTt2JDMzE4XCdukyJNoGrXYMEBUVxfz587Farbi5uTF6
      9Ohb7ZZEK6TVjgEsFguxsbEUFBQwfvx4AgMD7eyhxO1IqxSAIAh8+OGHlJWV4ejoSElJCa++
      +irh4eE3wVOJ24lW2QUSBAGr1cqUKVPw9vZm9+7d1NbW3mq3JFohrXIQrFQqmTVrFl9//TVP
      Pvkk/v7+xMTE3Gq3JFohrVIAgiCwd+9eZDIZ4eHhxMfHU1xcfKvdkmiF2CQiTLAKWAUBkKFU
      KhAEK3ClPy8KVgQRFAo5gtUKcgVymYjVKiBXKJDLrn8PvyAIlJSUMG/ePPz8/Pjmm2+4dOkS
      wcHBf/x0JNoUNmgBRNKO7GTxJ+/QZ9BMcjLj+fNLr/H8n+eRezGTv8x9nnl/eYmDmak8eGd/
      FnwRR/7JvQyM6MPB/MobsqhUKpk+fToLFy7kgQceoK6ujujo6D9+KhJtDpvNAmX+sIwlad6M
      ckokr9MjeJz4hBzRnUtOQ5kTnsXafBdKj54kuEs7hkX78vkX23js30sZ2sGjMSRSdgOtgSiK
      fP755xgMBp544glcXFxscToSbQTbzAIJDazffITJf16IIS4RRH5xQYuiwBWVOeIrGjmdJxLs
      7/y7H9VcEQiCQHZ2NnV1dTz66KPodDocHBxuSEQSbRebCKDywkkuyEP5c7AnhuET2PnvL7DI
      PXjl1Yf5z4JFrLygZvLcR1l97Bzd2ltZcdGZKAcZMn6KCRZF8brWAZYsWcK5c+coLi7GxcWF
      Dz/8EI3GtuVzJG5/WuVCmNls5qOPPmLAgAGcP3+eiIgIZDIZQ4YMuQmeStxOtMppUJVKxZAh
      Q9i0aRMjR47E2dmZrl273mq3JFohrVIAgiBw4sQJqqur+fjjj1m2bBl1dXW32i2JVkirFIDF
      ciWl4ptvvomPjw8PPPAABQUFt9gridZIqxwDiKJIUlIS0dHRmEwm9u/fT/fu3enYsaPN/RJF
      kcLCQg4dOoSrqyvDhg2TAm9uI1rtZriysjIA5s2bh8FgoFevXnaxVV1dzUcffYRKpUKtVhMb
      G8uiRYuk4JvbhFbZBRJFkTNnznD27FkiIiIYNmwYly9ftosti8WCUqlEJpPx8MMPExwcjNls
      tostiZtPq+0CpaWlsWLFCi5fvsygQYN47LHHcHJysrlfgiBw+vRp9Ho9gwYNoqKiAh8fH2nB
      7TahVQrgR0RRRBTFxjyP9sBoNLJo0SI0Gg3Z2dlEREQwd+5cSQC3CS12DPBd7FmKymwX5HLf
      iK6093W77uPKy8txcXFBr9czduxY0tPTMRgMdmltJG4+LVYAydmXOZdvu6ovY/qF0d73+o9z
      dXWlU6dO9OnTBycnJ7KysqRyTLcR0i/ZBE5OTuTm5pKdnc2FCxcICwtDpVLdarckbESrnAW6
      mZSWliIIAkqlknHjxlFTU0NDQ8OtdkvCRkgtQBO4u7tTWFhIXV0dZ8+exdvbG7VafavdkrAR
      NhGAYDGQnHSUcjy5q39nUpMSaHBuR9/oMArOHiOvTs2g/p05E3cAt84DCHEzcTg+mR7DhuKt
      cbCFC3ZDo9Hw/vvvA1BVVcUHH3xATk4OYWFh0kzQbYBNukAnty9n88kS/Dy15MSv5buEQn5Y
      +SlHk/bx7rL9XEzcyLr4RL745GM2fBdLXkoS774+n9TSlr+BTRTFxr1HycnJjB07loKCgusq
      6CfRcrFBC2DicPxR6rXdSErxxLsshch+z6JNTGDPjt14dJ1Kz+A0ViafR+XZDZk1g6JLPoRH
      tAeulDv6sUKk1WptvKsKNl6esFjMN1RFsqSkhNjYWIKCgtizZw8NDQ18+OGHWK1WrFarTX2U
      uPnYQAAK/AIDCRo0jdQv/oahfzSG0jKsdSKhHYM5VlBMnXs9bl6hVCEnXGYkvkBDO68rMykK
      hQKFQvGbhbAbyRZxLZRKFQ4O19/d0mq1JCUl4e/vT0hICIWFhTg4OEgzQbcJTXaBkpKSmniH
      gnH3PcTlo9tw6T2BWff9CU1eHDWBQ5l+3yMM9S7iUJELs8cNIrpHZ3oO7IJn+2Cio3vg5dTy
      LyI3NzdefvllOnTogFar5bnnnpMu/tuIJrdCjBs3jl27dtndkV+3APO+/MGmC2HvPj6Cbh2v
      fyXMarWyevVqVq5ciZOTE88995yUifo2olmD4JKSEvbu3WtvX1okJSUlFBUVsWnTJlatWsX+
      /fsxGAx2s2cymaipqcFgMNBCtmnd1jRrDFBaWkpcXBz9+/dHFMU2VYbI3d2d6upq3nrrLQB8
      fHxuaCzRHHJzc1mwYAHZ2dkEBQUxd+5cBg4cKE232pHrmgbdtWsXO3futJcvLRJHR0fGjRvH
      xYsX0ev1zJw587rrmDWXo0ePMnv2bOLi4njjjTdITEy0ix2Jn2hyDFBYWIiPjw+1tbWNK6Bu
      bte/q7IpWuoYoLS0lMWLF+Pn54dWq+X48eMsXLjQLgPhkpISFi5cSHZ2NgEBATz11FNER0dL
      LYAdabIL1L79lfl6R0dHuzvTElGpVFy+fJmLFy/y5ptvUl1dbbdFMG9vb+655x4OHz5MTEwM
      kZGRdrv4a2pqyMvLw83NjaKiIgYOHNgmwzybMQYQMTboKC0tQ1A44u/vh1rZdvbQubu78/bb
      b2M0GvHz8wOgtrYWb29vm1+csbGxxMXFER4eTlJSEnl5ecyZM8fmdqxWK1988QUWi4Vz584R
      GhqKg4MD/fr1s6md1kATArAQv/Ubdh87h8UqIlpFVM4uDJswi5H9ItrEVlKZTNZ44VutVqKi
      ooiPj2fy5Mk2v2PKZDK0Wi3+/v40NDTYNe5AqVRSW1uLUqnE0dGxzXazmviG6xGdO/PaW7Nw
      dboy86GrLiEltQAj0BZioiwWCytXrsRisZCbm0t0dDSzZ8+2i61hw4ah0+nIyMhALpczbdo0
      u1yYCoWCRx99lIKCAjQaDZcvX6ZHjx42t9MaaOIm7k6ndiJlOiuJ25cy+8E5ZNe7MHBI3zZx
      8cOVQXBdXR1ms5khQ4Zw4cIFu60DHDp0iA0bNnD06FHS09PZtm2bXdYCRFHk6NGjLF68GLPZ
      TEBAAGfOnLG5ndbANQVQUXie1Z+v4kDcRhavT2T0kFAWvftvMoturLBFa8TNzY28vDxOnTrF
      1q1b0el0dtsKUV5ezoIFCxg9ejQLFiygvr7eLgKwWCykp6fz/PPPs3DhQjIyMqipqbG5ndbA
      NQXg1T6C6bPuJvVIMvc++yrjB/dk/KxZRLbzvFn+3XIcHR0ZMWIEEydOJCQkhMGDB9tttmTE
      iBFoNBoeeeQRysvLCQwMtEsXSKlUNu5teuqpp1ixYkWbDfJpchzr3i6cZ/76Jt1UhXz8zTF6
      dQm4GX61GMrKyjh79iznz58nKCiIxMREjEajXWz5+Pjg6+uLUqlEFEUSEhI4ceKEze3IZDKC
      g4PZuHEjJSUlhIWFtdns2k0KIHFrHDiZ+PqbPUyc3IfdW23/g7RkNBoNOTk5nDhxgkOHDlFV
      VWW32ZmioiKeeeYZ1q9fT6dOnejXr59dyr9aLBZiY2MJDAxk8+bN3HnnnZw9e9bmdloDTf6S
      HSKcee/5lwkfMZtwdxmZQV6/eY9RV01BUQmCUkOn0EAqigsxq1wJ9PWkpqyIGqOSdkHelOTl
      ofZuh7vaSkFBCf4hwWhULXvxxcnJiZdffhlBEEhISKBXr152mzLcv38/c+bMYf369Y0LcPYY
      b8jlcoKDgxk1ahRRUVFUV1e32VQvivnz58+/1hsqS0uoMYGrwkDWJZFJE+5Eo/zlBXBm2+d8
      tjcHb3ct6uoUPvrmACfiduMf7MnChV9zMf0I1W6efPLc01xoCKK9Mp8HZzxL5OR7CXW/Utbo
      x5piP15csScvUFajt9mJ3tUrFF+P369Ldi0uXrzIPffcQ25uLgkJCVRWVjJs2DC7jANkMhml
      paVMnTqVZcuW4eLiwqBBg2wuOJlMRufOnXFycsLPz4/t27ej0WgIDQ212z6nlkqTsvfwD2HA
      QC0AdZfOsGlXKnOm/bJZLrl0Eb3BCxdPLzKSttDlridwTfoXm9evx6HLGMZ2zOCbo2dxatcX
      uSGV4ss+RESFADSGQ/74Z7eQSKvlhpLaent78/bbb3Pw4EEaGhp46aWXkMlkdkmQGxUVhaen
      J87OzjzzzDMEBATYJfRSFEVKSkrw9fVFJpMxceJETp8+TVlZGd7e3ja11dJpUgAmg65xiqys
      +CLGoF+/Q2TEI3+jb30NbzzxIr1HdcHSYMDRJOLq6sJlnR6L0YRK7Qao6CAYScxX0sHvyt4i
      mUzWeDeVyWSNdyBb3/UUCsUNNfNKpZJJkyYxevRokpOTcXd3t1t3Yf/+/SxfvhyTyYSrqytD
      hw7lgQcesPl3YTabefvttykpKWH27NlMmjSJKVOmtMnV4CZ/SV1lGXl5eQC4BI3giam/Lkgt
      kBq/h/i0fLQxQ5k29W4+++wbLjpG8NIjs/nqw0VsSHLmvmcn8V1mEd27OfLtRW/C/f1wUsp/
      8aX/vAtk659Cxu8n0LUKAqVVumZ9RnB4V6p0ZtBd/e4vk8nw97yxWsVlZWW8++677N27l6lT
      p7Jhw4bGz7QlMpmMPn36MGXKFNauXcvMmTNZsGAB3bt3t6md1kCLzQ59s7ZD19QbeOi9LTaz
      o9U4sPpv027o2NLSUqqrqzGZTCgUCqqqquwSEGO1WklJSSEmJgaFQkFDQwNWq7VNFhlvVlte
      nH6KS4I/vSOsbN9VwcTJbXPfiL2prKzk448/prCwEE9PT+bMmWMXOwqFgp49ezY+Lysro7a2
      lm7dutnFXkumySF/XVkyz9z/KI89OJWR457A6Nd2VoFvNqdOnWLOnDnceeedvP/++yQnJ9tl
      K4TVauWFF16gT58+9O3bl0mTJrXZIoNNtgBan+78d8dGUnLK8HB3xiug7cQD32xGjhzJ/Pnz
      GTlyJCqVit69e9ttN+iECRN47bXXCAgIID09nYqKCpvbaQ00qwukK8tn++Z9+AV602PYPQR6
      a+3tV5vE19eXxYsXA3DixAnWrVuHh4cHnTt3tqkdq9WKxWKhuroaPz8/IiMjb0oGCkEQqK2t
      xd3d3e62mkuzBKBykGMwGGloaMBskXJi3gx69eqFl5eXXUqyCoJAbGwsNTU1mEwmZs+ebbfF
      PYPBwA8//IDFYsFkMlFZWclTTz1lczs3SrME4BHam+ef80NQKvHw9re3T22WtLQ04uPjGxPy
      6nQ6Xn31VbvYCg8P56GHHqKoqIhvv/0WLy8v+vTpY3M7FouFVatWERMTg8lkQqttWb2H5nWB
      SrN465kFPPef5zi4s5onHuhrb7/aJJWVlWRnZ9O5c2dkMpndgu+VSiUzZszA0dGRsLAw+vfv
      j7OzM4Ig2HwrhLOzM/PnzycyMhKLxdLiNt01SwCGugb8A3w4vGMf6pAZ9vapzdK/f39cXV0R
      BAEvLy/0er1dBsEymawxuZkoivj7+3Po0CG8vLzw9b2BQmrX4MdtF/n5+RQUFDBt2o2tkdiL
      ZglA6xdIVJ+uuISEMWFc21stvFmkp6fz6aefIggCCoWCyZMnExkZaRdbZ86cITExkZCQEE6e
      PMnzzz9vl4Wwmpoa9u/fj7OzM+7u7mzfvp1HHnnE5nZulGa1dxZjHadSzhHSKRSjVB/LbqSn
      pzN9+nSWLFnC3LlzycnJsYsdi8XCrl27cHR0ZM2aNURGRnL69Gm72FKr1RQWFpKUlERSUpJd
      kqr9EZrVAtSU5JKTfZEjsXswDZ2Gb+/r31Ys0TQjRozg008/Zc+ePWRkZPDhhx/axY5cLmfU
      qFF07NiRbt26NeY5sgdKpZIePXqg1+sZP348tbW2q/1sC5rVArh4tcPLDRxc3HFuBTn9Wyvb
      tm0jLi6Oqqoq6urqOHnypF3syGQyLly4wPz581m7di1r1qzB2dk+N7UfL/ju3buTnZ1NcnKy
      XezcKM0SgNrVn8effpKwQB80jm0zcuhmMGnSJGbNmoWPjw9Dhw7l/vvvt8sg2Gq1kpuby5Qp
      UzCZTEydOtVu3S1XV1dcXV0ZPnw4x48fb3HB980SgL66mO937GDb2q85mFb6u+85f/x7lq7f
      i9ViIHbTKrbEncQiwpkDW1i5cR86s46ty78kIaMEXUU+Kz5bQWGtNJ74Ob6+vsydO5eXX36Z
      iRMn2i37hEKhYMiQIRw8eJCIiAgOHTpkl9hjuJJb9aGHHkKtVtOvXz8yMjJaVDeoWbdzF68O
      TJ01C5OlkLSC+t+8bqm/yNZtO9iXLqOf43niqyLxSFrOXnMWa/dV8mDXSv67R+DM7u8JKXXG
      dZAL61atInT8ZNq7tpUUW2AwWdAZmi7U5+DsRkTX7lTVXzsBl1qlxMXpxmoVVFVVUV9fj4+P
      DxUVFXZbcxBFkaqqKpydnWloaODRRx+lrKzMLivcN0KzBGBuqCMnKwujTMaQUVG/elXkzP5d
      eEUPwiX7GPkF+YR0n4i2SiQh/hh+kdMIaneOH84VItOEIpfnU1DsTcfQK+lVbnWVSJOtQxtF
      rlqN8ocTF1i6w3YZ2Eb2DuHJib2u+ziLxUJqaioTJkxg06ZNzJ49m9OnTzNs2DCb+fYjlZWV
      bNq0iaioKPLz86mrq+Phhx++oYqd9qB5K8EVVYT2GsmgLgIbtucQ3b73Ty8KZnLyL5Nfdp7s
      zFPUDL6b4vwC3KtEYnp2Y8+pHMqcKvFt142qU1lEqfQcKtYS5H6leb/VVSIdTDa+88m4agUZ
      pcK24ye5XHFD1WqUSiUxMTH06tWLsLAwsrKy8PLyskvlGzc3N1JTU0lLS8NoNHLPPffYrcLO
      sWPHOH78OJ6enpSXl/Pkk082mda/Wb+IoxNs/PJT4hwbaHf3X375otyB++a+CcYy2neM5757
      h7Jl7Vr0ve5l0sQheIrfcK4ujD/dM5gfGkT6RGtoKPMioL2Vdq5ts+bArUYulzNmzBhkMhmu
      rq54e3vb7aJ0dHTkvffe4+zZs3h4eBAV9esehG0wmUzs37+ffv36ceDAAUJDQ8nKyiI6+tch
      vL+kCQGUs2bZQYZNGcG8v75IRYOAm8rIhu92MXbmOH4xcab24fE/XVnmnvHoM43/vnv6o9z9
      v8czH5wMwJXcytffdEs0n33Hcygur7PZ593dpyNBPtffb6+vr+fTTz/FarWSnJzM888/z113
      3WUzv35EqVQil8tZsmQJjo6OlJSUMGrUqKaPu/bL3gzs48WSfy1AjxNyix6FW3seePhhpKWw
      ls3h1AKSs0ts9nkxnfxuSAAWi4Xk5GT69OlDeHg4YWFhNvPp58jlcl566SX0ej1Wq5WamhqC
      gn6TwuQ3NNkFCu0xjPk9hmIxW0CuQKGQ2zxjg8Tti7u7O0uXLmXnzp0oFIrGklu2RhAEPv30
      U9LT03F1dcVoNPLWW281Fje5Gk2uA5h05axfuZz9J7ORy6WLX+L60Ov1XL58mYkTJ5Kdnd2Y
      YsfWmM1mlEolL774IkFBQUyaNIni4uImj2tSAPFrviSzXknsuv9yvuy3awASEteivr6eI0eO
      kJCQwPTp0+1WcN3BwYHevXvj7+/P/fffj8FgwMfHp8njmhRA5SUd5oYKjBWX+fLfHxF7Itcm
      Dku0DdRqNXFxcSxZsgSFQkFAgP3S6+fn5zNnzhweeughjh071qz9TU2OAYbMno13YRn0ujJr
      086vZW1nlWjZuLu789133yEIArt376aoqAi9Xo9Go7GpHbPZTHp6OkuWLMHNzY1ly5ZRUFDQ
      GPhzNZpOjuvnyenli9memEnPYTOYP2SYrXyWaEPI5XLuvPNOPDw8KCwstHmgj0qlYsiQIbzy
      yivU1dUxaNCgZs04NdkFOrrxWzpO+ws7d25nzjAnvtmSahOHJdoGFouFhQsX8o9//IMXXngB
      V1dXu0S5yWQyRo0axbJly/jmm2+oqalh7dq1TWbxbrIFKCuo5FzVVnIPA1RiENtWiSSJP0Z1
      dTWCIODn50e/fv04fPiw3VIw/pjhorKykrFjx+Lt7Y3FYrlmkZEmBTDwnsmo8yuw6mppMPvR
      pV/Ppg6RkGjEzc0Nq9VKXl4eaWlpPPjgg3axYzab+fLLL+nfvz+Ojo7ExsYye/ZsnJyuvdu4
      yS5Q4bmzdOrflwuHEjidfIQTaZdt5rTE7Y9cLsfX15eAgAAsFovdQi/lcjkKhYLU1FTS09Mp
      LS1t1kC7yRagtqIamU5g8rMv4CLP4rvDtttfInH7U1VVRVVVFe7u7kyYMIHvv/+eJ554wuZ2
      FAoFr7/+OidPnqSyspIZM2Y0uQoMzRDAgPF38dobL2JSO6I3OLLgk49t4rBE20Cr1VJSUkJm
      ZiZyuZyZM2faxY4oiqxZs4aUlBQ8PT3Zt28f8+fPx9Pz2tnMmxSAW/vufLbiK6pr9Wjd3FAp
      ft1rEqm+nMfJ1Gz8O0XTOdiLc6cSMWiC6NkllKL0ExTUO9CvdyRn4w+jjehDsKuZo0fPEn3H
      ILw09tmGK9EyUCqVDBgwAKPRyJ133mm3rRAmk4ny8nLuvfdeYmNjGT16NAUFBX9cAABypRpP
      z6sFM4tUVlTj7evCgjf+wbyn7mBNkhlNyXpM903kq1WJDA7WU2AYzQ8f/pNOw59i+iAH5v/l
      Pf6+dTvDQ35bdlXi9qG6upqUlBScnJwoKSkhLS2NwYMH29yOSqWiW7du9OzZk8jISOLj45sV
      dmmDECU5fv4e7Pn8M7ThMeSlnSFqwDO4JCaya9su3LtNoU9wGitPZ6LyigFrBkWXvAmP6AC0
      rZBIi9ViU1OCYL2qLVGw9fdnuaEwRrlcjkql4sknn+Spp56iZ8+edgmHtFgsFBUVsWjRIioq
      KqitrW2WLRsIQETm6Mvjf36VJx54EXNYJBVlFQj1IsEh7Um6eJl6Dx2unsFUISdcZiC+QEN7
      7ytzs1JI5I1zrZBImdzW35/yhqLGVCoVr776Kkqlkq+++gqDwWC36LOTJ0/i5ltRoq8AABLx
      SURBVOZGaGgoJpMJT0/PJm3Z4BexknJoFwkZeXQbPZmR4/uxcsW3VPjewRMzJ+Kw/Ev25zkz
      69FBbLtUQ4/+ThRdakeIMhpPKclWq8cqCKTkXF/gTX7Fpau+5u/pQoDX9adQd3BwYNGiRezb
      t4+dO3cyffr0m9UFUjJg7L0MGPvTf557ZV7j4z89/9fGxy+++jgAVxbCh/5x0xK3HKPZyvyv
      Dtrs82YM78L9d99YjiKNRsPkyZMZOXIkCxcuRK/XN5lfybbJ4CUkbiGiKGI2m1GpVLz88sv4
      +vpiMFw7t5KU51DitkAURXbu3MmqVauoqqpizJgxPP300398K4SERGvAbDZz5swZ5s+fz+zZ
      s3FxcSErK6vJ4yQBSNwWqFQqAgICePfdd+nTpw8xMTF4eTW9xiR1gSRuG2bPns20adNwdHTk
      zJkz1Nc3HcMuCUDitsBisfDII49QVFSEXC5Hr9c31ly+FpIAJG4LVCoVjz/+OAMGDMDFxYXT
      p083azu0NAaQuC34sdL9Rx99RHl5OQ4ODteMBPsRSQAStwUmk4mkpCT69evHO++8Q2FhIdXV
      1U0eJwlA4rZApVLh4uJCnz59GDRoEO+9916zyktJYwCJ2wK5XM4zzzyDTCZjxowZjBkzpsna
      ACAJQKIVcSKjmPpmlJhqLr0jAiUBSLQeVu1LIe9y0/365vLR3NG2GQOU5aWwdPGn/HfzAQy6
      CtYuX8yKdXtoMBnYt245ny37ltL6CpYt+Ds7E3OpLk5nwbx3yKrQ2cK8hMQNYxMBGC1ypsya
      TezST/l+53JyHKMxpW5j69bVfHtGTrRTPqt3HyExNZszcbHkZZ7j2OFDFNVde6eehIS9sUkX
      yC8ggK8/+xdhEx7AWpZAYPf2aC+JnEo+i3fINLx9jJScK0GmDkQlKyGv0ErHEF9ACon8I7SE
      kEizybbnZLUKVz8n0bbRe2az2RYCENi99AMu+tzFaw+M4PzeYjZkZOJeKjLorgGs25dKobyc
      9mH9qTqVRVener4v7Uigy5XGRwqJvHFaQkikRbStHYVCfvVzktl21l6lUtlGAAFRfcnNTOeL
      xaU89MzjDN2xEd34pxhzZw/aOW7lbGUUj40ZQILKhe7hGtQVLnj28sTX07YpsiUkrhebhET2
      HXMvfcf89J8RU+9vfNx96GS6/+/xXaOvpMMY2REg4o+blpD4g0grwRJtGkkAEm0aSQASbRpJ
      ABJtGkkAEm0aSQASbRpJABJtGkkAEm0aSQASbRpJABJtGkkAEm0aSQASbRpJABJtGpsIwGrS
      kbBvC+nFdQgWIwe2fceOg2ewiJAav4Nvt8ait+jYuXIFiedL0VcWsGrJSi7WShFhErcWm0Ro
      VBbnsnfrSjqoe2I9s5P9l0NwT1iCwjSc73aXMLNLJV/vtXBy6w5Ci9W4DHJh9fIVtBs1niDX
      plNXSEjYC5sIwCekG9GhvtQAeXm5hMaMQ1u7ncMHj+AbNY3gDuc4cK4AuXMn5LI8Coq96dQx
      EJBCIv8IUkjkH8NGIZG/xM/Hl9SCIhqqRLp178L3ybmUa6rwCepC1aksopQNHLroQpD7lbpN
      UkjkjSOFRP4xbBQSCZmJOzlX445weAejnnyYkM1r0XefwpQpw3AXVpFaF8JDUwfzvc5K7xgN
      9aU+BASaCdJerfi2hMTNwSYCiOw/nrf6j298PmvO3MbHY2fOaXx8/8PTAHgQgN62MC0h8YeQ
      pkEl2jSSACTaNJIAJNo0kgAk2jSSACTaNJIAJNo0kgAk2jSSACTaNJIAJNo0dhdAQcYpEk6c
      xWg1cvrQAbIv1WKsryA+Lp7KBtvVe5KQuBHsKgDT5RO8s3gXmfu/ZVNCEp/+37t8uyaWvJSj
      /O3FV0kuqbOneQmJJrGrAC6dS8Ct6xD6xbQj+VQmKu8YZJZ0Ll4uJiKigz1NS0g0C7sKwNnN
      m5rSEuprdWg93QAF4RiIz9fQ3vv3t7xKSNxM7CoA7+4TGaTNIS5XzcxxA4nqEkaP/uFo/NvR
      uXNXPBxV9jQvIdEk9q0TrNTyyIvzGp++9NoTALwCwDC7mpaQaA63vFD2z0MiBUFoDIkcHN2O
      iPYeNrPj7uKA+XfCH+UykSmDw21mR61S/q4dgA6+WpvaCg/yuqqtQV2CCPV3tZktL1f179sS
      BJueU2Q7z6ue0/AeHaiq97GZLRdHBTJRtHHw7Q3y65BIe2I2m1Gpbk7362bZ+jGe+nb6/iwW
      CwqFovGmaA9azEKYTCaz64n+2tbN4mbaulncTr9Ti2kBJCRuBYr58+fPv9VO/BzBUMNfH53B
      9jwYNSCa5iQ3MNaWsDcukeCOHVHeaJtmrmbtii949vnXMKj96RYThm0aeStrFj7LO1+lMGZc
      L+ZNHc6hal9MpTl4BYXg5KD4Q59ekHyQtHIH2vtqAVj70RtsiD9DcSV0iWx/1SY+I3EPb778
      LOuPFRDerSe+rrZIUFDHYxMncvJ8Ggnp9QzsE4Xif7/fqo//hsq/Oz7uN1IbWscHT8zim1NW
      RvRxZtbgMdSF3EGvTtcYDzRcZO6L7zH4ruGof35RCBaWvP0CDY6uLN8Sf+sHwb+mriydOtcI
      lDnJVBlGsupfK9G4iDj7BVFcaeXJWcPZvG4DMt+uDG5vIjatAl/f9pgNInUl51i6bh9d7hiF
      /FIyxzOLmTDrT5zcsZoGQUa7vhMY07cTv6splTv3zXmELTuOc/8Do7l4Ko6dB07RZchknEsS
      SStrwKgM4qFRkaz+bhsWBw8mjB3E/l17MGna89ADU3BW/r5ajaITbh71FJ9LRAyMod5kRtQZ
      Ec31bFjxLTqXjrhRSkVlA/1GjeDoju04BEYzqpua9XHZiCY9U2ffx6m9W7ho1HLv+P5sW7cR
      hw69GRZiwqD4yW5acird5rzLuN5RXEo/xua9hwmMuYshITLWb4/DO/IOpo/pT1T/MYztu42y
      Pg8SrtWxesnX1DoEMGNMV1au2otMIRIY4E6p1YfZw0PZsGkv3lFDmDKyN4qrdk1EDHJvnnn6
      Yd54/UuOH3Ei6Vgq3UbcQ4O+nsK0ROK2nMOv23A6iZdQdhlMxoGtTLz/Tzhd86oQsTr74mDM
      oThVhTYqigajnkNbv+X4+UuMnTGb0we2UCl4MCjEif1n8rjjzr5UlRTw3ZKPaDdwCv61aRw4
      dZ47Jj9Ag64Os9lMvd7QcsYAP5J9NI5yuZbKnFQyLxfx/ZEcegSYyTD6cyluA5s3/oetJ/I5
      EruXs2cOs+FAGkEecg4fOc2KDz6gy5RHuaOzDxdy8ynJ2M/K3SdIOHKS7jHt2bp9P83q75mr
      WbZsPeNn3cd/P/4np08k4N4lhkObt/H96v/g2H0MlWfjuVCQS0FpFd+vX0rm5WuleZQR7uPH
      vh1H6d4nHDBxPP4wqT+s4qgxjPunDCb5h41k16tJ2fQ5sm7jqU7awv7Ew5yrcMZVl8m6b5aw
      YnsSF07+wKGTKWTkVQIWSnNOkpxX2WjplQ8+oT5xA/PeX0FuThZVdTUsXbKUr1Yso8voGSSu
      /pS8hl96l/bDevIdo/G5GMv2I8kcv2DE35CLISiGhM1r+PbLf3E8r5QdO/dgNF87j5K5+gJf
      frWRu2fMojo/m/rafJYs2wjApbxsKuvrWPrlcs6eOk5eRT2H4r6neTvCHAhwdmbP4QL6RPuD
      2UBWbgGlWQms2nyYHZvWY3by5kLKCfSosJgtyNSujBvYkf9u2ENu7gUqi86y9NuDv/jUFieA
      Q0fOMHb0KEYPC+dwUhbI5MjlV5JAySxWfDt1wcvFmaF3j8TLUUW/kVOJ7ugLQPe+XTm0aS1H
      T6SSlJpLeHgIoiAgkytRKBQIZmvznFA4Ed7Bne3r1+IV1gOVXI5SqcRiFfAP7sCZ/Xu4UKmj
      IucUl8xaOvh60NRQKjwyiB1nLtHN/6dUkN6h0RiyjrDzhyRMjj5MmT6Jnj27c+7AZgpMLgS6
      aVCqVMhF0PqF4O/pTK9hY+jcoT1dwnzYvnkrOusvL8gDP+wGRw80ajmnjybg3CESD0cZkeEh
      HNq5Eb17R7x+tQjvGxpG2dmDnLgInQJcrszGyWTIFXJkFoEOUVG4ungyfvRQVIpr90lV7h15
      8bU3mDk6hsSjSbSLjET9v4xuZ44l4NQuAk9HAWc3BYkHDlKua+ZvAvSK0LIn10ioBgR9BQmn
      c4mM6IhgFdH6dWD6uLsIjemJQ2Umu+NPo1AoUSrkWBpqSDyeRnBYGPJf3QJb3CC4rqYKR60H
      MrOeBgtYTBZcnBQYRRWiQYejm5b6ykosMgdcNUpMOODiIKdOb8RF40BVZRUOGi2CSQ9yBXKV
      E6LZgJOTGr1RwFWr+f0uEAAC1VV1uHq4IRj1VNbU4+LmCWY9crUThno9uqJTLP52F+UGF96Z
      /xfkxgZUDio0Lq5XuThEGnT1yFVqdHoDrk5K9BY5cqsJJxcX9LVVGAUVaqWI2lmLSiZQVVmJ
      XO2Cixr0Zjkq0YTMwQmTvhaDWcTV1YX6mhrkame0ajDJHHFWX+nNNtTXUKszonX3QGE1UGcQ
      UClluGgcqaqqxsHZDVfNlf6+QVeLqHLGUQm11VVY5Go8XNTU6s04yq2IDk4YdTq0Wg3VVVWg
      0uDp5nKN2RmB6qpaXD3ckQP6umoMggylTIlSbkUURRrMoFLKcHJQUKMzoVTIcHN3b+JOLKCr
      rcfB0YH6BgsalYhVrsair0NUKJEr1YgWI85aN0wNNdTWG9G6uWE2Xrkm6gxWlIIJiyhHrlSj
      EI2o1E4YzdaWJwAJiZtJi+sCSUjcTFq0AIS6Yt5/+y0+/mQJGcVVt9odm3N603948uW/s3zV
      bhp+82oV8155jwbTT33kxO3/ZcE/F7Jqy0FuNCfzf978Czk6oOoCc554gnf//jprYs82vl6Y
      dpyMi9U3+On2Z8fiNzmQXd/43HDhMO99feDaBzVU8v57/6BE99uXWtw06M8xXk7hQI6c9V88
      hKNK4MCm1aSVi0y/dzwJ+/dQUVpLYMdgLpWbmD5tJIe3rqVC04l77ophz+Z1lMjb8ejMcTjY
      OFPy9dJQU8ymtZsgsAczx92B4n/+1JUWETLkfh6Z1BVDeT5fbdhOxJApRHsb2LB1E3Enz/G3
      n/VQv9+8ma4v/Icx4d5cbfWgKO0om2OP03vkNFwqTpNxSY/FuT1T7ghh04ZtfB9/hmGvAJYG
      KnDjvTkTePKvq/G3DMVgVeLnoqdB9GbbsT1UVtbQa8xMYtq72f9LaiblRRcw1dazd8MG8gye
      TIuGvEtmMhK/Z2/iee6aMgtdxgEulNWh7dCbYVFOfLt6PYdPpjG1OJut+3bSofdoxgyIAlp4
      C+AYNoq/z+jI8489xoGzhZRUVHH+0EZWbNzPxl0HiW5nZNtpHeXHd/L14g84beqE+vw6vo0/
      T0VVPXFL32T/BRvn/78BTLoaKut0rJi/gCzDL/05tuMbVm3dz5cfvsXJ/It88P6HfLno/wi9
      cxLtXH85O/7nfy4id+O/eOHtZeivMhtZU1FCdXkhH/7fEuJ2r8YS1J9j3y3l3x99gCp6FJH+
      Py1EVeadZfFnm5g0czTrPlvIvlOFXMxIICWnkC074ukWLGPZuoO/b+gWoqvIY9P3iXi7u16p
      IyGKVJSXUV+UzNsff8eB7evxC43kmzWr+fC1N+g8fhZBno6kHtjI+SpHNGpZ41xQixaA8XIm
      l+RBDI5pR0FmCluOFjCwd2esFgGZQo5CLkehUCKIoPHwoe5iJnlVIvKqc5zJt9I9IgBr82fZ
      7EbB6cNcMPkSGeiBrvI8/16xrfG1gRMf5E9ThxPg60dIZF9e/fNj+LhpuZCRQb3JQsrelazd
      nwlASspZeg4Zg4PuIrHr/83u01l89NoCKn5ma9+mLQRF98dDfWXCT61WI2LG2dWNoqwMKnU/
      zbp7hnTj1XcW8vCoGBz9OvLC0w+gVf2vboNShVIpx6LXs/w/75OQsJ//LN9JC/g6Ubn4MH38
      CLZ/vYzsKiNY6tm3+yBde/ZGIQeZXI5apcJqNeHh6Ub2uTTqDRba9RrNgA5mPl+2prEL2aJn
      gUSrgYyzaRiVWjpHhFCQeQ65kyuOLm406Grx93CirMEBB1M1Wt8ASnMzaVB5EhXixfn0bNRO
      Dni3j8Td6dbq3KSvJiOrCEe1mpqcA2S6juCBIZ2oLSmgTuVNkKcGs76atPTzKN2C6OitJDP/
      MnKFhvZeKnQKL9r7aqkuLSArt4SATpE4GkuxOPtTV1hIh+jO/LiRofpSLgWVZpw1zmgUehw8
      g6m9XIC3nyc52YUolUo6du6KRtRzvrCMsNBg5KKZvLxC/NuHYKwqokHpjr66Ej8vDaV1cmSG
      crQenlTVWukUGnCNaWT7U1aQhcwtgLK8TAxKN7oEe3KxRsTZXEG1SY5crcVZrEPrHcCl0jKC
      PJzIzL2E2tmZAE8XLuQW4NU+gtCAK1vtW7QAbkcMunoUTi6oWnTb23b4f6szzzadXoWzAAAA
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Parameters in a Conditional Filter' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Parameters in a Filters' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO3dd3hUZdr48e/0Se+FQAghhVBCE5BQBEVAiihldV0WVyyrwuruvuyiWNnX
      jgqurIj9p/uuu0oJhCq9SElCkVCSEEICCaT3mUw9c35/+JLdd8kw4zozYPJ8rosLhpmc+z5n
      zp3nOWfOnFshy7KMIHRSyuudgCBcT6IAhE5NFIDQqYkCEDo1UQBCpyYKQPjRZIfE/qzPeH3J
      UnYeO+/Wz9SXnaWgrM7p89X5O5n78ELKGht56fWlnkr1KmqvLVnoNCwN+axcc4YPPn4NHVCY
      s439BY1Mm34HBTl5DLmpB7ln6gm0XaK0qh5tTF8ub3mDrIoEXv3DfVyqaUJtM6NXBRCoMdNl
      yGjshlpshiaOnS6ksKgYU+MlMtdkoU+4idE9VWw7XISk0BCqNhGSOpohcQ5WrdtB/1unMSg5
      BoWbuYsRQPjRpNYGJF04ARo1GkMBL3ywn5FJDt58/6+s/XIdhtoiVm/cz47M1QT1TuKTZZ+S
      nt6fYeMmk6AsZ9Fzr3HJJFGV+zmrN+3DX6UCIGnwUEqP5WB2yFhbm6iureWd114h99BGcqp0
      FOzeRGR0GEs//Bvv//cCck8X8OY7H9Bqcz93MQIIP5o+uh9pAV+xec9BekYoCFGbOFtSSVhE
      LDX2E+QXXcAOoFSh99NjtdqIiIml7vA5GnqF0nfU3cy9exJ5QcUU16UTpFfRDCj0MSQHneTj
      aiPnc3dxWZdI77gCJBk0Gi0qpRqdVovNZiGsawz+vSczMr0HOpX7uSvEJ8HCjyfT2lRN3qlz
      dElJR2+6THFlK+kD+lNfeopmWY9eH4TOYSQ4Lo6yc5fpndqFvOOniU2Ip8mkoHf3cFZt2k7S
      oNEM7h6KuaWaymYVMf4Wjpc2MSQlmhMFZfj7a4mN8KfRHoTSWEdkbBSllU2kdAnkxIkCAmJ7
      0CepG0o350CiAIQbg8NOfX09oRHRbu+8nnBdCkCWZWRZRqkUhyDC9XVd9sArBSAI15v4FSx0
      aqIAhE5NFIDQqYkCEDo1UQBCpyYKQOjUxKUQHYQsyxgMBhQKBQEBAbS0tOBwOPD390er1WK3
      2zEajahUKgICAjAajQAEBARgNpux2WwEBgZ2us9mVIsXL17s66BXPgPobBvbm/Ly8nj99df5
      5ptvSExMZN68eUiSRHh4OOHh4RQUFLBp0yaWL19OXFwcb7zxBnv37iU0NJRXXnmFEydOYDAY
      6NWrFwqFDz+Kvc7EHthBSJKEXq9Ho9FgMBiw2+0kJyfTtWtXAFJSUkhNTUWtVmO321EqlcTE
      xLBt2zYsFgtJSUls3boVh8PhMlZLSwu7du3i4sWLyLLMpUuX2L9/Pzbb95dhyrJMQUEBR48e
      xWazcfDgQfLz87Hb7eTm5nLgwAHsdrtXt4e7bpgRwGQysWHDBmpqaggNDSUrK4vi4mKSkpJQ
      KpWYzWY2bNhAdXU1MTExZGZmcujQIaKjo2lqaiInJ4eEhIROO6ocO3aM1tZWrFYrffr04a67
      7mLv3r2cO3eOQYMGAWC32zlx4gRjxoxh7NixnD17lpCQEJ588klqamooLy9n0qRJLkeApUuX
      olQqWbNmDSNGjGDp0qWsXr2aadOmodfrMZvNPP/88xw4cABJkigsLGTbtm2EhoZSX1/Pnj17
      UCqVJCYm+mLTXNMNs7esX7+e2tpa1q9fz5kzZxg6dCj79+8nNzcXgKysLKqqqsjKyuLgwYPs
      2bOHGTNmEBUVxeHDh/n000+xWq1uxbLb7bS0tGCz2bDZbDQ3N2M2m9sK0+Fw0NraiiRJmM1m
      mpubaWlpQZIkjEYjra2tbl3KIcsyO3bs4P3336eqqoqtW7fyzjvvUFRU1PYaq9XKsmXLOHXq
      FA6Hg88//5ydO3fS2NjIX//6Vy5duuTWOnXp0oULFy5QW1uLLMusXr2a8+fPk5iYyM9+9jN2
      7dpFZmYmJpMJSZJYs2YNxcXFTJkyhczMTHbv3s3s2bPdmv706NGDvXv3EhAQwLlz5wgKCiIk
      JKTt+Z07d5Keno5Wq+XYsWOMGTOGyMhIbDYb/fr1o6CggO7du7uMc+LECebPn8/8+fP57rvv
      WLJkCQ899BAFBQXA99O+e++9l2XLllFYWMjixYt59NFHOXToEMuXL2fu3LksXbr0mu/VDXMQ
      3LNnT1auXIksy6SmprJlyxYuXLjQ9lsiMTGxbYgODg6moaGBjz76iLlz5zJmzBg2b97sVhyH
      w8Hy5cupqalBq9WSkZFBYWEh+fn5LFmyhMDAQA4ePMjLL7/Mm2++SWtrK4cOHWLjxo0sWrSI
      VatWodVq+e1vf0tSUtI1YzU2NvLJJ58wb948Pv74Y+6//37i4uJ46623+OCDDwDYuHEjubm5
      xMbGYrFYOHjwIBEREXTv3p3t27fTq1evtmnMtQwePJgVK1a0Pc7IyGj792233QbA+PHj2/4v
      PT297d/z5893a9tdsW/fPh577DH+8pe/sGrVKux2O2fPnuXUqVMkJyezdetW/Pz8yM/PZ/jw
      4dTU1GAymaivr+eDDz5gyZIlbv32r6mpoWvXrtTW1hISEsKsWbNYtmxZ2wF8dXU18fHxzJgx
      g27duvHUU0/x0ksvUV9fz2OPPcbChQuZOHHiNYv6hhkBsrOzmTp1KsHBwRQUFDB9+nQGDBhA
      Tk4Ox44d4/Dhw0yaNImwsDDMZjMrV65Eo9Gwffv2HxzLarUSFRWF3W4nIyOD2NhY1Go1CoUC
      hUJBRkYGaWlpAAwbNowBAwYwZswYQkJC8Pf3R6fTIUmSyzh+fn74+fmxatUqBgwYQF1dHStW
      rGDMmDHA99O+nTt3MmrUKCRJIisrq21nTUlJIS4u7gevmy/MmjWLDRs2kJGRwUsvvcSrr77K
      zJkzUalUrF27lnfffZeFCxcyc+ZMfve735GdnU23bt0IDQ0lLCyMdevWUVhY6DKO1WrFZrNh
      Mpmw2WxUV1e3ndEC6NevH+PGjeP555/n+PHjvPLKKyQmJjJ+/HhKSkowGo2kpKRcM8YNMwJM
      mzaN1atXk5aWRmhoKB9++CH+/v4MHDiQNWvWMG3aNNatW0dKSgpdu3bliy++QJZlxo4dy9df
      f01YWBj79+9nwoQJ16x4WZaprq5mxIgRnD17FoD4+HgcDgdms5nAwMCrXr927Vrmzp3LpUuX
      iI2NpbGxkYaGBpfrVF1djSRJ3HPPPaxfv54FCxbw9NNP88wzz5CUlIRCoSA4OJg9e/YQHR1N
      REQE3377LWVlZZhMJre3XbPVjMFmcfv1rgRpdQRp9E6fHzduHOPGjfs///fMM88A/xx5oqKi
      WLBgAQDPP//8//lZd6nVapqamjCZTJSWllJUVITFYqG5uZmHH36YX/3qV5SUlCDLMkVFRezZ
      s4cHHniAkpISsrKymDhxIlqt9poxrsv3ARwOB7Iso1L9gO+ueTD2smXLqKiowN/fn9TUVMrL
      y6msrGTEiBFcvHiRtLQ0/vznPzN27Fhmz57Niy++yMcff0xeXh4fffQRsiyzcOFCl1Mgh8PB
      pk2buHDhApMnTyYnJ4eKigruuOMOSkpK6NOnDz169ODIkSNotVr69+9PWVkZBQUFKJVKDh8+
      TEBAAI8//jg6nc5pnKKmGi4a6j22jXoGRZIYHOGx5f2nHA4HBoMBpVKJXq9v+3dgYCBGoxG9
      Xo/RaEStVqPT6TAYDAD4+/sjSRJarRa1+tq/4ztdAXREviyAL06co97k3skGd8xO70lUgPPR
      xttuiCnQmjOlHK/03Bt4d1p3hsRFemx5wj/tLa2irNnoseVN6xXfbgEYbRYskuc+K/BXa9Gr
      NVf9/w1RAOcbWsi5VOux5Y2Ij3b63O6SCmwOzw16YxJi0KmvHslarGbONFR6LE6ARku/8Bvz
      oNgbyoyNXDI2emx5KSHRdA8Mu+r/b4gC8KXlOfkYrJ77zTI0LqLdApBkBwa75w5MlZ3o8gRf
      umFOgwrC9SAKQOjUPD4FMlw+xZvvfYUyMIqHHv0561e+R41Vy6xfP0G/uGBPhxOEH8XjI0Dd
      ueMYIwbTVbrEga1/54SczoyhoazaeLjtdihXzry2PfZ0Ev+67H/74/E4TmJ5g/N18nS89uN4
      ZfvJTrafx2O1vz4eHwFUgREYS3ZzwmFlQpKFwNBQtLoGjIbvLyCTJKkt+JVPbGU3LsH9ISRJ
      ars09yoe3q52mw2b6uoDVE9f7ivLstN1ckge3n4Oh9NYni4Cu93Wbix3Lsv+ISSp/XXyeAE0
      11XgF5tEWF0emvghmA/uZlejnaG33opSqUSpVF71QZinL2FWqVTOPwL38MkUjUbTbiy17NkC
      UCgUTtdJ6eEPFFVK59vP01+Wcbb9PL5OTvYJjxdA2m2/5PG4Auz6KaQkduOmhO5Ut6pJTUnw
      dChB+NE8XgBKlY6UvgPaHkfFJxPl6SCC4CHiNKjQqYkCEDo1UQBCpyYKQOjURAEInZooAKFT
      c3ka1FhXRuaa1Rw9VYRdEcCgUbcxfcp4wvw73ZXUQgfkYi+u45O/fMnAqXdy+92zUTgkLuTn
      8sVnq3l4/s8J8E2OguA1LqZA4TzxwkIGxirJP32Ct198igv6gTw57178fZOfIHiViwL4/j45
      TdUV7Fqzlv4zZlLz3fnv75/jm/wEwavcmsh36T2YW++U6JOeSGM/cWGD0HG4dRao6XI+m3ce
      JzC6J2ldxZdahI7DrQKQFSouHd/KIw8/wpfbTnk7J0HwGbcKICA4irR+yehlG3bR31roQNw6
      BqgpLcZi0DN28s1ILTdGYwNB8AS3RoDw+CQm/3w8+dnHiI6/+uZCgvBT5dYI4BccQmn+JR58
      8nHqjdfvPo6C4GlujQAVBcc5eriQyvpycvac8XZOguAzbhVAZPckwsONfPLu1/Qbl+76BwTh
      J8KtKZDZYqLvLdN5dPwtRAX7eTsnQfAZt0YA/9BY/OzlvP7s73nmjQ+oNIgzQULH4KIAJGw2
      B81Vxezd9x0RyUO4Y1gchw8U4NnbFgnC9eFiCtTMp29/RvzQwTyyaDEReivHjxzkctlZzPQT
      V4QKP3kuCiCMnz84k282beR/9u9BVihJSs/g3l+MFju/0CG4PAgOiU7gnrnz/nmvUnEptNCB
      uCyA0/s3suNYcdvj9FHTuO2m69/iXhA8wWUBhMV0p0+ff7bojIsI8mpCguBLLgsgLrU/QUGn
      +f28BZS1SEyd/wZpPUQHRqFjcOuDsIbLNaQkD2X8mD4Ym699AlSWZazmVsw2mcDAAOyWVqyS
      goAAP9HoTbjhuHk1aCLj751C5ekCuveOveZrjVWnWbhgEV9lbqW6qpBFf3iWN//0LNvyLnsk
      YUHwJJcjgN3SxJ4NGzhvj2bwkF58d7SU2wd1c/r6M7szaQ5LoVevZExn92FPuYNf9L3IZ3uO
      MSG9C7IstzXIuNJtxOHhriMOh8PjHVqcsUtSu7EkD3dtkWXZ6Tp5usOOQ3a+/Tzd0Epysv08
      vk5O9gmXBWCzNJB7OJcSRxD1NQnc98hd1/4BhYKwyBjyt35MXlAkEnE4HBIKpbKtu8hVf3v4
      xKpCofB4JxNnlE5ieTy+4hrL9HAsBc5jeXqrOn2vPL1OTrafyymQX3APnlv2JiOSQ6irawTl
      tVvX9L1tJvryHIpqlQyddC/h5dv5fNt5pk2+GYVC0dYmSalUolKpUKlUnl5XFApF27L//Y+n
      /et6/OsfpdLTO6XzdfJ0sSkU7a/T99vPs7GcbT9frZNbB8FV506iTRrPn+6x89m6I/R6ZJTT
      1wZE9+bVt99qezx82Z9/fPaC4CVuHQRHxCdy6VgWL7+zjv4j07ydkyD4jFsjgEMRyNwnFhES
      ArW13k5JEHzHZQFYjBV8smQJxfYw0uIljEET+MOD4oMwoWNwWQAKpZqILnGYpSCieyQy7o4M
      X+QlCD7hsgC0flHM/u0ffZGLIPjcD+oQk7fpU155fxWNZslb+QiCT7l3b1CHnaaGemIGjWfq
      0ASqqhu8nZcg+IRbZ4EqTu3lxbf/RnBkGBlTH2bWEHEQLHQMLgvgbPYOtu87TGhCMmkJMXSJ
      CPRFXoLgE66/EhnVleS0PsQ6/IkOA7PB4ou8BMEnXBZAaEwY5z45SLEUTlo3O81+gYwbkeyL
      3ATB61x/DqBQ4hfoB40Q3OUm7pk6whd5CYJPuDwLpPWP5q777qSlppbBw4eidoi7wgkdh1un
      QRVKLWHqFt57+w22ZZ/3dk6C4DNufCGmiQaTjkkzZ2EFuiWE+yAtQfANlwUgWU3UXq7mzHdH
      aXCo0Eam0VfcFkjoIFxOgfRBsfTuFUlZeSllJecwq3SufkQQfjJcjgDGpjpKis7Te+y9jOlt
      Z1N2CQy89p0hBOGnwmUBFB78hjX78rA54OxRGDrlYV/kJQg+4bIABk/6Bf3HzURChU4DrSbR
      GUDoOFzfF8hmYO+arzlvi2ZImsTBkxHMf8j5l+IF4afEZQFYW6v5ZuNWShyBFJ6OZ84TC3yR
      lyD4hMuzQP4hPVn08h+h6iy5B3ax8/BZX+QlCD7h1vcBWhpaGT78duKGJ9Pa4u2UBMF33LoU
      Ija1H3c/MBPDxVpuGpXk7ZwEwWfcGgG0gREkpUaQlCqaZAsdi1sjQMPlfDIzd2KwiC/DCx2L
      WwUQGB6Hv7WUZ3/7KE+9uoKKFpu38xIEn3CrAJoqi9i19zhxfTOYnNGdo7nikmihY3CrAFqb
      jNz68ydY+OvbqKmLZdKYlGu8Wub0vi/52QMLuFRbwydLX+XlV9+ioMrgoZQFwXPcKoDgkAC2
      r/2I1/70Fk3BIahUzn9MMjexeU8eanMT5Uc3cNjQk6npOr7amO2xpAXBU9w6CxTcrR8PzZlO
      eYuCgQO7XvO1xYfX0RjcmwB5B3W11QRHDsXPv4WWxmYcDgeSJLW1R5Kk7w+qJQ+3w5HsdqxW
      a/tPerbDD1abDavq6mYONg+3aHLIstN1ckiePTkhSZLTWLKH21nZbLZ2Y3l+ndrfJ9y7MdaZ
      g6z8OJPwmAismiimjnQ+BdKEJNE7Mp/cy+WYw2dhyP6WA0YrA4fd0tYZ5kqPsCsdW1TKH3SH
      RpdUajVarbb9Jz3cjUar0bQbSyN7tgCUCoXTdVJ6uPONSqVyGsvTnVs0Traf59ep/X3Cvc8B
      dBp0AUGEhITgp7v2jyQOGk3ioAxuvmkM3ZKSGZ7Sk3KDhoH9U/+zzAXBi9ybAsX344E5wdiB
      iC4Rbi02pXcvAPyS04n7EQkKgje5NfcwVRfz/PyHefzRX/M/O/K9nZMg+IzbF8ONvnUK/inR
      KByena8LwvXk1t4cGpfA7ffOIlKtoVffLt7OSRB8xmUBWE01rP70U77O3IXN3syRIyW+yEsQ
      fMJlAcgOO60mCxZzCy1SHL+8b7gv8hIEn3B5DKAL6MK9c+dQagzmpmTYtr+IieP7+CI3QfA6
      tw6CZVszW9Z9Q3GshYaIqd7OSRB8xq0CiEwawsyJNkpbVEwZ1dfbOQmCz7h1FshQVcCSF94j
      NNrOqnXfeTsnQfAZ9wqgvonomFhO7DtAg0V8GUboONwqgJheg8gYGU9JjR+/nHGTt3MSBJ9x
      7zvBF0+z92gxjpozbMu96O2cBMFn3DoIlmwS/UZN5KYUmXVbv6VyQAyxYQHezk0QvM6tAlAF
      BGC6XMzeahm1SuZiVYsoAKFDcGsK5JBs2NChV1jpOWQCw9JEfwChY3CrAHR6P6pL8sg5XUZc
      tyhv5yQIPuPmFCiSeU+/TGSUhstVZm/nJAg+49YIYKsv55mH5nGs+Dt2fVvm7ZwEwWfcKgCL
      yUJkVCh7Mjdj0mm8nZMg+IxbU6DolMHMfaKV4nqZ28f393ZOguAzbhUASi1pg0bQR6tB4en7
      igjCdeTevUHLvuPBqb8k+8x+Pv3yiLdzEgSfce8YwGgmKiacfeu3YtK6N2gIwk+By725vrIS
      fZdk7p4zjVqbjvETBvgiL0HwCZcFcDzrCzadrUKljSItKYpTZy8zsn+8L3ITBK9zOQW6Zc4j
      3DoglW5x0YSHh+OvF1MgoeNw3SfY3IisDKL4yDaOH4FbdUkMShX3BhI6BpcF4B+awNT7Epg2
      +xdALXu3V/ogLUHwDZcFcLnoJPkXa/73USV5edGMGd/P6etlWUZ2OJAVCpQKxf/2AgClUuHx
      W2sLwo/lsgCaq8o5ffpc2+NBY0dd8/V15w7x4Zr9lBVd5NeL5vPlsvdQaFRM/PUzjOsjLqMW
      biwuC6D36Cn0Hu3+AsMSh/G7x7rzwu+fozh7E+bkKczrV8bnO45wW+8pbc0x/rXTiMPDXUeu
      dKLxBUmS2o3l6a43MrLTdZJlz8ZyyNfafp59r5xtP9nT28/JPuHxWz1bG0p54dnXuOWhP3Bz
      QjiyDLJD9nRnomvy6UTLybTupzzZ+ynn/kN5/Jzm8a2fceiCkS45+0idfht+xe/y2QUtkx+f
      jkKhQKVSXdUiSenhYwOFUtm2bG9TOYml9HDbJwUKp+ukUHg4luJa28+z75VKpWo3lsLT28/J
      ++TxAhgx5xUOzPnn4zffW+HpEILgMaLbhdCpiQIQOjVRAEKnJgpA6NREAQidmigAoVMTBSB0
      aqIAhE5NFIDQqYkCEDo1UQBCpyYKQOjURAEInZooAKFTEwUgdGqiAIROTRSA0KmJAhA6NVEA
      QqcmCkDo1EQBCJ2aKAChUxMFIHRqogCETk0UgNCpeb0AyguPcyD3JBbJl3cHFQT3eLXfkbXq
      GP/93iZG9bBSbNBw/61p3gwnCD+YV0eAyoJsgnqP4OaBCeQdPePNUILwH/FqAQQER9BUVY2x
      2UBgeKg3QwnCf8SrBRCRPpnR4Rf5plDB7Dtv9mYoQfiPeLfnqTqQXz35lFdDCMKP4dOmv1da
      F11pj+T43zY4N8WGEar1XCoJQX7YbLZ2n7srpStWyXPtd1TI7cZSydBVH+yxOHqV2uk6Bak0
      Ho0VoHQea2LPWJrMVo/FClQp2o0VotKCB9fJX6FqN45Clj3coMsN/94hxptsNhsajcbrcXwZ
      S5a/7xemVnv/95fNZkOtVvukw6evtt+/xrluH4T5qmWqL1uzdsRYnm71dC3XY5+4LiOAINwo
      ruulEAdWL+fpxW/w4WdZGP/9SVsTqzK30nLpDFn78lwuq65wNy++/zVuz+4dRj549TleXfIW
      a3cdc/qy8zk7yS6qcfr8/2XmvcULeeOtpazd8x052zI5X2dyN6MfbeWLc7jvv5Zgbqnm8buG
      8No/DnpkubbWRv7rwceoA2qLc9mRfa7d15UdXceid75/DyRTI1s2b6f1R3ar/fqt37Amt4wX
      fvMIZ+s9d+xxhU8Pgv9d0amTRPWZzc8m38yZLWvQ9BnMob9tYeKc0eQXNSIbTHy78XMWr7mA
      btFjXDx1mNL6UOY/NoEta7LQJwwhTVnGsQqJ6GA7RpPK/XaskonTZ0qZ+uSzjB7Ug6wvPqbG
      ZMavx3BuTXSwetN+YtPHMiioldbWFv7fyn9gsdlIuuUebh/QzclCLRw/cY45i3/NsN6JHNl0
      Htlygbff3I6/RmLk9PuozN5EQbWFpEHD6GIpY/fRs4yaNpuK7CxqjA5Ce41keHQLq7fmkjbi
      DiIbjnC6QUOPtHSqT35LjSKWh+bchV519XTB5AhGJzdRUVWEf0gyrWYTBzb9g0MFlUyYdT9c
      PMiuYxeYOuMuDm5aS7Mujjkzb2PTV/9DozKWe+6bTqR/O3NwWcbQ3IIMqGQrrbKD4mO72bA3
      jyETZhDemMfW4xUMTFBw4Uw+S5eUM3xoEn/677d52OrPqK6tbDmQz/AJUyk79A1mlYwmZhj3
      TRri8m2ytDZzZuMHSL1m0E2u4NMV67GH9OSukXFkbjlKRGIf4uRycs81MnnmDC5mf8PxczXM
      eHAeSRE6l8tXLV68eLHLV3lJ36EZ1Obt5M+fZNErXsnB7JOcOX+W6pomHBExHN6wk5/dOZTj
      rd1Z+ODdKGrzuahNxJT9BVuKTJQWFqOtPcHeyhBuHxDJ6Uo74zMGuDesKf0YNqwfB7I+5qvs
      KqqOH+TWOb/ikzeX0S81nJP5xWzamUuvwFpOWbpwdMd27pyQxpe7LjNldD8nC9UxauRAdnz9
      IetPNGPNP0RASgxfrj7D3el2Nh8tZldeK/PGBPDpoQbCTJeovHCKrWfstBQeYPz9s/nLax9T
      fmwfk38zj6/eXYm1Ko9D9VEk2vP4fPs5zGV59LxlGjH+V6/l4d2b6REeRFFVMwFh/pj0scgV
      hZQXHSO7tJXcA8d54ukF+Bsvsn3/cfZs30KAopKj0iCGyMc50BjN0OToq5brsJnZvG4z4+6Z
      SevprWSekdj/+ZuY/IIpvlxB1pq9vPjys2gaznK8LpyB8knKIjKQGuqZ/9s5vPjYI2giwymq
      MJK/fzfTHp3ByrfWc8+s21y+TXl7Mzl6voHYPiORT66nNmEiqkMfck4O4h9/38OUsT154fXP
      iA20UWUPoPHCWUpO7qJYN5Bb+sS63g1cvsKLcvbtoMnhR3CAlpQBQ9i5djOT7pvE7s0HGDYw
      GQBtdAKKkhy+3fsNi5dvJEplIrRHH0ICQhh/x+0EanWMvWsGidFBAKx79xm+3HGY5555kcb2
      z+R9z97Ert2H0IVHoXU4wGJg2/q1hPVMpzj3INroHoT6/XOAVKrUqFRKJJv9GgttYeeWA2jD
      IvH7l1/QKrUalVJG6R+O1nCOnTkFqGUTh3NPk5yaiuyQkEzNbF2bRVyffvTtE8+mrzLxi0vC
      T6tg/PR7uWnwQGJDAxk5cRqx7ez8V6TfnMaqzefpH+8Hlnq+zS2id69kFPpgkqIg8+tV5J/M
      o9ioJyEmhPCEvrTk7+FAURO9EiKdLtfQWMqaVRupNVpRKNX06ZNKSEwKt48cycBEHX9btY7y
      hlZUV84Yaf0J1xjYfaCA9D5JBHXpxa0Z/VGplKhVKux2M1+89Bx7vzvM/b95+WrQib4AAAPC
      SURBVBrbFCY9tIjLW1ZgiezOuUPfcLopiMRILb2Gj+OWEUPp2y2K7ukZDO6mJye/nNSUBCRz
      E8tff51Lzdd6v67zQbDVbKSxyYBfUCiBehX1dc0EhQdiaDASEhGCsdlIYFAAzQ11KDQ6LKZW
      ZNSERYRgaGxAUukJ1ICsDUCvtGO0OFA5LMgaP2xmM8EhISidnViQZYwtjRjMdkLCdLz8mwWM
      e/xphqV1RyNbaDHZUKvU6LVgV+iQLGb8/DSYrBAc6OdsoRibrywzHIe5FbVeS2urDX8tWG0t
      /O39TzhdUsro+59hUt9QJFQgW3lr0R8ZP+8lbkqJRa+SqG9oxj84DJW9FVkXhF4l09zYgFlS
      EBERjrqdFTMamtHq9TS3mAn2U2GR1TjMBmSlBqVGh05pp7HZSEhoCC3NBtQaFQGBQZiaG7Ch
      JSw0qN2m5bLsoLGuGotDTWiQHzY06JV2Ghpb0AeG4KeSaGhuJTDQH7tDiRYbDq0/mA2YHWqC
      9Arqmwz4BQaD3Yp/oD+GFjMahYTKzw+j0UxEWEi7W9RkaAJdIFJrC2q/AEwtjcgaf0L8VBgt
      MsGBfpgNTTQZLQSFhGBtbUGhUmOoK2H9nlIenTuddmaLbcRZIKFTE1+IETq163oWSPCs4pzN
      /G3bCWK69Gb2Q3eyacXz7LoYzXsvPcZHL/2RS6oodOGpPDX/XrRO54Y3JlNDGc8uXERYtx70
      GD6LORMHemS5YgToQI7t2Yqu16386ucT0LdWk1NgwV5+ggqLjeq6ZqbPnUfZjlVcsv3Ik/PX
      gcNmwWANZ/4jd/L3v6+ipeocH61YQe7ZCk7v38iXX37Jmh252H/gjF4UQAdy97zniLu8jQfm
      v0B+4UkqDFrSIprZfrQKm6GOD19/FnPqWLppvH8NljfUlB/j6WeWMW7KJFb8aQGnSi7y5/c+
      5dtNf0dOvJkjqz6gsNL8g5YpCqADKTpzii79xxCrriN7/2FCu0YTl5TG3u270QRGMGnCeGTD
      JcounOQvn20AIDtzJau+zWf5G69Qa7nOK+BCVLf+3D6qL5WlFwiJjSdp4C38/uF70CllSs6c
      wKwJpWT/l/x931m3lynOAnUgrY3V5BeVEtKlB8EYUYXGEaGzUXChjkCVjbC4HtSW5nP+xH4q
      4u7gF6N6Un/pPK26SMx1l4lPTkN3gw4Oks3MhQuVdO8RQ8GZEronxlJccA7/qHiyP/oDFX0f
      YdYt/YhQG2lRhRMfFeTWckUBdEJmowGVXyCaDjL+G5vqUPiF4a/94Sv0/wGGPE+ZVbvzwQAA
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='139' name='Relevent Values options in Filters' width='192'>
      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
      AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Top 10 Filter' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Top/Bottom N Dimension Filters' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Wildcard filter' width='192'>
      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
      78YAAAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
